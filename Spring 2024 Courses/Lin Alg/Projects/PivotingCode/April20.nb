(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     19374,        481]
NotebookOptionsPosition[     17881,        447]
NotebookOutlinePosition[     18354,        465]
CellTagsIndexPosition[     18311,        462]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "Title",
 CellChangeTimes->{{3.907669306665842*^9, 3.9076693162361827`*^9}, {
   3.90766952042272*^9, 3.907669521466138*^9}, {3.920888529230996*^9, 
   3.9208885323187785`*^9}, 
   3.9226142316885386`*^9},ExpressionUUID->"7e084f91-3641-4a17-9d1c-\
3ba9550868c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Range", "[", "6", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ",", "i"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"k", ",", "i"}], "}"}], "]"}], "]"}], "=", 
  RowBox[{"p", "\[LeftDoubleBracket]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "k"}], "}"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", "p"}], "Input",
 CellChangeTimes->{{3.922614497680337*^9, 3.9226145498886595`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6b3e79b3-82ef-4e48-ab6a-2a4588aebc1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.922614503911598*^9, 3.922614550565666*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"d9e0cb58-e839-4bea-9c59-17fe78c6f4c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.922614503911598*^9, 3.922614550565666*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"20ae91af-4ebb-460b-a4ea-216a0efe8e1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.922614503911598*^9, 3.9226145505813217`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"46fe8d64-56ff-4b82-b726-b0964a0e9f05"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", " ", 
  RowBox[{
   RowBox[{"imax", "!=", "k"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "imax"}], "}"}], ",", "All"}], 
      "\[RightDoubleBracket]"}], "=", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"imax", ",", "k"}], "}"}], ",", "All"}], 
      "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "\[LeftDoubleBracket]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "imax"}], "}"}], "\[RightDoubleBracket]"}], "=", 
     RowBox[{"p", "\[LeftDoubleBracket]", 
      RowBox[{"{", 
       RowBox[{"imax", ",", "k"}], "}"}], "\[RightDoubleBracket]"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.922614238814291*^9, 3.922614239940691*^9}, {
  3.922614336569539*^9, 
  3.9226144272719684`*^9}},ExpressionUUID->"929da511-4060-4027-a161-\
cd40354154ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jmax", " ", "=", " "}]], "Input",
 CellChangeTimes->{{3.922614305830124*^9, 
  3.922614329675199*^9}},ExpressionUUID->"ae72f297-a52b-43d9-bfcc-\
610e85bd88aa"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9226143118555264`*^9, 3.922614321278373*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"c91fa4ce-9b2a-4d1d-9a86-42e036bde726"],

Cell[BoxData["j_max"], "Output",
 CellChangeTimes->{{3.9226143118555264`*^9, 3.922614321278373*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"9b2ed3d4-e559-491e-a192-762f5add29fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "If"}]], "Input",
 CellChangeTimes->{{3.9226142483886385`*^9, 3.9226142492009478`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4915f353-2355-4339-86cd-a47e2f27621c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/If",
              ButtonNote->"paclet:ref/If"],
             "\"paclet:ref/If\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) if \\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) \
evaluates to True, and \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) if it \
evaluates to False. \\n\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"u\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) evaluates to neither True \
nor False. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/If", 
                    "paclet:ref/If", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/If.html"], 
                    None}, "http://reference.wolfram.com/language/ref/If.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldRest", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`If\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/If",
              ButtonNote->"paclet:ref/If"],
             "\"paclet:ref/If\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) if \\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) \
evaluates to True, and \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) if it \
evaluates to False. \\n\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"u\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) evaluates to neither True \
nor False. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"If\", \"[\", RowBox[{StyleBox[\"condition\", \"TI\"], \
\",\", StyleBox[\"t\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"]}], \"]\"}]\) \
gives \!\(\*StyleBox[\"t\", \"TI\"]\) if \!\(\*StyleBox[\"condition\", \
\"TI\"]\) evaluates to True, and \!\(\*StyleBox[\"f\", \"TI\"]\) if it \
evaluates to False. \n\!\(\*RowBox[{\"If\", \"[\", \
RowBox[{StyleBox[\"condition\", \"TI\"], \",\", StyleBox[\"t\", \"TI\"], \
\",\", StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"u\", \"TI\"]}], \"]\"}]\) \
gives \!\(\*StyleBox[\"u\", \"TI\"]\) if \!\(\*StyleBox[\"condition\", \
\"TI\"]\) evaluates to neither True nor False. ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/If", "Web" -> 
      "http://reference.wolfram.com/language/ref/If.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldRest, Protected}, "FullName" -> 
    "System`If"|>, False]]], "Output",
 CellChangeTimes->{3.922614250524429*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"1d2f92f5-c020-4fe0-8e6d-d2a8cfb70b28"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{579.6, 409.2},
WindowMargins->{{Automatic, 27}, {Automatic, 19.2}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"86aced1b-abc0-4ec3-b966-fee8f4e42a89"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 271, 5, 98, "Title",ExpressionUUID->"7e084f91-3641-4a17-9d1c-3ba9550868c4"],
Cell[CellGroupData[{
Cell[876, 31, 697, 19, 86, "Input",ExpressionUUID->"6b3e79b3-82ef-4e48-ab6a-2a4588aebc1f"],
Cell[1576, 52, 261, 5, 32, "Output",ExpressionUUID->"d9e0cb58-e839-4bea-9c59-17fe78c6f4c2"],
Cell[1840, 59, 218, 4, 32, "Output",ExpressionUUID->"20ae91af-4ebb-460b-a4ea-216a0efe8e1c"],
Cell[2061, 65, 263, 5, 80, "Output",ExpressionUUID->"46fe8d64-56ff-4b82-b726-b0964a0e9f05"]
}, Open  ]],
Cell[2339, 73, 1027, 27, 86, "Input",ExpressionUUID->"929da511-4060-4027-a161-cd40354154ad"],
Cell[CellGroupData[{
Cell[3391, 104, 183, 4, 28, "Input",ExpressionUUID->"ae72f297-a52b-43d9-bfcc-610e85bd88aa"],
Cell[3577, 110, 174, 2, 32, "Output",ExpressionUUID->"c91fa4ce-9b2a-4d1d-9a86-42e036bde726"],
Cell[3754, 114, 178, 2, 32, "Output",ExpressionUUID->"9b2ed3d4-e559-491e-a192-762f5add29fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3969, 121, 193, 3, 28, "Input",ExpressionUUID->"4915f353-2355-4339-86cd-a47e2f27621c"],
Cell[4165, 126, 13688, 317, 145, "Output",ExpressionUUID->"1d2f92f5-c020-4fe0-8e6d-d2a8cfb70b28"]
}, Open  ]]
}, Open  ]]
}
]
*)

