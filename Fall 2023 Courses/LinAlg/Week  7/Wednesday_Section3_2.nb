(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    238247,       5351]
NotebookOptionsPosition[    229783,       5212]
NotebookOutlinePosition[    230278,       5230]
CellTagsIndexPosition[    230235,       5227]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MA2330", "Title",
 CellChangeTimes->{{3.9022119421591744`*^9, 3.9022119446720896`*^9}, {
  3.902212079422366*^9, 
  3.9022120841135693`*^9}},ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-\
fddd9660e667"],

Cell[CellGroupData[{

Cell["Chapter 3 : Determinants", "Section",
 CellChangeTimes->{{3.902212090346334*^9, 3.9022121014134884`*^9}, 
   3.903769019997009*^9, {3.903769131050271*^9, 3.903769135610148*^9}, {
   3.90584117835112*^9, 
   3.9058411843358283`*^9}},ExpressionUUID->"124a94b1-5c4b-4bd3-9429-\
d3d515e88560"],

Cell[CellGroupData[{

Cell["3.1 Intro", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.904190606836274*^9, 
  3.904190626941572*^9}, {3.904564891951187*^9, 3.9045649092356987`*^9}, {
  3.9058412072888966`*^9, 
  3.9058412162703347`*^9}},ExpressionUUID->"df3861a8-67e3-4d73-9619-\
5c53beb7e949"],

Cell[TextData[{
 "Starting slow we want to understand where the scalar\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", " ", "d"}], " ", "-", " ", 
    RowBox[{"b", " ", "c"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "378915ac-6425-4470-b590-ea6865c313aa"],
 "\ncomes from in the expression \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], ")"}], 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"a", " ", "d"}], "-", 
       RowBox[{"b", " ", "c"}]}]], 
     RowBox[{"(", GridBox[{
        {"d", 
         RowBox[{"-", "b"}]},
        {
         RowBox[{"-", "c"}], "a"}
       }], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f9db821-3969-4f46-ad0a-af52c42d64ca"],
 "\nIt turns up if we just multiply"
}], "Text",
 CellChangeTimes->{{3.905841232662465*^9, 3.9058413587266617`*^9}, {
  3.9058414513191996`*^9, 3.9058414882897205`*^9}, {3.9058415445909324`*^9, 
  3.9058415445909324`*^9}, {3.90584638441019*^9, 
  3.905846393001525*^9}},ExpressionUUID->"e06f1caf-ad3a-468f-810b-\
4a177e5d1e8c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"a", "b"},
       {"c", "d"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"d", 
        RowBox[{"-", "b"}]},
       {
        RowBox[{"-", "c"}], "a"}
      }], ")"}]}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.905841382725989*^9, 3.9058414328231955`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"958277eb-aa35-4b58-a88d-27fe64e02920"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.905841400740165*^9, 3.9058414458964376`*^9}},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"3ba6d529-56b1-4816-8adf-\
0ed7fc6cfddc"]
}, Open  ]],

Cell[TextData[{
 "This determinant was useful because the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "05c257bd-07ad-488c-87fa-7350d171c6e6"],
 " was invertible iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "d"}], "-", " ", 
     RowBox[{"b", " ", "c"}]}], "\[NotEqual]", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5217179e-a661-4c0f-b574-378e161d9531"],
 ". \nFor a three by three we can row reduce and get "
}], "Text",
 CellChangeTimes->{{3.9058415123212395`*^9, 3.9058415942012634`*^9}, {
  3.9058416500080643`*^9, 3.9058416969420433`*^9}, {3.9058421640300894`*^9, 
  3.90584217652498*^9}},ExpressionUUID->"ac5b9127-38ea-4a4b-af8b-\
0921091690b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"i", ",", "j"}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"REF", "=", "A"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "REF", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowAdd", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}]}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058417014406233`*^9, 3.905841827048665*^9}, {
  3.905841864855466*^9, 3.905841878633116*^9}, {3.9058419147951174`*^9, 
  3.905842002899754*^9}, {3.9058420723239565`*^9, 3.905842146224084*^9}, {
  3.9058423267610207`*^9, 3.9058423527735195`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"0a8b6b6b-b223-4576-b9a9-8c3f3d929a3e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["a", 
       RowBox[{"1", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"2", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "3"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9058417073923473`*^9, 3.9058417147491903`*^9}, {
   3.905841769075408*^9, 3.9058418276891365`*^9}, {3.9058418719529886`*^9, 
   3.9058418792889013`*^9}, {3.905841944717828*^9, 3.905841955237821*^9}, {
   3.9058419921426916`*^9, 3.9058420191280885`*^9}, 3.905842085554878*^9, {
   3.9058421200532875`*^9, 3.9058421468333073`*^9}, 3.905842354163453*^9, 
   3.905842642718196*^9, {3.9058427427082086`*^9, 3.9058427874174356`*^9}, 
   3.905842857448779*^9, 3.905842889112296*^9, 3.905843104451559*^9, 
   3.90584702287602*^9},
 CellLabel->
  "Out[182]//MatrixForm=",ExpressionUUID->"fc0dba58-e05f-4d16-a0aa-\
1430e5275577"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}]},
       {
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*SubscriptBox[\\\"a\\\
\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"1\\\"}]]\\))\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 2, 
          Subscript[$CellContext`a, 1, 1], 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
      Subscript[$CellContext`a, 3, 1], 
      Subscript[$CellContext`a, 3, 2], 
      Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2, 
      Subscript[$CellContext`a, 1, 1], 2], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.905847022883219*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"2d2cab1a-8b6a-4781-b897-34ac799d5fab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "3"}]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*SubscriptBox[\\\"a\\\
\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"1\\\"}]]\\))\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 3, 
          Subscript[$CellContext`a, 1, 1], 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3, 
      Subscript[$CellContext`a, 1, 1], 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.9058470228959312`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"a39be0ad-6b59-452a-86a3-c9072837281d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "3"}]]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}]]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, -Subscript[$CellContext`a, 2, 1], 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"1\\\"}]]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, -Subscript[$CellContext`a, 3, 1], 1],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 3, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, -Subscript[$CellContext`a, 2, 1], 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, -Subscript[$CellContext`a, 3, 1], 1]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.9058470229148865`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"3207e7dc-11b6-4edd-bf99-ca51be820040"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can continue row reducing if our next pivot (in the 2,2 slot) \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "2"}]]}], " ", 
      SubscriptBox["a", 
       RowBox[{"2", ",", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"1", ",", "1"}]], " ", 
      SubscriptBox["a", 
       RowBox[{"2", ",", "2"}]]}]}], " ", "\[NotEqual]", "0"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cc7529a5-ba66-4594-9652-29869e9af2df"]
}], "Text",
 CellChangeTimes->{{3.9058421940826635`*^9, 3.905842307513376*^9}, {
  3.905842416040587*^9, 3.905842421663718*^9}, {3.905842586412838*^9, 
  3.9058425867252674`*^9}},ExpressionUUID->"46aacde4-1076-41d4-87e3-\
8926e43a7659"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", 
       RowBox[{"REF", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowAdd", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"3", ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["a", 
                RowBox[{"1", ",", "2"}]]}], " ", 
              SubscriptBox["a", 
               RowBox[{"3", ",", "1"}]]}], "+", 
             RowBox[{
              SubscriptBox["a", 
               RowBox[{"1", ",", "1"}]], " ", 
              SubscriptBox["a", 
               RowBox[{"3", ",", "2"}]]}]}], ")"}]}]}], "}"}], "}"}], ",", 
       "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"REF", "\[LeftDoubleBracket]", 
  RowBox[{"3", ",", "3"}], 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.905841643253229*^9, 3.905841644190132*^9}, {
   3.9058423146080446`*^9, 3.9058423172484355`*^9}, {3.9058423629918437`*^9, 
   3.9058423899509716`*^9}, {3.905842425350308*^9, 3.905842474390275*^9}, {
   3.9058425338307924`*^9, 3.9058425397866435`*^9}, {3.9058425776772113`*^9, 
   3.9058426136747155`*^9}, {3.9058426629052095`*^9, 3.90584272629865*^9}, {
   3.9058427687344017`*^9, 3.9058427840025883`*^9}, {3.9058428646060667`*^9, 
   3.9058428853919964`*^9}, 3.905843096516762*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"be23a372-819d-4589-b392-9c2a9beb67ca"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "2"}]]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "3"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*RowBox[{RowBox[{\
RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\"}]]}], \\\" \\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\
\", \\\"1\\\"}]]}], \\\"+\\\", RowBox[{SubscriptBox[\\\"a\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}]], \\\" \\\", \
SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]]}]}]\\))\\!\
\\(\\*SubscriptBox[\\(row\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 
          3, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
          Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, (-Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2]) (-
        Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2]), (-
        Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2]) (-
        Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 3, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3])}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 
      3, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9058429740024347`*^9, {3.905843010977914*^9, 3.9058430496007404`*^9}, 
   3.9058431173735647`*^9, 3.9058470289806423`*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"864489e4-769e-454d-9937-f4f084570462"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", "0", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "3"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["a", 
                 RowBox[{"2", ",", "2"}]]}], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "1"}]]}], "+", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "1"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "3"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "1"}]]}], "-", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "1"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["a", 
                 RowBox[{"2", ",", "3"}]]}], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "2"}]]}], "+", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "2"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{RowBox[{SubscriptBox[\\\"a\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\"}]], \\\" \\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \
\\\",\\\", \\\"1\\\"}]]}], \\\"-\\\", RowBox[{SubscriptBox[\\\"a\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}]], \\\" \\\", \
SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"2\\\"}]]}]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 
          Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] - 
          Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 2],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, 0, 
      Subscript[$CellContext`a, 1, 1] (
       Subscript[$CellContext`a, 1, 3] (-Subscript[$CellContext`a, 2, 2] 
          Subscript[$CellContext`a, 3, 1] + 
         Subscript[$CellContext`a, 2, 1] Subscript[$CellContext`a, 3, 2]) + 
       Subscript[$CellContext`a, 1, 2] (
         Subscript[$CellContext`a, 2, 3] Subscript[$CellContext`a, 3, 1] - 
         Subscript[$CellContext`a, 2, 1] Subscript[$CellContext`a, 3, 3]) + 
       Subscript[$CellContext`a, 1, 1] (-Subscript[$CellContext`a, 2, 3] 
          Subscript[$CellContext`a, 3, 2] + 
         Subscript[$CellContext`a, 2, 2] Subscript[$CellContext`a, 3, 3]))}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 
      Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] - 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 2]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9058429740024347`*^9, {3.905843010977914*^9, 3.9058430496007404`*^9}, 
   3.9058431173735647`*^9, 3.9058470290155582`*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"596e4819-dc42-402f-88ba-5448bff44d18"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", 
   RowBox[{"1", ",", "1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "3"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "-", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "2"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9058430496163597`*^9, 3.9058431174204288`*^9, 
  3.9058470290435977`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"78ee2011-c904-472a-9316-5ea79090f8c0"]
}, Open  ]],

Cell[TextData[{
 "This is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "11"], TraditionalForm]],ExpressionUUID->
  "13604221-f76d-43b1-b85b-ef34d8e13b53"],
 " times the determinant of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", "3"}], TraditionalForm]],ExpressionUUID->
  "2c48ad0d-4ab7-4c3b-95aa-03e138fd6985"],
 " matrix. We need to look at this carefully to see how to compute it.  We \
also need to work out how to define and compute a determinant for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "\[Times]", "4"}], TraditionalForm]],ExpressionUUID->
  "3d3d3fe3-019c-4dc4-a199-8ee32a2edd19"],
 " matrices and larger. "
}], "Text",
 CellChangeTimes->{{3.9058431458709736`*^9, 
  3.9058432892257166`*^9}},ExpressionUUID->"017e868d-ebc0-4702-a115-\
0decfd25cf22"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["a", 
   RowBox[{"1", ",", "1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "3"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "-", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "2"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]],
 CellChangeTimes->{3.9058430496163597`*^9, 3.9058431174204288`*^9, 
  3.9058470290435977`*^9},ExpressionUUID->"5c65401a-e57d-4a4e-8b1b-\
f66cb36fa9a6"]], "Text",
 CellChangeTimes->{
  3.9058470931756363`*^9},ExpressionUUID->"193d6fa3-f718-4c67-8a80-\
a00eb4a36b82"],

Cell[TextData[{
 "Definition: For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">=", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d833c393-dd1d-4531-b190-902195c73921"],
 " the ",
 StyleBox["determinant",
  FontVariations->{"Underline"->True}],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "01cefce8-b387-445f-b1a7-8766c5e5de5e"],
 " is the sum\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "A", ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "n"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"1", "+", "j"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "j"}]], " ", 
      RowBox[{"det", "(", 
       SubscriptBox["\[DoubleStruckCapitalA]", 
        RowBox[{"1", ",", "j"}]], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7abb5281-ed00-43d9-9cff-7adbe304b08b"],
 "\nwhere the (n-1)\[Times](n-1) matrices ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalA]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ea7f6bd4-e4d9-4b7e-9887-abdf66f8c6d8"],
 " are simply the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6edc02a8-a4ab-4448-a706-8eff2ec6476a"],
 "with the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "05d947fb-b5d9-4d7e-a4bf-6ec316c12de0"],
 " row and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["j", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cf903da7-b985-4cb6-81b3-6dde36b1731c"],
 " column deleted.  The term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", 
     RowBox[{"i", ",", "j"}]], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"i", "+", "j"}]], 
     RowBox[{"det", "(", 
      SubscriptBox["\[DoubleStruckCapitalA]", 
       RowBox[{"i", ",", "j"}]], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7c0878d5-fc7c-44da-aa3e-c51c4b20f03a"],
 " is called the ",
 StyleBox["(i,j)-cofactor",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", 
     RowBox[{"i", ",", "j"}]], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     RowBox[{"i", "+", "j"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0a6ca9aa-37c3-4f43-ac61-0bc201950483"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"det", "(", 
    SubscriptBox["A", 
     RowBox[{"i", ",", "j"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dd1e3c82-2e89-4daa-9213-32f50545532a"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b60a0114-20c3-443c-8599-fd0f428fce8b"]
}], "Text",
 CellChangeTimes->{{3.905945227546233*^9, 3.905945368961128*^9}, {
  3.9059454045008116`*^9, 3.905945450530918*^9}, {3.9059454869647493`*^9, 
  3.9059457643207483`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"0881227d-bb5c-489d-8c1b-83c5c531b977"],

Cell[TextData[{
 "Theorem 1: There is nothing special about the first row. You can compute \
the determinant using the ",
 StyleBox["cofactor expansion",
  FontVariations->{"Underline"->True}],
 " about the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1a18009d-762f-4af7-9ff9-ba51fb071094"],
 " row \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "A", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"i", "+", "j"}]], 
       SubscriptBox["a", 
        RowBox[{"i", ",", "j"}]], " ", 
       RowBox[{"det", "(", 
        SubscriptBox["\[DoubleStruckCapitalA]", 
         RowBox[{"i", ",", "j"}]], ")"}]}]}], "=", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"i", ",", "j"}]], " ", 
        SubscriptBox["C", 
         RowBox[{"i", ",", "j"}]]}]}], "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"i", ",", "1"}]], 
        SubscriptBox["C", 
         RowBox[{"i", ",", "1"}]]}], "+", "\[Ellipsis]", "+", " ", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"i", ",", "n"}]], 
        SubscriptBox["C", 
         RowBox[{"i", ",", "n"}]]}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7cc6ba1f-ff20-46d9-a44c-4dfe72529b90"],
 "\nor the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["j", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "215e79bc-260e-4a5f-909b-97be489fa14d"],
 " column\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "A", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"i", "+", "j"}]], 
       SubscriptBox["a", 
        RowBox[{"i", ",", "j"}]], " ", 
       RowBox[{"det", "(", 
        SubscriptBox["\[DoubleStruckCapitalA]", 
         RowBox[{"i", ",", "j"}]], ")"}]}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"1", ",", "j"}]], 
       SubscriptBox["C", 
        RowBox[{"1", ",", "j"}]]}], "+", "\[Ellipsis]", "+", " ", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", ",", "j"}]], 
       SubscriptBox["C", 
        RowBox[{"n", ",", "j"}]]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "09debc04-3ffb-40b3-96f8-0b1a6f4b2af9"]
}], "Text",
 CellChangeTimes->{{3.905945227546233*^9, 3.905945368961128*^9}, {
  3.9059457850361557`*^9, 3.9059460302952585`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"25cfa395-678a-4069-bd05-38c88de4a8aa"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"i", "+", "j"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4b627bbb-6622-4dc4-a7bf-42cf2aaffcbe"],
 " in the definition of the cofactor is a simple checker board pattern. "
}], "Text",
 CellChangeTimes->{{3.905945227546233*^9, 3.905945289012082*^9}, {
  3.905946063878742*^9, 3.9059460726805744`*^9}, {3.905946122908746*^9, 
  3.905946162860161*^9}},ExpressionUUID->"806d2203-df55-46d6-9703-\
180c873079d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<values\>\"", "->", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "j"}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<pic\>\"", "->", 
      RowBox[{"MatrixPlot", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"i", "+", "j"}]], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.90594607442981*^9, 3.90594611206413*^9}, {
  3.905946168124719*^9, 3.9059462170450115`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"cc69fc0f-b9e5-420f-b40f-4c63cfcbc460"],

Cell["\<\
If asked to compute a determinant you should pick a convenient column or row! \
 All rows are convenient for a triangular matrix. \
\>", "Text",
 CellChangeTimes->{{3.905946237729849*^9, 3.9059462663987603`*^9}, {
  3.905946403485376*^9, 3.90594640537014*^9}, {3.905946610738181*^9, 
  3.9059466348253517`*^9}},ExpressionUUID->"7846d1c2-322c-4448-93d7-\
f929e65ce6c2"],

Cell[TextData[{
 "Theorem 2: If T is a triangular ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7ab7eb0a-01f6-409b-9868-e3b596c8975d"],
 " matrix then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"det", "(", "T", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "435e45cc-b05f-4aa3-8712-478e437c12de"],
 " is the product of the diagonal entries\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "T", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["T", 
       RowBox[{"1", ",", "1"}]], "\[Times]", 
      SubscriptBox["T", 
       RowBox[{"2", ",", "2"}]], "\[Times]", "\[Ellipsis]", "\[Times]", 
      SubscriptBox["T", 
       RowBox[{"n", ",", "n"}]]}], "=", 
     RowBox[{
      SubsuperscriptBox["\[CapitalPi]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SubscriptBox["T", 
       RowBox[{"i", ",", "i"}]]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f514fa1c-2a40-4948-9b51-893b3c3d1d4b"]
}], "Text",
 CellChangeTimes->{{3.905946487093292*^9, 3.9059466079309053`*^9}, {
  3.905946650501172*^9, 3.9059466574761143`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"d6db6598-eb3a-459f-a85a-800baecc50be"],

Cell[TextData[{
 "A general co-factor expansion is incredibly slow for a large ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e38e9e9a-39bd-47b2-a5c8-04d251a768f4"],
 " matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec993def-9024-4326-8918-16b63db9c127"],
 ". The cofactor expression reduces the computation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"det", "(", "A", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9f2076d2-390e-4bb1-97e8-300935b2f6aa"],
 " to the sum of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ef8b4f6e-91d8-4766-9a63-c413d84fd99a"],
 " smaller - (n-1)\[Times](n-1) - matrices.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"W", "(", "n", ")"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a18c0747-ec75-444a-957b-55bbc107f39f"],
 "is a measure of how much work it is to compute the determinant using the \
cofactor expansion then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "n", ")"}], "\[TildeTilde]", 
    RowBox[{
     RowBox[{"n", "\[Times]", 
      RowBox[{"w", "(", 
       RowBox[{"n", "-", "1"}], ")"}]}], "+", 
     RowBox[{"n", " ", "multiplications", " ", "and", " ", "additions"}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c20e5125-ab60-4257-8c56-785d8742ff9f"],
 ".\nIgnoring the extra multiplications and additions we have\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "n", ")"}], "=", 
    RowBox[{"n", " ", 
     RowBox[{"w", "(", 
      RowBox[{"n", "-", "1"}], ")"}], " "}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a0388ed0-a00a-4ba1-8cab-aa2085d1f100"],
 "\nwhich has the solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "n", ")"}], "=", 
    RowBox[{"c", " ", 
     RowBox[{"n", "!"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4e9f4540-66df-4175-82a7-3f3686f03fed"],
 ".  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", " ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6de4a209-c7ea-4529-a59c-f4f1c92d82b6"],
 "and n=30 then computing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "A", ")"}], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b88db9bd-7da5-4314-b110-ecf870816a9e"],
 "using the co-factor expansion is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "30", ")"}], "=", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"30", "!"}]}], " ", "=", " ", 
     RowBox[{"c", " ", "265252859812191058636308480000000"}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7aaabac5-1138-4d91-8657-c036b24599c0"],
 ". This is not practical.  In an algorithm class this is called an algorithm \
with an exponential growth rate.   "
}], "Text",
 CellChangeTimes->{{3.905946673681905*^9, 3.905947149844494*^9}, {
  3.905947206540635*^9, 
  3.9059472599195986`*^9}},ExpressionUUID->"e97ebb1a-9b03-40d7-8600-\
20fa0023d3ca"],

Cell[TextData[{
 "The next section 3.2 gives us a practical algorithm with complexity  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", " ", 
    SuperscriptBox["n", "3"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e326791e-cb0d-4e66-8edb-ef8b6ef3b624"],
 ".  It is just row-reduction. "
}], "Text",
 CellChangeTimes->{{3.905947850285794*^9, 
  3.905947901668924*^9}},ExpressionUUID->"7c71882e-5a03-438c-bb7d-\
a1c27e511fb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"30", "!"}]], "Input",
 CellChangeTimes->{{3.905947104124705*^9, 3.9059471315600915`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"5ed49eeb-e2b3-419d-8d2b-ef88a0958179"],

Cell[BoxData["265252859812191058636308480000000"], "Output",
 CellChangeTimes->{{3.90594710694617*^9, 3.9059471319059286`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"be252919-c75e-4c0f-945b-ea1a7a5daa37"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Properties", "Subsection",
 CellChangeTimes->{{3.9028328951014414`*^9, 3.9028328990687666`*^9}, {
  3.905948024720476*^9, 
  3.905948029454219*^9}},ExpressionUUID->"cf66bce1-a297-479e-94bb-\
ce26c6195628"],

Cell["\<\
Row operations change the determinant of a matrix in simple ways!\
\>", "Text",
 CellChangeTimes->{{3.905948042406664*^9, 
  3.9059480721351724`*^9}},ExpressionUUID->"5df654ad-a06a-4ba3-8d32-\
e2b908fe3fee"],

Cell[TextData[{
 "Theorem 3: Row Operations on a square matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "17d45e9c-af40-4545-be39-526518a50411"],
 "\na) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "B", ")"}], "=", 
    RowBox[{"det", "(", "A", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f998b460-0b22-4a16-a28a-7681b845ea7e"],
 " if ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7d914965-ac2a-4e39-aabd-875dab15864b"],
 " is obtained from A by adding a multiple of one row to another. \nb) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "B", ")"}], "=", 
    RowBox[{"-", 
     RowBox[{"det", "(", "A", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1d2040a8-6bba-47b2-955b-ed9c7e789ca3"],
 " if ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f36250e-95a0-4ddc-bc64-865057c243a1"],
 " is obtained from A by switching two rows. \nb) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "B", ")"}], "=", 
    RowBox[{"k", " ", 
     RowBox[{"det", "(", "A", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2c8752e1-89a1-4272-8f86-249b0ac879f4"],
 " if ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9326e116-9280-4739-84a9-2d302e00000a"],
 " is obtained from A by scaling one row by k. "
}], "Text",
 CellChangeTimes->{{3.905948078900319*^9, 3.9059482752118454`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"59e0a85b-ac45-44c2-9e7f-9cf615aff611"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"REF", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "8", ",", 
        RowBox[{"-", "9"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "7", ",", "0"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "REF", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowAdd", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", "1"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowSwitch", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9059482892621374`*^9, 3.9059484904450045`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"551ab84e-e2ef-4dce-9fcc-549ebbd3d5f2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "4"}], "2"},
     {
      RowBox[{"-", "2"}], "8", 
      RowBox[{"-", "9"}]},
     {
      RowBox[{"-", "1"}], "7", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9059483316360264`*^9, {3.9059483620543456`*^9, 3.905948435173551*^9}, {
   3.905948471773294*^9, 3.905948491272992*^9}},
 CellLabel->
  "Out[53]//MatrixForm=",ExpressionUUID->"f77c4ac4-6939-40c6-8b78-\
38166b036eaf"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "4"}], "2"},
       {"0", "0", 
        RowBox[{"-", "5"}]},
       {"0", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"2\\\"}]\\)row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, 2, 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"1\\\"}]\\)row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 1, 1],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{1, -4, 2}, {0, 0, -5}, {0, 3, 2}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, 2, 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 1, 1]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.905948362183036*^9, 3.905948435173551*^9}, {
  3.905948471773294*^9, 3.905948491272992*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"6322d921-92a2-4fac-9c15-d59e351a09fe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "4"}], "2"},
       {"0", "3", "2"},
       {"0", "0", 
        RowBox[{"-", "5"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule]\\!\\(\\*SubscriptBox[\\(row\\\
), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2, 3],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule]\\!\\(\\*SubscriptBox[\\(row\\\
), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3, 2],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{1, -4, 2}, {0, 3, 2}, {0, 0, -5}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \
\(``\)]\)", 2, 3], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \
\(``\)]\)", 3, 2]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.905948362183036*^9, 3.905948435173551*^9}, {
  3.905948471773294*^9, 3.9059484912885723`*^9}},
 CellLabel->
  "During evaluation of \
In[52]:=",ExpressionUUID->"67af6c75-3bc0-4348-a116-dd72af042980"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Computers compute the determinant of a square ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c0f8ef9c-bdf8-4049-9ef4-20d834d68b2a"],
 " matrix A by row reducing to to an echelon form ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3c086315-b956-482b-8443-a54ea99cbc3b"],
 " and then multiplying the diagonal elements together.  In symbols,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", 
     RowBox[{"(", "A", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[PlusMinus]", "det"}], 
      RowBox[{"(", "U", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "r"], 
       SubscriptBox["u", "11"], "\[Times]", 
       SubscriptBox["u", "22"], "\[Times]", "\[Ellipsis]", "\[Times]", 
       SubscriptBox["u", "nn"]}], "=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "r"], 
       SubsuperscriptBox["\[CapitalPi]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubscriptBox["u", "ii"]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2a38e019-e731-4c6f-8ba6-20bab3f61d46"],
 " \nThe matrix A is invertible iff it has a pivot entry in each row.  The \
matrix A is invertible iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", "A", ")"}], "\[NotEqual]", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "958b712b-18f5-4fa6-b0c0-04409e5ee047"],
 "."
}], "Text",
 CellChangeTimes->{{3.905948558196581*^9, 
  3.9059488783748283`*^9}},ExpressionUUID->"3f3b2455-8c88-4d64-8600-\
0114e59ee954"],

Cell[TextData[{
 "The complexity of reducing A to echelon form ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "54983f04-445a-4a9b-b7ef-2f388495ea6a"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", "(", "n", ")"}], "=", 
    RowBox[{"c", " ", 
     SuperscriptBox["n", "3"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "04d992e6-9e22-4186-8c13-864a5c5bd77c"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059491268519974`*^9}},ExpressionUUID->"5d5addaf-8842-4a89-b7e9-\
9f759a7d6b34"],

Cell[TextData[{
 "To reduce the first column you need to compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "\[Times]", 
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "56311c10-8c3b-4f2f-9507-0ff12be9b3c3"],
 " block below and to the left of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0133882a-16e5-4ced-8be7-f450ef84f614"],
 " entry: this is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44c5750f-0096-471e-bbf3-61a5d830503b"],
 " multiplications and additions.  "
}], "Subitem",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059491192447567`*^9}},ExpressionUUID->"d3fe47e9-32d5-41d3-80f6-\
483a6ebd55f4"],

Cell[TextData[{
 "To reduce the second column you need to compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "2"}], ")"}], "\[Times]", 
    RowBox[{"(", 
     RowBox[{"n", "-", "2"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "470315c5-2e02-44bf-9e09-9413b5fe4e9d"],
 " block below and to the left of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", ",", "2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4b9ca652-174a-425b-b23c-ad2ddc843891"],
 " entry: this is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "-", "2"}], ")"}], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7a5dee93-0370-4db9-8581-ee0e03f52aec"],
 " multiplications and additions.  "
}], "Subitem",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059491608867617`*^9}},ExpressionUUID->"cb4b8c28-76ca-40c7-bd9b-\
61b0f81599a5"],

Cell[TextData[{
 "To reduce the third column column you need to compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "-", "3"}], ")"}], "\[Times]", 
    RowBox[{"(", 
     RowBox[{"n", "-", "3"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8b4b8bb1-89f3-4c41-9833-9d42a9c73fb2"],
 " block below and to the left of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", ",", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "099439ef-e03f-4149-91cf-f7abab671e25"],
 " entry: this is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "-", "3"}], ")"}], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1baa2ed1-537b-41bb-9067-6687559f394e"],
 " multiplications and additions."
}], "Subitem",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059491991149836`*^9}},ExpressionUUID->"4a29b33d-2a90-403b-b0f1-\
53c78c20e2d4"],

Cell["\[Ellipsis]", "Subitem",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059492039988976`*^9}},ExpressionUUID->"071bbd0a-b28e-4025-ad41-\
fea14fdcb9d9"],

Cell[TextData[{
 "Adding up these operations gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"n", "-", "i"}], ")"}], "2"]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"n", "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["n", "3"]}]}], ")"}]}], "\[TildeTilde]", 
     RowBox[{
      FractionBox["2", "6"], " ", 
      SuperscriptBox["n", "3"]}], "\[TildeTilde]", 
     RowBox[{"c", " ", 
      SuperscriptBox["n", "3"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "262cb9bd-33d1-4880-9545-4e69c84021a6"],
 "  "
}], "Item",
 CellChangeTimes->{{3.9059488840869455`*^9, 
  3.9059493013672247`*^9}},ExpressionUUID->"54379b7d-ed77-4fe3-880b-\
2a48d4c58100"],

Cell[TextData[{
 "An ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "adc79b79-ddb2-4180-bc49-1704aee972ca"],
 " algorithm is practical and exponential algorithm is not! "
}], "Text",
 CellChangeTimes->{{3.9059494279045105`*^9, 3.905949443973736*^9}, {
  3.9059515287485676`*^9, 
  3.905951534586204*^9}},ExpressionUUID->"07bdb8f5-19c4-4c95-9171-\
4791f88d2214"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{"n", "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["n", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["n", "3"]}]}], ")"}]}], ",", 
   RowBox[{"0.333", " ", 
    RowBox[{"n", "^", "3"}]}], " ", ",", 
   RowBox[{"n", "!"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.905949331637642*^9, 3.9059494131712856`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"f632f4a0-9499-4a82-9e7a-e7a53d7103f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4900", ",", "5203.125`", ",", "15511210043330985984000000"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9059493333055873`*^9, 3.9059494136239495`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"2f789dfc-e906-4387-8d60-16fad4107b9b"]
}, Open  ]],

Cell[TextData[{
 "Theorem 6. Multiplicative Property\nIf A and B are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "n"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7d890b67-2d1e-43e2-b755-c1b13209be94"],
 " matrices then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", 
     RowBox[{"A", " ", "B"}], ")"}], "=", 
    RowBox[{
     RowBox[{"det", "(", "A", ")"}], 
     RowBox[{"det", "(", "B", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a2087bb8-f417-47e4-b276-f64abe622041"]
}], "Text",
 CellChangeTimes->{{3.905949468552476*^9, 3.9059495111314373`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"482e816f-cdaf-48bc-bb43-881a75a60e11"],

Cell[TextData[{
 "Warning:   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", 
     RowBox[{"A", " ", "+", "B"}], ")"}], "\[NotEqual]", 
    RowBox[{
     RowBox[{"det", "(", "A", ")"}], "+", 
     RowBox[{"det", "(", "B", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2022d6f7-84c3-4f48-859a-2fb5fd2ffb88"]
}], "Text",
 CellChangeTimes->{{3.905949468552476*^9, 3.9059495111314373`*^9}, {
   3.905949541576042*^9, 3.905949548434996*^9}, {3.9059502867313204`*^9, 
   3.9059502922553277`*^9}, 3.9059508619697456`*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"a80d4e61-d8d1-465a-89b5-190d39825d2d"],

Cell["\<\
However, changing one column of a matrix does give a linear transformation!\
\>", "Text",
 CellChangeTimes->{{3.9059509305297823`*^9, 
  3.905951003517476*^9}},ExpressionUUID->"24506633-e8f4-499f-9107-\
0e9505a74888"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ANew", "=", "A"}], ";", 
  RowBox[{
   RowBox[{"ANew", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", "u"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"MatrixForm", ",", 
    RowBox[{"{", 
     RowBox[{"A", ",", "ANew"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.905951009431693*^9, 3.905951349162405*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"81b44001-b67d-436e-bfd3-6a86c15c7790"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"4", 
       RowBox[{"-", "1"}], 
       RowBox[{"-", "5"}], 
       RowBox[{"-", "4"}]},
      {"0", "4", "0", "7"},
      {
       RowBox[{"-", "1"}], 
       RowBox[{"-", "5"}], 
       RowBox[{"-", "7"}], "8"},
      {"5", 
       RowBox[{"-", "3"}], 
       RowBox[{"-", "5"}], 
       RowBox[{"-", "6"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}, {2,"2"->
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"4", 
       RowBox[{"-", "0.6502499494626464`"}], 
       RowBox[{"-", "5"}], 
       RowBox[{"-", "4"}]},
      {"0", 
       RowBox[{"-", "0.7708021093180166`"}], "0", "7"},
      {
       RowBox[{"-", "1"}], "0.24814491251673676`", 
       RowBox[{"-", "7"}], "8"},
      {"5", 
       RowBox[{"-", "0.38222147034992604`"}], 
       RowBox[{"-", "5"}], 
       RowBox[{"-", "6"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}}, 1]], "Output",
 CellChangeTimes->{3.9059513521741357`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"885f63cd-e1c7-4e58-9921-1a225bc2eed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"x_", ",", "j_", ",", "A_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ANew", "=", "A"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "j"}], "\[RightDoubleBracket]"}], "=", "x"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Det", "[", "ANew", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", 
     RowBox[{"u", ",", "j", ",", "A"}], "]"}], "+", 
    RowBox[{"T", "[", 
     RowBox[{"v", ",", "j", ",", "A"}], "]"}]}], ",", 
   RowBox[{"T", "[", 
    RowBox[{
     RowBox[{"u", "+", "v"}], ",", "j", ",", "A"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.905951009431693*^9, 3.905951349162405*^9}, {
  3.905951560998683*^9, 3.905951585894478*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"f3dc9506-f5d2-49fc-90e0-71445b9f2da4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "222.55658966068108`"}], ",", 
   RowBox[{"-", "222.5565896606811`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9059511585724163`*^9, 3.905951226259383*^9}, {
   3.905951314054825*^9, 3.9059513259443827`*^9}, 3.905951363701973*^9, {
   3.905951562850547*^9, 3.9059515863805647`*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"d2bf1a79-a5b6-4023-812a-669b16cbbd2f"]
}, Open  ]],

Cell["\<\
Remember computing determinants using row-reduction is just as much work as \
solving a linear system. Computing determinants using the cofactor expansion \
is impossible for non-tiny matrices.  The next section is of theoretical \
interest only. \
\>", "Text",
 CellChangeTimes->{{3.905951418027772*^9, 
  3.9059515152049203`*^9}},ExpressionUUID->"c2b1b3e7-a44e-4ff3-ada8-\
f9707ef8439a"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Cramer\[CloseCurlyQuote]s Rule and Volume", "Subsection",
 CellChangeTimes->{{3.9028328951014414`*^9, 3.9028328990687666`*^9}, {
  3.905948024720476*^9, 3.905948029454219*^9}, {3.9059516096748967`*^9, 
  3.9059516245465994`*^9}},ExpressionUUID->"5f4ffb67-8c96-492a-baef-\
8a8cb86cdce4"],

Cell[CellGroupData[{

Cell["Cramer\[CloseCurlyQuote]s Rule", "Subsubsection",
 CellChangeTimes->{{3.905953200965405*^9, 
  3.9059532073995605`*^9}},ExpressionUUID->"7076002c-50f5-442b-86a8-\
7fb36c6ddefc"],

Cell[TextData[{
 "Cramer\[CloseCurlyQuote]s rule is a formula for the components of the \
solution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "b"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c7475d8a-95ee-4c9c-b66a-f687fea6ac56"],
 " which uses determinants.  "
}], "Text",
 CellChangeTimes->{{3.905951639670662*^9, 3.90595172699238*^9}, {
  3.9059517949703407`*^9, 
  3.9059519082588663`*^9}},ExpressionUUID->"e242418a-f0a1-46cc-ac8a-\
d9524a9ae40d"],

Cell[TextData[{
 "Theorem 7: Cramer\[CloseCurlyQuote]s Rule\nThe coordinates of the solution \
of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "=", "b"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c0b265f1-d827-4976-b855-b7f3f4d06f42"],
 " are \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "=", 
    RowBox[{
     RowBox[{"det", "(", 
      RowBox[{
       SubscriptBox["A", "i"], "(", "b", ")"}], ")"}], "/", 
     RowBox[{"det", "(", "A", ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e73db2ec-d647-4401-9852-44970a986f8f"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "i"], "(", "b", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "06638c0a-1732-49e2-9bfe-2a491f6a352f"],
 " is the matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "64c49410-e8c8-49f4-818f-253218e1fed5"],
 " with the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f5b87955-920f-4ab3-af30-82e5f7ef0558"],
 " column replaced by the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "17bb5a78-1a02-4f1a-a39d-b521b6d80890"]
}], "Text",
 CellChangeTimes->{{3.905951639670662*^9, 3.90595172699238*^9}, {
  3.9059517949703407`*^9, 3.9059519221664124`*^9}, {3.905951960891354*^9, 
  3.9059520377162685`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"12e7f049-8e52-43fa-ade7-a7215a60c971"],

Cell[TextData[{
 "The proof of this is cute!  This is probably why it is in all the linear \
algebra texts! \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{
      SubscriptBox["Id", "i"], "(", "x", ")"}]}], "=", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["e", "1"], "\[Ellipsis]", " ", 
        SubscriptBox["e", 
         RowBox[{"i", "-", "1"}]], "x", " ", 
        SubscriptBox["e", 
         RowBox[{"i", "+", "1"}]], "\[Ellipsis]", " ", 
        SubscriptBox["e", "n"]}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["Ae", "1"], "\[Ellipsis]", " ", 
        SubscriptBox["Ae", 
         RowBox[{"i", "-", "1"}]], "x", " ", 
        SubscriptBox["Ae", 
         RowBox[{"i", "+", "1"}]], "\[Ellipsis]", " ", 
        SubscriptBox["Ae", "n"]}], ")"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", "1"], "\[Ellipsis]", " ", 
         SubscriptBox["a", 
          RowBox[{"i", "-", "1"}]], "b", " ", 
         SubscriptBox["a", 
          RowBox[{"i", "+", "1"}]], "\[Ellipsis]", " ", 
         SubscriptBox["a", "n"]}], ")"}], "=", 
       RowBox[{
        SubscriptBox["A", "i"], "(", "b", ")"}]}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a7c00abe-bf6d-4712-a68a-6c02f1833ff4"],
 "\nso\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"det", "(", "A", ")"}], 
     RowBox[{"det", "(", 
      RowBox[{
       SubscriptBox["I", "i"], "(", "x", ")"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"det", "(", "A", ")"}], 
     SubscriptBox["x", "i"], 
     RowBox[{"det", "(", 
      RowBox[{
       SubscriptBox["A", "i"], "(", "b", ")"}], ")"}], " "}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e56aa375-da73-4ee3-a36d-a6693251d63f"],
 ". "
}], "Text",
 CellChangeTimes->{{3.9059520995672903`*^9, 
  3.9059523874743843`*^9}},ExpressionUUID->"5dd00bc3-3dd2-4196-be65-\
cbb49b642b64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverses", "Subsubsection",
 CellChangeTimes->{{3.905953200965405*^9, 
  3.9059532240711117`*^9}},ExpressionUUID->"4adf3d9d-0bd5-4013-b608-\
e688b0479734"],

Cell[TextData[{
 "The solution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", 
    SubscriptBox["e", "j"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0be13984-ad29-4d21-85ee-ab68ba9d7a07"],
 " is just the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["j", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "280f1297-ad13-42da-a2eb-fd8fbec7e20b"],
 " column of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "21faf50b-14f1-4d7b-9a79-eacfc4478308"],
 " so\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"(", 
      SuperscriptBox["A", 
       RowBox[{"-", "1"}]], ")"}], 
     RowBox[{"i", ",", "j"}]], "=", 
    FractionBox[
     RowBox[{"det", "(", 
      RowBox[{
       SubscriptBox["A", "i"], "(", 
       SubscriptBox["e", "j"], ")"}], ")"}], 
     RowBox[{"det", "(", "A", ")"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "52211b22-65d9-4ca3-bbaa-c3e694f4b18e"],
 ".\nThe determinant on the top is actually something we have seen before. A \
direct computation shows that \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"det", "(", 
     RowBox[{
      SubscriptBox["A", "i"], "(", 
      SubscriptBox["e", "j"], ")"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"i", "+", "j"}]], "det", " ", 
      SubscriptBox["A", 
       RowBox[{"j", ",", "i"}]]}], "=", 
     SubscriptBox["C", 
      RowBox[{"j", ",", "i"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2161f8e7-9ec1-49de-bb94-3074c6a9ff16"],
 "\nare the cofactors we computed earlier by removing row j and column i from \
the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cc49c7a9-23c9-49db-ac75-431b5b2fef45"],
 " With this notation\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["A", 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"det", "(", "A", ")"}]], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          SubscriptBox["C", 
           RowBox[{"1", ",", "1"}]], 
          SubscriptBox["C", 
           RowBox[{"2", ",", "1"}]], "\[CenterEllipsis]", 
          SubscriptBox["C", 
           RowBox[{"n", ",", "1"}]]},
         {
          SubscriptBox["C", 
           RowBox[{"1", ",", "2"}]], 
          SubscriptBox["C", 
           RowBox[{"2", ",", "2"}]], "\[CenterEllipsis]", 
          SubscriptBox["C", 
           RowBox[{"n", ",", "2"}]]},
         {"\[VerticalEllipsis]", "\[VerticalEllipsis]", " ", 
          "\[VerticalEllipsis]"},
         {
          SubscriptBox["C", 
           RowBox[{"1", ",", "2"}]], 
          SubscriptBox["C", 
           RowBox[{"2", ",", "n"}]], "\[CenterEllipsis]", 
          SubscriptBox["C", 
           RowBox[{"n", ",", "2"}]]}
        }], "\[NoBreak]", ")"}]}], "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"det", "(", "A", ")"}]], 
      RowBox[{"adj", "(", "A", ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,
  Background->RGBColor[0.94, 0.88, 0.94],ExpressionUUID->
  "51a5ac5c-57f1-4853-a668-d28f788034f9"],
 "\nThe matrix of cofactors is the ",
 StyleBox["adjugate",
  FontVariations->{"Underline"->True}],
 " of A"
}], "Text",
 CellChangeTimes->{{3.9059524293423443`*^9, 3.905952832915475*^9}, {
  3.905952885817819*^9, 3.905953085913062*^9}, {3.905953122604732*^9, 
  3.905953132992524*^9}},ExpressionUUID->"c5b49822-dc40-425b-b911-\
04cf09745235"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volumes etc. ", "Subsubsection",
 CellChangeTimes->{{3.905953200965405*^9, 
  3.905953236065587*^9}},ExpressionUUID->"dfba7e6f-c3b8-4f20-b010-\
1530dc62376a"],

Cell[TextData[{
 "The absolute value of the determinant of a 2\[Times]2 matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["a", "1"], 
       SubscriptBox["a", "2"]}
     }], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b34a3194-9d0b-4fc4-a8e9-84435adcbc6b"],
 " is the area of the parallelogram with sides ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c795df78-9281-4390-8c3b-0832fb4f167b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "65d1c448-60a5-430c-b081-ecee5d344b4b"],
 ". "
}], "Text",
 CellChangeTimes->{{3.905953251219492*^9, 3.905953327638449*^9}, {
  3.905954904007228*^9, 3.905954909607321*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"b47a1e4e-0eda-4e30-925c-606c2237b160"],

Cell[CellGroupData[{

Cell[BoxData["Parallelogram"], "Input",
 CellChangeTimes->{{3.905954277413142*^9, 3.9059542819565353`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"05bd2373-042a-41ae-a21d-95a27ee7661a"],

Cell[BoxData["Parallelogram"], "Output",
 CellChangeTimes->{3.905954282564592*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"7d015261-3525-4269-96f9-7cce04321eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LightGreen", ",", 
       RowBox[{"Parallelogram", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "a1"}], "}"}], "]"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "a2"}], "}"}], "]"}]}], 
      "}"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9059533949819126`*^9, 3.9059537080814805`*^9}, {
  3.9059542153464174`*^9, 3.9059544689620724`*^9}, {3.90595452606866*^9, 
  3.9059545262873573`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"278690ee-58ec-42cd-a76e-12c0391ed77a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.88, 1, 0.88], 
    InterpretationBox[
     PolygonBox[{{0, 0}, {0.13046752726483413`, 0.30376746668015864`}, {
       0.8832833111918936, 0.7581871626839825}, {0.7528157839270595, 
       0.4544196960038238}}],
     Parallelogram[{0, 0}, {{0.13046752726483413`, 0.30376746668015864`}, {
      0.7528157839270595, 0.4544196960038238}}]]}, 
   {RGBColor[1, 0, 0], 
    ArrowBox[{{0, 0}, {0.13046752726483413`, 0.30376746668015864`}}]}, 
   {RGBColor[0, 0, 1], 
    ArrowBox[{{0, 0}, {0.7528157839270595, 0.4544196960038238}}]}},
  AspectRatio->Automatic,
  Frame->True,
  GridLines->Automatic]], "Output",
 CellChangeTimes->{{3.9059544448194013`*^9, 3.9059544762711725`*^9}, {
  3.905954526917127*^9, 3.905954529587152*^9}},
 CellLabel->
  "Out[286]=",ExpressionUUID->"049e557b-a1a3-4391-a846-b8540b73ed2e"]
}, Open  ]],

Cell[TextData[{
 "The absolute value of the determinant of a 3\[Times]3 matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["a", "1"], 
       SubscriptBox["a", "2"], 
       SubscriptBox["a", "3"]}
     }], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "95a52b4f-e599-4663-ad12-e6569c5d5087"],
 " is the volume of the parallelepiped with sides ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "1"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "263804e5-3683-4ba8-884c-0cdf5109750b"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9d17b62d-fb2f-4d10-b5b6-ce28167e8a35"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "611d4f05-65de-4338-92a3-5d368773b021"],
 ". "
}], "Text",
 CellChangeTimes->{{3.905953251219492*^9, 3.9059533914909487`*^9}, {
  3.905954915811535*^9, 3.9059549246639986`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"96fc4e24-ff00-4c43-9255-2cb3a8ee5027"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.015", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"LightGreen", ",", 
       RowBox[{"Parallelepiped", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a1"}], "}"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a2"}], "}"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a3"}], "}"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Boxed", "->", "True"}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9059533949819126`*^9, 3.9059537080814805`*^9}, {
  3.9059542153464174`*^9, 3.9059544689620724`*^9}, {3.905954519421951*^9, 
  3.9059546817550993`*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"27941885-ca28-47ff-b95b-4adfbc80a715"],

Cell[BoxData[
 Graphics3DBox[
  {Thickness[0.015], 
   {RGBColor[0.88, 1, 0.88], 
    InterpretationBox[
     HexahedronBox[{{0, 0, 0}, {0.7316979552411442, 0.7911198384358527, 
       0.18445007856551188`}, {0.9206311072908426, 1.3864184156641435`, 
       0.9507112229251595}, {0.1889331520496984, 0.5952985772282908, 
       0.7662611443596477}, {0.903239876144639, 0.2934965278678381, 
       0.9084811809677587}, {1.6349378313857832`, 1.0846163663036907`, 
       1.0929312595332705`}, {1.8238709834354816`, 1.6799149435319816`, 
       1.8591924038929182`}, {1.0921730281943374`, 0.8887951050961289, 
       1.6747423253274063`}}],
     Parallelepiped[{0, 0, 0}, {{0.7316979552411442, 0.7911198384358527, 
      0.18445007856551188`}, {0.1889331520496984, 0.5952985772282908, 
      0.7662611443596477}, {0.903239876144639, 0.2934965278678381, 
      0.9084811809677587}}]]}, 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{0, 0, 0}, {0.7316979552411442, 0.7911198384358527, 
      0.18445007856551188`}}]}, 
   {RGBColor[0, 0, 1], 
    Arrow3DBox[{{0, 0, 0}, {0.1889331520496984, 0.5952985772282908, 
      0.7662611443596477}}]}, 
   {RGBColor[1, 0.5, 0], 
    Arrow3DBox[{{0, 0, 0}, {0.903239876144639, 0.2934965278678381, 
      0.9084811809677587}}]}},
  Axes->True,
  BoxRatios->Automatic,
  Boxed->True,
  FaceGrids->All,
  ImageSize->{464.1116331538571, 440.17736226020503`},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.003443577286544, -1.8411157407194654`, -2.011593065683093},
  ViewVertical->{0.7643583159249792, 
   0.43286065652439526`, -0.4778995887313561}]], "Output",
 CellChangeTimes->{{3.90595460108175*^9, 3.905954682301459*^9}},
 CellLabel->"Out[310]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUvQm0XtV1JnjrDf8b9J4GJIGEkPSYQSCQhBjF8JhHg5gnA8KAEWBAFraM
gWDFNgU2thVsY4xjA7FJ4ji25SGJnRXbWo6TVNydttLl6nQ53bGStFelXKmO
2t1Od7VXev199znfPmfvffcdfkmkUlpL8N6v+///vWd/Zw/fHs6b7n7H5vse
vvsdD9xz98ylW+/esvmBex6bueTRreVLw/+qKIZ/rfz79plipPy5XxQN/3m9
KNLPT4Ufh+f3er1XZ2dn+29961uLoT233nprMbLjzDPP3HXVVVftvv766/du
2rRpJPzjOP1IL+285JJL6JItq1evnl26dOmahQsX0sfk71kovufJ8OPYpmOO
OYY+gP5unJmZoTfTz/TGYjhcM0E/04fRv9P120855RS6N/pSujO6vhgONzPh
3Qy9h94/Mz09HT4339GkuKMn4pPzU9P/i6H4Gj0OvUZ3UMzJd0WfSP/Gd25X
SN4V3Sn9G30uPYFdJnFXQ+KuHg8/TtKVe7Zu3drfsWPHnqeffnrL5ZdfPrtq
1ao1K1eunFmwYAF9A33qonD5uFwy78bMfTWJL97G/ytu6V16ofqf/vSni6G9
n/nMZ4b7n//858tPLX/sv/baa3vKe9352GOP7bjzzjvl/c6fnJwsDu52o4Ng
7GfiHt8ZfpxH/84QCVArb237DTfcQP9It0G3s3H9+vV0ezsfeuih/ksvvbT7
ueeeo+uKkfA44/QzvVb3KAdXUUq314BS93EkSsMj/FQ8zjvCj6N0LWMzyCag
hW5sNPw4RV9OF9DaeM9I9//qAw88wM84+CMy5Ol22yDPj9gM+b8Wz7k1/DjC
YqOPoi+KimCYJBckEy4K/+0F6T/yyCOv3nHHHXTLM4sXL6Zb7uGWzQLQR/AC
7PnYxz4WPm642yoc8gbtrX8vFuDt8dlY0PS5tOLxYYfpKehe6a6wAMN0p/3X
X389PMNQ3oH0dLtKTUFPS0/NT8MLVDgrtOm88877Z1ihQTb1n4vFedRHR3yQ
YbqBtL+jCp2iG6OHoNvfedddd/UffPBBux9okXg/DO/b+tFr9G+8fvZjB1u/
RV1USdC8zz//fP/JJ5/0FpLeqxbyT8VCPqJRRu8llI0ndVKEHwO0yhunR6FH
ZO1C1/YgakfBHMAFrfvYugWlzyUhBLNYfkZc0InZEiVkjehNZJl23nzzzYMo
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
k0HE/yee0DluzKbcQZOoCAjuru1/W6PXUhp0xQFcmOVbu7tjl/oo/V7Z1Vwx
JTGOaEGVY1+u7yf8ht59VVKzRFRNCoYkaHK436WmjXuy3J5hm5YyLN9Br/V4
j4a/TGz+ZP16yG7XLiG7SA1MW8YkLPhLL71kJ/ywgGj5WHbxLKXKoWQ129Pw
IWEfnJTxnZwxb8i9Z5Evz7LjrU2w4D1tLTKrBVmiJ0Y6aYskyrUlGYIEkjJo
uF1VGbMUERP10wgyhERY7qMsPnKsSmObxPfD119M4vteKQdypEsjC15z48aK
+CY9wmvvyy+/LOfpkVy8cTE4mDx653Unltn0AVqJVDEEehps3hwA90yscvGi
khuVhewkqBguh3/r1W3OLpb3pnwbSSGZg++YDfGK6ViVSCf6UFMH8bUvvEpO
1AREW/rKQbRlyARxj4ZYidgPSWROOPERxsrU0R9eVILd+L/jmUznW83oC+/o
OHQB2441r5zAM5Yx6z4mdTHLLe2WyFhVDOrAm3ajc0+YPCHrYOh7UAKVIiX6
w9Wv0kteZgLhr3zli8UkJFoGvUxvJYmST8R8FtEcPy9va9LhOKJEKxxHa21L
vO/iP0MoKFpv2Z7mlDnhWFQIsNOdSz0bCVdTVaLAyKvoLdbS7tdWNWYyvCbO
001ffw2WS2oWxPCqwGU5RPofdpwaRPrN39+ZRCpZrAm4Rf/rw/dJenLS2Z/I
wajqjCIzViHfK6SZrBWk+Z8gC9OD4tS2ED7wTI57USG3znAu9RrILtRgYHXA
tyxXNOY69n+vgppQVnMmvqYoDLGnk+qDU6yc3eXQvhS/7PrKy0Gyf/AHX2HB
MlH1hd9+pWCN/L0/+p3ESk1Fqe7Y4Us1+WdFPTuRal8g1Z/GRbVdpzVHk5zo
rHVNf9gG51LPhKLI356RwAXjUktGTqzHrZgdtyl9suls1tn4FfkBJEWBkjX6
hrRd0ISq8gvLDcf8e9/YGeT67W9/Ne1Yyh2Rw0tUlBQs007TToQyx8GeoCBS
+ldQEGlRIdy/i09Ws2UtnyQ82rTk8DZs99fZjnS8w97Pz2uYNKBJBwhN2bxf
Mdypbq96x3eIXhPJQFyn7yCsLHJUqqRmueCSEYb2f+d3vxyk9t3vfn1CRKSC
d2L5lleEK79fOm7TDsmAyrJBSIZEMUG+/yE+n+0KqzngBMyBcmqO0AIKXiZz
r23WFbWgMoqhzx53nivqwv3auWsy5JKKXaafKLwOXk5ZNTylcoQPg4H9p2fm
9H/y67cr5rj0n/pf+MJv0RYtJgzvsHXrlnJrf4mlXO7yKOUntlG9R3jyNVUp
e/U4KiXsUUmQ8k+AYrf/q1KKgwoJVbkx4196niMpz/Ci9NpWaU/kb0rxlOg8
7LKRbeMZfSw8B8WVHKphGr7qRmdlZxoEXU0RjPT/zZ/+Xv/LX/7t/he/+AUS
Nsu6lG+QMzgmfrn0wdhi93+27iRs6j17hLhjvVhPReRFc30OpPy/xUW2PRw1
9TmoZVHFHLBj1r0SMxYaDfHZeo3DtV6XL3oLvb3clE6obGiQKiqYEIdBSvLi
ZucRkCiZP388V+mw0/yzj55kMgMj/T/+k98Noqa/pdgnDBVFXMYkLmULvmvX
1yg7PNeJjCDnjkU7ofELcv6b+IgddjOtLAJYVdVxWHWRxMz4Vpt8Vn67rPkR
J+8kdydeWtnN8kCqtt3sTSk8JD+rrHS9JUs5qUVsfMeJjkmAv/jGBwQ7HJ0q
0twyAmZOI4t4VJrxYNb//qqL2UirmAmRIS2qbetxqneCWYSc/zo+ZM1+tjkd
r0oRvZCWIDZTEmrNMypCbHk46m3Vtjs/y3m/tjRqAVSXx+J8G5LauNVB65IG
YQsfrBg1HpYnbKI7WNjCnAdh/9m3v8i2WiV6o7DH1D0VPt0hR+wyG/ljwNpv
zbIchjc6EmUeilPmirU2I+2NHZ/vvPfSLGtZ6TPIng41ACG7u1h/abhhbryT
ZRI4bVnV63iS7RnJtrEebL8hXfbffnLf7SnjOyfv6hRexXUZU0eVFB1qdyDo
v4oSte1aNbU7ZzlIFxpQ0s6XOZjwTDXOXrNV6Qc5b39TFvd+be3JDM30FOjy
VQW1KOBTe4bPtJdemZQ+6nSQSxiWflZhqZHXX3+5In2YdK4BEJkklr4KvCD9
Lt1Cqo4H0v9fIDu/x8vW8cCrUtoaXY+2x+tyByjeSBVRDiIV+0Ln7ddn6bds
9uY5EMPOUyzIIJS0CXJSajUPcgDgueXZKatSKLKaZ8JY+xIAyQMQiWDmyxSt
AunXVfPIfiTFl0H6fxmfusPepxU4x1mMRVWg0Nu4gUDSIp5Zh+evqt0X5/cm
L/G2LPqWjT8sN34xFCfzp9ulP/OqiKP1Aj+hcujzs6hTesITNYtVOGLpNVnE
Y0VNtn60fqOretwFevVD2haxdwpYw2/xv6qIB+L+93hyf7NLBUyLOxs/SJVx
HOQjwxvI7o1QqRnSDoOqGpA2ZYl3qeGt3exmoFtgVbxaPiaw6nxzLtCZ04FV
qeHOvvb1LyVpiwwzb2wVkkHaXTufFNMCaf/PkJVfcW9FiMBaERXzs7ikF3dN
Rp1n2JOS4TPgTKm7qbENhvb+LG3uh6/Z35X6HnlaIX2IolVy6R63uXrylZU5
c5rJFFOwY0VMLh67fbIqd44TjUUT53Y/1U3hgWT/Jyys30FqcxcX6h0QFIfQ
gbIeysv8eJNOvOnxh2Z0JnVxf/48U2TZvLFR6kO/VzY06q6V78abvPTIG2Ot
KUGfkGBr6BOq5Jl03DeWrKy7nXJCL0jWK+kRfIrizSDZfxeXvGbP2lNoLso7
KZkARMSKAxcpgmRRvXkmfACcUc/LnBW/X39k+G0iS5ZfZ9XcVpqrNvGt+bOT
S8tzOaoZDe11TzdQJ7LSZ9JxzthjlyW23saNPk9PVdYVlSYoZ35c8W+xwOUe
cvpQrZ71jmBzZuTR2qFN3vP61diSE/LbZXG7d/oJJKwSLGhjs/THgRrBfp3z
lax+PG/7v3zgkOSCzetAo5Ret+uqjYl9zdW1U06sBcEPUhMEwf+PceEa9rWs
CRJnt6V1wKgcG4/D51MqAJOtS1O8Sr+JYzOPxoS4lcMxru8j6DLR+7pfg1g9
l3Eoy3rv3sfr3e35kBdR2pZYkRVC/FrpeCVfjcv+2iIrFF0MXC0UI594lEG1
B86cCB/Uh3fmGxoKbQMcUgeefVYNcMfl60zaTHuP9zuvQdMqHuSgLPT92uCg
/8I93XXNeTt2lEhf4aQ5FjRwJ3XMmXDI2Z47IdVOPlqE/mCWdB13InugPBn/
IK6/3NSi641PDuSCBG86XC9fKskP5A48e81dbyEJgzPrrBd3uIOS+53XxMFH
kvM4NAt7v3Y4J2RLj3vvv3v/+kpE9cNvvRjkdFADT1KtIdJEWenIsbD/4qUP
2A0NqksJu2vjkxnsWPwZFsvd0JXSIu/Qv1G9sQII0NmvIl9jRoLdxtEDUvvT
13ApgPTC7s9fk+hg09PGxsMpVNmnbY18j1NIpN3vhUIfW5qkWlRUcdP5Uiew
UmlrQyeEoomutUaQ9n8fF8weKlhTa4SAWPktThshXYp8QtVeR3o2dauL41+S
Bj/K+RpIW6F6SD9/2O+iY3K/higj8guHFOze3CbqGs1cW2UkvfY5wilrYkog
7a6VR2rINaT9/Sgr29yGvS0rj0JRbRZhEk3NYQWBPpZnjCgr7QyOF4eEKCIS
/Ih6yCJP8Q73sDaLeL92M76/tr4I4Vax2GFKkj6uLTGS/vlUR6YkplIrTAkH
YN4Ia0j2T+MS1zSu2RKiqAJ6XCBim9XAPHhjQVUz+gy+1NTfe9MLolxHWYbs
sIkhCPu/ZZc3yFN61Qcnwf1OlRypKSPSzNdU/ZYN45y0PBtbnkgZ8oHmXBEY
FheC/ZO4xjVb1u7DGCWNsuQk75kmKkt6zDPBK+Nrynyjyl+Z+SjSETkUj75n
Nktzv3YnEmNUKcRpiaSApTQPaSFCdJlQLv0jOTKJ0hYjRTlOKkQX6H168cUX
7dn16H0Kriv/iWnC4o+xZcQ+NbW9ciPelJc9ZY3QAegZVjUGxkxs55AbdXoq
5H5rvpSjc/r4y7Ik92vgeBMjLauBljhphPpqIB00ze2YRY4CqWU2+Gjrcj9I
Wgt78Y/ig6jW0ZqNGMscR6VXlNII99A/1RpL1A/ZynpvbEBs6h2VrEdKQl6d
hdd1G7pzgnmgfVt1z1Jne9VX9wzLar0kvLZtGIXXiapQE5sj8VD8YVzZmu5R
f+/1pFPELAVddg9E12YjTQ1sAAB8S5VXukd/HcuBNfWNWpxd9uKu9z35WJjA
QCNAqXGQztc61BHdoR1JCMsyUVTDbKScveQldRFr13Ux1bJMEN134/raltGa
2p0bfYky6yZVH7SpYxRHg1Hctm3bq3fccUfaDigCkR4TvTdkAMOWjh84zjnm
1IBf6OGpt2t57vz4veuDnEhe6MPm7clHYYWRCjRFhfoFWZ4LnNTAMmeLeQU5
aXuKDC/LU45X8oIRyNOSDB4vr8YuQ567ICEqpy2Xt2ErEspv8sWMQEd9p7CO
KV7gKRsIMcNYWDE+W3ogLGekDW3tPLoZ1KbflO9ZTjjn48Sl6wcSRDmoI6IB
n4RKRx+RkEngDIQhAQR6jc6/sBt73EkVLHc2bH1hTiUVzOxzW9QSLdaY2ssG
7i7hBCx8J+6Y4Pw+//zz9mhpFsl4FQT0T9jrNhfcy8ufkrQRG3NVWTwwyzZ6
9z333LMH+13q2NzuUulk0venFT1a9RWRgeBKkRaibS55JcyNypKcKQOWn3yo
TmuM12qNvb+ymgCywuct6ot5KoV7DI+2JPEyZ5s28BaKpQJEvhURJqvv977w
wgtc6RqcAadqgtt9uWLCFv6gU7/SJ+cdmRnBMylfsySltPuYH2m5ZbbVzvR+
WbuJ6f0y8ckVZKri7c58o0nbAfmKKuWmG9mqfPAAigfVekGRkFWhVhqKt0oU
wGuvYatrS4VkDSDz4m31v4c5KyCA1NiUBSD9QRSLbb1jp26oKjVZdBmXY5Qj
a/YrQnR9o97+4WYm9PYPfkDE0Si/pjJX7GvLhPpkFyCNyVuir1Yu/Dpns6Hg
V/EwY/p2g7bifHvV/R8PsdsPdr0aZEkZSkIFoQOl3cMGPJSIJheTwjsGz3xB
xfB1goqpKULiHlwK9Zlqbwv8IjkUtHdDi5cqQgJmfj8qCduOa45MD6vV08KS
FIzZ9Z6FexO+yJB14sjOFPBHFCX/hBWXNwdATElg3VfFdNJEcnqgmFqmiJ/o
xiQfmIkfr4MU3ditCZMx/JeUCEmXokjCClkmwKmTMvIQYskgWfTEVEOJzYSk
tihUIKmhiUwVPQFJ34wLZ7WPd0A7Eqb2ZKAIulHZ1pXGRjmSlOjCESXWiZ7K
Ak6uxyZ9KespeCnKQNdM2ncKZZpOsPF2A1hkVVl9a94h/Jj0OnaIkgiG9dfW
Uf3ZH39RlNNk5DmKDC7VnCZNFoIviaYmClKWcyyq119qelZsE3WJq7paLKDu
97BopnWxlwWfdjbTX6Y+C0cWSxskW4NhFq3XJY8TsF2Pc7VwhWM8Ki1i8rYA
PaWea44DEMV5+wo91BUoTXaLvuMQQIS9E6J+pMFri7f+5gv3C5ZsMD1HSKGf
pZ7jQi6v4EvSOIyutipsoMsya6bgS407B7p+N0rBNkyacREiXZtGHzMjPa+K
rhpXmWUlW5zQL2nbLec5Iow9LuO2ioRelFbc20rQkqp9Y0G+bw4Xq9MRasNF
REVK6aPqSVUkiUKqJJkrGtAmUyOHO7qNYntCh9ZtE7W67bOf/WQtd0sFLIs7
kgQxq9SpeS8VcdIf5E2+js1uujSx2Tkk4HFbquzsYC0nqRA6OGWn5PVPYaPX
sRcJvUoFIh8dO1mZs615TnFugrSjS7rsjeYRV+Hxg5K6UX8H49/TxXy8szxM
w2vTP9oUmRLVOOSgztdxw4HveeWVj4d3TJjPIraK0dVWGwF0DVzgBnR9La6M
exLnUDC3w7K2BS7gKE8ek/bFO5hP8hA1owu9NsDb8mspRGTsfKx6RKvqNTUH
NXBLysr9xxNaxVTZ1fX625qUMEZItyYDjzHkNKEhImQ0IOv555/t05FrhJQ/
/pPfTeiRZPbBHevcZyJ6LIFZVzFnBoIWX8HTG90E/4S3My0mLeCRXUQQOAa7
/FwGaTtQ0airItFbqjCjj4HTp8ZFeNMmvMMfokNeGbfXEEjK7nMkgd1z6yQV
ao4wCtuN57m1RZHHGCpKcZqjifL+wm+/lpTVmP+Wg4Xe+afpObWF8jMa4bJX
MW3Z8JuzRYGeWKdb05qaEsgchwUsHp8hJD2PjjTDigwNmR07WC+8cEgqRs0j
ijyvqeZAicgp7JeHPqrXXXINigwVJ1onenAWd9821eBYn/aOaOpJhjzUb8Ih
6vnv4iqVNnIBgOraDqmK/ACoL0G+pvk1qqOUYOb4ny3JyRlvgzILSzRKWPtj
LohKt9xQRQR904R+6lovqebIivWdATVeByheXNEYmBzKRfm1ZJu9ky68Nq3j
HL6bBxbJwsESRTwGgzx08rDjRW6pGlfKtJGesWy6MteqqZ4QIPoiZOr38Uit
JDLrat5RdJz3iTQQMwqk332o8y3G82BEzMlbxh6gpHRwzUEYG/K9e6FdPFp9
lDGjip2uyPcuyVHT6x9+4yETbWHcKqeilDFExYqCIedhGhzJxd+qBXJcreP0
Eqg5eACQV8BYx5oDQF+AYFwtVCmX8lL5Z1QBNAAvwCeuGwcIYbfqQ7jOB4E4
Q9gM9hhTvhLWI22yCzMCJPBHOvjWYlau5Dd5Do+0t2dl8DRObDjBgKfULC43
yf36xKoTeui3IQd4XCz0D+ed2dibADfX9o6y52lY8lAqCeT8FsRRr3qk2yIS
/QmhZ2fktET83H8vtzBuTWXyVjjfck2WszQXcx1hIRvMztH2Up9IUMZoe0KC
sg71TeElPQBGlyiaEoZY+RSYO9U6BeJEQyp6ZX0Enx6CfrqODBXsn6qaZui0
BfOATkv3qZreBuj8JjBijr+F0rGpj7Es6KST41zjpsi+soNVlh7F08pXuDoj
V9ooLzqGx7z3qaee4jvNlbjaN0euUYZjLXk9GY6dpkEe/Bwx2CCBfH0DTuQ0
idUONeiVf/LBE1wmSp6zIKy5dK2NTcQxeCqOLTpUgsaFLH4DgGhXMcI7VWl8
ZNPsNh1piN5hehTP9iaNTDY99ce1JSJyzxNPPMHHFys2CNP/9ye6Oik/nJzn
uSxjO+1LrnCSZ8p4wdRJDrnn1ZjyWQfCXCU8LavXH6rrAuCwZGDdxPwUXQAc
r+Pp/QZIG+WY7HzYOFEbTdgox4vV20QBv1EpiSuzeKThibHupM3hyAaAnTff
fDMPJLsi4yldHrk913DSNcPN93ps3j6SBUTZjiIMUUipzrDxwqeTHVavabYc
B+Kgdw7DpX+z9f7GqBuI6dIyq6pZgZjPARrd1Ml03kZp4aFObH901PH7FJQL
FZJUw+VaQGyIYnw7KZ/elrZJWgfAUYtlciwdcmFyEEoUheYBVzjfwtN42kZk
rGniAXXpq6xpZz+Fy2bbouuj9W0HvdLQfqtqX4GcX4sS6ahrjGsZvtA7LGU6
S2PQ0FskOpNPdFl+LYnn4IxMfi15JnheNRANUxKVHjusepuDJiOW6lsLT7/S
+aoTM3Iao6W1Qo9UOD+vKnZUFdDSXwqwWO+0sX1AUFe2T1XeAEGvASr+bAZb
Fo3kjco6x+FKlQbuhV2ko2yB3NI8xkj6TJdU74k+VUxVlWUB9RXjem0O73yf
HopE3i35wSj/SAtEfzBoxD3sRyZE1zlki+T7Kr3gPdtWHFRR+TbGUFtnTbS6
U0rjlH9CB9C2bdsIDKS9wziz8g8fSIGI6RXIxG8vtQrooLxayXThJBjL6CzN
YqmPwSfrYnB6rwTpxRqjesJeKv7g7wd1rCa5XZFvPTmvTkarqidbMloVpu+I
jNHku+MAmtpom73kUxqYPlkLm9rMx6ymCp4TOdlENLPD3NbMg3Woa1MOIdRQ
SDMMS9YLXkuB5reaGRKWxeWxwjIMmtVLyTsxbsTRUFvfIc3OuoiuR8pQ2SwU
U0hTKe/CGxR3Rb7ZZA6jLdmvAGskw5kfgO5AzMJI2wuzMFpzn+sNdDJRMxJ4
PqejXeooJompyIzeTr8xX9MWjEfdOM17hF/mxyC40KJyhzszMwFGsGK/CgD4
asiODUNQpOiQ8/KlUmMB2vuSbT87g1KW5ESdM247AOlF6XJ4Q+mAJkUNrss3
2DHkkpjmERaySBYKqLbylRFzqlMv2FS1KmuqeWwzV7JSBQbnFNr6gXCqkEfv
0WN6iWSg5FOQsT/kwioaL/94Tt5hyV+MUUWPhUf/NkA2/VS9lY1lsg2EXldg
eOAwxe4KjetgzmMWZNSLrIrINvVY/9kUCBxh2UbceNQOhVB8ptLpHfi8Z555
T6WQnrzfUQMYqrNgcNSU4qQT3GNpQ3OLNxZREcBAyCcBBaFH6P/TWRpSjyzV
uyd8+IYsT1mftcYR3ADF+CQeiRoc6qXqSYFXFcl55+l5c/CEY5xUcMwQTUj9
RcvYkFXoFGspdK5ogJOMq85ooP++8NuvVCpM5RQBHkZL3g1DcYnQNU2DLAGn
OirQ8sSp6hSezUvATWm95LQOb7ih1+WIM3tsvdZaR6gxF7FPITtOW/XtVOXA
INEeaFdAjdy7wrnJM/XeYF3Xq977ABHYYmdnIRPRekrUmQ30oDe5QJo6no8p
yy26VukAVl263xXDDFh9Iq5jzTQDG4hjrBGvXfjt9HypdJhRrKwcjKksHbp8
wDhejO6SxKQwb9KBHXM2QYMjpEB4Rv5IuVnAZbGSHSBGo3fPyyhOvkbTeUWy
AvVMwyKiK75pkoKcuCALUrkUg/HV1uyDIXZ1Bamyo16ddQJ8fRxCMwdzO2Pe
cj2gLquJ6cFKxhTZQOV4mzaIAZPty/KXNxpCr8VLrECaeuTxjOaMpfD+mqOG
BwniJjKIU2zIM/rapuWc1cwzegy1ZzoR6IffuGTVafXZuLGCLbcdXzFeHmsN
fKFuuEV/MVJnnC/EYTiWnoSklMsOprkrCSBr7Rflb6mxjPJl1Ix19bVSto/+
iBPrE424rH5jdEimYfmVKudC77bK1Q1OgM9TJiWF7Q2A4euICKDXJLTaiIDI
jFTGF/Km5Tks8sAWIOoFQKdZY7Ea8ii2GEdXRjnglHKl3IRgBuUE5maIO+bQ
voxkSpOvlduDQ4uO2Bd8O/TdR2go8R1rHVsZwsYKr/YwJy/jenYHChIFqzXH
ufFwRFHi0bmPB90xlokMa+NVqwI+vwKc+Meh22rVozQmwm/wyVXRF0rsVK3g
jJbEgKX3YrBI+pYlzmtI9NX5USlUucJ5knVVLBLwRM/AvibbJh0IecHeuYYc
klSkqVetGS0zbUAoW8Hamnlid0HPm9VIT+aVrAJFH8HKmUEPNSWroN5YQQcZ
mYOAWBGi0FehOr69iTwY9ciDAqNhpOEqagzafOdrRRWD9ZmUqcF+4AgnOM9r
M4T4VgeI83gqS1sK9rx9oCW5sp6nl3EZCPnhi+pVz44dVdxYWtIcdsLZAQIJ
4+bDcWVrznO3MdpxjlTid1fcbbCVyiNZlYXgjaiJlOCwnAHDZ7la67TA+XTP
3wE8VPABOozVZXAaY/A5x9bkSf/HRm/pKLsvf+Lp3bseXVlbhjrbgY70QEHW
i89YkIF+11kfAEVLX7ziqgGK57HovjKxkvbm6+IIG7mraZ1RU6KcipMzKOSs
2I4xPqyNypUtdL6l1nXx0WzLB9c7HwmDSJduuub0lXu+/8SqdE6GLC8935Tp
yCDImy4qR8geJOTPgXjXqUExN1AZW9laZxoVa/HBuBIdNAMtPka8qpoJHGxj
01qzAJ50EJyqzdybs6/x+Vj+UBncLHK+3zsVyGMRRQc0vcYs4qnOR4rDsBrD
6fOFG+EMs2Mq0EMIOSfyuAZ6O/3GqPnL559u7JABQlhAXLzAj1HbeQ6EQO3a
4Sw19Rcn5u2SYnWoDpXSQvZbFf9h2W2JYWQxmsLrxpF6tpaQGRDP6VDjqWFV
lDY4Id8iPzV9z2n5qZPLw7qo7Zi0C5pJvDaSeJGwO2hrSMj42bqTGjtgolLu
1FWuBnYBGc/Gxag5iZ7WWo4yREJJbTTn1Bz6Uhymp4IGqB4V/ohi4BZaPywX
wG4Klz3vQhEAHmG3Kt9hgnTcNRW3noOR5SKHyZ7kRSls/R3vdBV55E7TZBNZ
EsG+RFtFzcnOU3UtDYX8n4H0/KkCVjNwQbU0TDhLRwYuJBlMYFBmJiqRSgGO
KetlWXeMdvlQYVmc4PkQgICn1VR/CtJpDCk+Pc07FODiBgZMHsDjkasHGwtB
/AXLvY0BgxjqRlQ2FnRC7u+H1Px9bxnTdXntkiN+JJBjAo9LnWVG7tAaBeeg
+wGnz9mEN58B4DgM1alSge45VkOS7wGkDBVi7tp5/8ra1OAljidYU4jpnZ4n
T5XgSLLrwFvEyYpNL9yu66QFIfv3Yt39PW9PRYVDrSJW5OuserjcuRRFiSrN
Ylr5OUUUp8m0zUVld0MxpvDwFVvuWT3coZoPdXSGoaSyMAugNoHH561d2sBD
udWUFQeSq1ZgEsJvzDG0TatFYVdL67RiM4GCX4YQ/MPqbZkTvCPlSK30L/UO
qz8qXyrLBMBKqmO5xKC2+kzyRF2UKR++8EZJejSUOQksvBfib62IvKyWSKqp
iKzMMOYCSMkcsPjbIkeIn564gYZUU0Ih/vcA9X7nvK2F5EZeqVjFhBfp+Hkn
kcJWSJe7wQAs1ghoiSVlVbRIaTnTArx70uQS8jitx7Fd3kAUVdnDysl7y4Qp
4Eiw6+kkQuIduKJQZAOJ45RK2z/mlRnB/KkMKU764fXiQVOYgOo0SzTqfHYT
46c2BYaVbMGWc845p//ggw/K0mn19XG5KswQMNx6ENuVxlB7LJAsSpTeHzd1
yZR5w6FBqsUiMpuV2YWtRYkQ71PYTOYUe1GUKMt9YgGizlgeik9YqQ/DFsNq
EuKE6m/T5zGrOMYOIUmkadwApxVllHdx/R3wzbIGYDvVlj26spnL8aoFZa5y
hRO1cTqpbQoq5Ny1WjCxfXEViiexkdxtXDk5FUkhpfmW4hMMO4zJVsoyrsjo
kZcKxc2LT287Kssp+X+GGNx19913733mmWc6BnezEKf0JZx7ote5aqjtJLer
fCvcxNVIFm+lk3dmybfFbZggNXBBHyT/bqy6P3fCFvQh9FfsHM4VkuEd7VGM
31fhHeoBPR1uT2IU7QFJl8THmLAjbLwSlbr6GsYAVJVKkOPuFHfTNERCVty9
qRthIyvueJuTczfjxGwNJzWqmI1vcaU/yM8SNqrqDiB4PMqgZvvLqjsSzWxe
pySaxXn/yGgcR0somw+LILtQhJpX2DjWkZKXuHLKeLsGeYahDTA9TN9KYHBO
aQCC9OKubqBvvNo46eIfbnLA5AEyCtpqB5CDcPpxQ0nKzoceeoh7KQEOxdwB
CNviO2qaum1xwAWOeBbptQue380OYJZmwHQwAsdlKSVuwpuyJ44c2YeKYVQO
KO2G+7RcTtfhIdc4XE5TPZsswz3SieEmhVJo6h6IsHbr2fo7duyIx3yO8Cmu
tIa06eH1vTM+c4s6YJFdlFctecsLNGDYfNziAMbb90t8cARyXZ4+qQbimRh/
wGwh8lMqXb5EPwXfBheYtE0A2Wisukfi1PB4FB4chdfkQDy+ri2gi+Kf8hic
3e9///tJmqQ4KTjn019J0pA/ZjN30AK0gpfklUshxnwgyHiDtzlQESUebeYA
MlLpH28EcPzIaS/+4zxAbWIQJke5U1EpaSoHIGgd6HFdA5VjzgjyalqPFsDg
2I+va+NxYmzqzrGrKyeDGdgal5b/idQDBf015WSX6uUJDkjN4Sri7Ka0y1Dq
zG83lsBGg6udL/Ncguhl7OsIRu8YjYM1IoMNWpNR0FgZdr2j3usP96nkfI8R
IOJcLjdpOHMw4dwpFLScvqLYPKBgCyTgdzbbHI2XCnPYf3rbHVg1yfsu1Kvb
ZAZOcr7JcwZWZAiwQRig4BXRgNJVYpxuggXuxh2vQRECQ+CGBgaIIKDrwCp1
pcc6ISJDwAkRVTof40hteVtTKRgg8CgEaNqWa0rBrszLk3Y3smeqxuMuZ3cJ
j4FRRa97ZiCo3lo3IPIFAx1wwCJfku8/bZVYfF45MQxqqHUsxg3NlJB3CI6s
Cj3eSehy919bQXqUejMlxOd3ycIniP7h+OAddj8tIU4RUjzPRL5Ucvl3x0uV
l41Day0JUGMD4Hw3+QFhcIpTON41LBRFhOkrAFHLEcEraU3q3NjMEb3++ssV
dlDOLeBRyrJAeLxeAajgMOrDwTmi6NoXb4N02rUAfSLIe6WecaaHbSd+iyNI
lHTWGQLJLpie0Vpf4KSMg32ICqf1twR4mPoQ6Z22Htt2k6CKxMGRXbhCOp2N
x9rCmQy/9epVghovCRyosW9FfV2XxcGD2I7+iALp69GCgPpV1gBDYq3vcK8j
SKfSVBgE1XNyakZc8sxgGtQkt4aBJR0ixHH9LSGsnqfBGpgiFKS1Hqh2i7PJ
mRrwCrxkLQDPrJXUAIOgLTZEEtqb3JZWL/wG+UmaCEDAVHpyGp2eN6sQrtOb
ReQiKh7EfXmNk+7AsKoG2yAjDK8P05vHFq1jihHprZ1jRN4isqBPlDhInmhV
AxhkgHCrs9Obqr5kOMkDamXml8HQFiPiuACPJzJ9j8nBAgY2xweu6aS1xV43
aNCFjTLkX7oZ0pJeGBqWPaNge0NM26QEgJqqFjtUBg0QGSOmP49BKWbtNU5/
uM3kACw15JR4ybIAni0rM8KjHbc/JG6pIVPipU5ngcTfimf2O13tea84oFxu
xFCIF4QyzKcXhj/3Qzwy1zOWF1gSwUb9h09GYYF3po+aiHZBlrhU//zxsat5
1IsFuZpfjXmFrFtTQ7d3YICooOfb3/6SV9O5xskKs6zbBiziNAF6QskAsUn2
Crkg66iIU/uHs7tlRBd53VHec4r8fwjLVG2OaFLpsmMDuTpl3r3RHHGQUoj8
+JN5bxaiwstT6Yyn8NmcdWpz6N9spJVJndgsKqq0PGpvrbHrFNvxcLK2Im0I
1pI6tPCC1FHUHgR7D/aV39xlS7RwajFvLTYTMTZ0OyXqVLScunNOfru20WKU
2IT88LoILnosMcMlwzeUYbVOG7jDiMVyMrbkyrSLy4mpDACWYFtIBvPTsT0v
lFxBgm/RW5M7xr2SKxx3zh/KGvOReKnyzIeyqBx9K6tqMa/QtbDcfRksrFe5
G93ynuQEBgjF+ByCtkkAd/jyqm+7rNBtPM5UTu7iQZPVKKu394+iHbGDVqNp
GlM0QtGh/Aqi3gSh+JvVZtfiZh2WHnExFMdaJ7NKf2I4P67spbipFm08i73V
YG3FkTgeSiqHBA3W52fHxfNU1jYX+y5f0vW9mJVqDh47KaMuPmioWlM9Svt9
xwM6rmibzFNTzeMdAKHquGLbHJjVStemydxyHVcEzLil5+lFaa4fzuJhEFSH
VVZG85+f0ZiiC89qe7XT3HAPrRN0mUjtewFb05i56YyQxizNJoeB5SDMo2Vk
jcfpwpRwtpaxUQ3CJlUQVuhW8wFG7aCFs2ujXmJCAJc7qvpFNG3Ycg9kbxWV
L0Lh5AmAOWYdpE1JpUHDa/jMzoDXwQ+yQpEu3Tv+vHQfW9u2I6XuNlG6R9nI
Ei953Rnw3EXMFv6W8Vox14nTxFhFus0Bz6Xg4KRjF586GgTgiLnaSjdXTVHY
rRozbJNGs6ySFXibBgLrNa/O9+L8mj301xn0kIJaNoEci9aco96SCXx1x80r
+79476R3aNRbjIRpeGxTmZes9jwTSBBzqsLfUk0U085IvbldsN08/wZjp5Qy
bmjuU0wZ4ABfciBdUSkV8M5WiAHiKMtdJVcPrqKK3nOJ/hhvxEOYchJhMUof
yfFHMnLOQej977zydP+br6U8Yf9Lv/4Z+r3/vV99rP/Dj9/Q/+kHVxEgDnZC
iXtMlE+Cbir0kmwAj9STJ4v98PUX5zqB36IuWKgdZLNCbxP+UPaqPLYP0sf2
rlEGVsxCGUiaXzDo6RYiKTFmk4T0Ymq8Q4mQbfNA3Yk3WlKNmhKeaIphZsJr
k7KGK/wtpRuk/KMXLu9//+UHgvRLFMC76H/9cx9TYNj77MpinhOA3OuQdi2l
X/LSDbhUDJGigHLaiSMxEW4fD4JY4gOiqdMPgMD52jX9nlbyJhDlTYixXCoQ
vb96Kd3pkHMpkrTKYnjjpL1pm5dq5LLG8aZCj4f/9gI2SoEHbPzgE3dqbERl
QQqE/okuoUvLt/ScorC3OjxfS1EYw4Mu5UF3nAr+w6//ZuEpiwjy/ZoUGssf
KkRTUw0ZAAL+17aC1pSOQGNYYhFjCFXu9a2O1BmoMsVkKkpYs1yZ356A5LkU
ESajMvRNKanDMkpSQDHPoOQnH1of1ARBIqFkLJkUUi6Mkr2/spqgUWx2WEKv
Soztiiwl4sl1FJv+oHTNBHOo9IU4VWIf4g1MZPZYK3qLV0wGOMQE0FjSF6+9
9treF154QeXVxMHHsrbktvyyNBGI6lSu8N7qpfTp8EKVN4wSVct6XKURVzs9
KjI0o7YuKLwaapMwc17VhS0RGGErQ+aEAFEKkq0MhQckW/IRSPUTM/yWZkqr
roJMQOk8gZDvl3unrnR8tUaIDDxymkQFHjKUih5ep4ZDVaMBmESnY4q1xt7N
mzczj2/TsjLkQV2BtS9Ajm0vFaO1E4rfUv0EuhQzAFR06lWoXO0gzJsqVXNM
tjmFPvxWP5B5PJWYkYgJIRRKkIUAMtgkgZwI/0RpBiIsyrfcDoDUjHCuFqXp
gtTybbNCA33n6adrk42nZCzVu6tuVobxlMrXsERe+Zoaw4HK403lf7YXkUKl
rR4QMjTLPxWjG3EBVbnO4iJYzCKWrkzZPnb2NOke5SNxTC4iMX4UAoLUZYVQ
ZrKkDRMNlQFDoZwydCIRnoBiKmVYP27M0LWekBpndb7+6gBz1njOCOfWtFgP
/yXIEOAIeKTJGrBJ8AU2b3S4NbZ31RK5CoZ52t4fvnd7/+tlOFpX93BWF2CO
048hqn3yyScJAGTYNlEI9Hl1UlLiMukPCl4JUn38LZ2seF35nzTPHHiewTWh
XjfieZxe2y3evxf/3w2ERiuDj6q06XiesiDeZRk00mf0o6yDhW9vfTTMYVZ5
2LvyB0uDO6nxE+J81PHYOv9rM8qtP6ambc3G1xTr59l13GXrGVJzwcIQgBii
hEcifSVGrTEuQWabuiRG23jiC/Aale3/CKrNG84XH3c+SyzEdY8++mh/69at
NKcgfMcjjzwSVvJtb3sbLRUBgRBKBofZ3rjoPYmyGfENQ8E17M0XX0z/TOzT
qwmPvT14N3edzlfvHpbvhmucDo43gwM4XpDeQPQYpm0ZkCTorNlnhwOKutJ7
jAluqggMXLc18Niuyouc1FALBv565849v/DcfEeSgRR+RAq04Ya0Hmh1sFCo
bOyZRRZeI5lmCVSKHi43SJWslFdjKGsRL4SG/Yfzzuz/NBrd/s8XL550Ggyi
MzyRmJgNGzZwi1ng3Z544glCQYitYuvhMKnUxDhjwV8FzsI+4FME8Np2+m1M
v7YzLDVWUV4Xo/h0RL1RkKOOyGscyHgTo9bYi8g5ZZxUvRDOOeeCZS58gEun
rDxaopSVh4epom4URNnD+1BY5zmeyi2K9QaVE87H8zcl7SvSZY0J1eXG0BN9
2eKECkPPilASoU0VjxLCF0J3cyZ+b3z4/k/Kh590iJCYRphK64s/qsSkVJph
CMLDDz8cEHDXXXdBNxDSUwjNHRN4bbeA5Wz5HxrLvVHAcn6RTTfDEuCgb5Qj
FzxRiBJJSYuIQFmaczF8nWAjTbo9bFvO71fYcYJtQjHrKlmi18sglwb9Jqxa
zRjVtOnNCIYA9Mn8NfSaYAXaT9Q6qsbvRAhsbTppUAFH5tTqGFunIlP29V4E
RIqyn/BvPz7vvGLCoWGiOGqJV8g9UdZ33HEHrR0vRSH0H3e+4bXwJ+iPYJ0B
uciKVjQhJugqN62IwXqBQk0m48OfqBnmyMZaa6KZNUqkzqwGFAc8OCeNtWf4
7RbcpTHR8x2YirxiMtHoLq+b25pSGqgXVTV/7LXLznRsyNYCzxMd+8z9ui2s
zmkdiGAcWeIlji7CN4uKpPCXIp8f3HnnhNMCEoE3VdcUTD/zwgSLB8QAeWuA
slcF8nbitZmMkITQAHlgMJZnVrrK4aFyUohuRKq66MoNboHPqmKJlJM4tCvp
sZszbhIekFpwDs2sdKOh7MqbN6948TP114QABvy2Cqm41rgtzj7FgV13DohL
yKtcc+WkE282xcW49G+23i+RN9T/3mOPTThEUITdtJ0wxzShhBy9rhZuoiP2
sHD083b8Tftfvhd4RAZI6kTR5M5iYjYlAmeEGVHeL00mV5yIJDtU0Fis1NmN
+dOl1Y2Uy7hdNdsHd5vziV4f3OkawMxZz81YT6qYve+2Ctqzuhtdxwc8zmEX
DanNJbhzHE15Cb5c1FeFv8Ruf/O558Yd3icKfdTS07EfJd6sbE2QZ6Z0gOH8
DMNJVoH0l+JpClA24n2sGmcyGi+GbIx2BJvJGpHFOxNeHswQ44QfW+23Mks/
GYTrsTVMqRZmaEpWUPbh3ZE/yXP8UvGZOXeaVTPmt1S61BGGrHDS7BfsO4dz
RDcOXEJPqkqe0Sy7bYYi3pjWCb+NObowYrDSmK2YLa8ouAGAuyQAmWsoRIgy
3E/XJZYJyLsIuIDKpSA960FVqU3QYS2BNnu2y7JeF0s/wnaZkzTohVP1gxi0
oRIfNaTOIfkbGeNpuVC95Ll+ajiAOcglqDvkiXlfbH/igkk5ll9GvFd0Mbmj
ASSWiTmsgdf2So+NSuSB0LLjh/H243jjRM6U91btArpMPyDttXC6Srhb3YnF
JYKytBiwYz0m11ZFxihYlLpwpohEIf0/ShpNWJWxAlHPjcuqQq5Xl74ahr5z
F7djhe1MBzlSXmaPURGnzkDbWL2UVkcUODPw6Oe7NJak36emEaFLXW1vkNQ7
nnnT4saK5Gv3i2LhYyC68dSVynjGnGxGGsZ/JePScxiXiLkxXjO5j62LomwD
wLYbwAr6TFAuKepFbMasX5BcVEnIZ9VNK7BxKOeipe8UO/kHs64YIGonHGB6
qbKJ4MatdY0wG+VPYASGT7/LuUvPw1uL3TWppxRzBN1W33wr7Kn15EolVLGn
hj/h4eKyS72pNFrW2DNLLXumGGg/j5RyIFJGHSIlFveNMfXMYqUX08/i5MDE
PgFo2wuR2uCjLfDaJgG0jfI1AO08LLaryipj8mCpFeERXbJWIyorHYQykgV2
OBFBGcCrMhhk0Bk/YazS1yOpj00ObL3tak6NZJ57XgPeZBX1pn1nTnj2kUcf
ewXY0u4y3mQjF7DF1En4bcSZtmoOfwoRe9dK6oi5cdqNrOAIfzIq2JWhOVOI
zPBo9OJmxZ1wqg0ZJ6nvnCYxFrM4x5VgFqzWKRmG1rIWTaYVs5Esx4L+WcUq
Xqnvhm1oxOK4xQ+9yOmZAH4H3Z57h1lcilIGFlsndd6/X3QKt/pI+rip/FvO
A70Cr8kRrwzHMoxNxVrDWf3N55zr5VoEvGBApGL5vIN7BKG8E4jkYgUZNUuz
vIchORJLFmTSmiF5Tv4q7h7nuhxbKs4kKyxb8I7iCIdW+6tqB2vmTuAwJpXr
YzLctb+61ZVBJoHX1e/DiDA1TnpuBmNjA+sjg+Uy6GUoQXoLnwlSU2kuM2lX
CFXI82ThzxGVF/AnsKe4FPTb80KQhUqAE0UoKYPJXX3y9CAmQItcl4AxPcgP
1Q2ZsQYQBL5K+W/IOLLmlXFkzSunWe1h7Cc4QLi0CrlsXysvjzqw6erWnZi/
PW2SpiytrDV/lygWJxhRp9JIMzcy3FyKLk0un2sheRDGzw9L4HMN1nAtD9Jj
bc1um86B6cIgcw5LaDOP/j4T/nYeTU29uXe+ffTnmszghGsGi8zdBOybEaXh
sy/JqK3av8rLPQcXm+JrrS6ZOQ+PP5IfGCfP1UacT4T/Tlr+oYtZZBShTN1L
HZBZvAqvya7YnkNlDDmtcGj5UZBB93jLJAVVkw7InIHV9wfa2DJ06G5lSiJ3
1quzVEN5SAX3XDM6VMrnYo3GoDHNgRr6PDNN10KNtLpHgj2RxCucAKpU37Hj
svoE+5NJLaiu+FjvOVbhKD7/+d8oI77X+y998kWXvWccyKNNQJfKeiPGwcZU
OVlwOknjIOqGCq3aWnkOMCA5Isdq1OiPsPGdJRenFLKmRha9V2duVuWPSWaS
GTJjP5bmSxNuRKFaYk87uCdBbR7rYA7LQ2UWhAYJpNZJp0/VEpwjieD81Kc+
QcjxpuG8yeEAxuAKMwfwk1Khlq+E+P8yBwHxVmuHJ9RO2wACOC9RP21Djjfk
OlPZmhRhOSnpF643klaFUdMUW4nzT9K9n5/vpMWI0CPP0TcYwrCuDoc5YDEO
EYmvMQgIEPxaa676l5ywZw58XFHVLTtgx/wuljcJh5VxMoFond5JyZfyNyIj
PWMRvbDKwARvQVL/aMBQhAhSuv7snYqSQBGBshjI89ksXHQ759iKrsaQxwwp
D883ix0se12do5lyL5e+u03xtVYnA6S65RmjKR6nUi0+6o7+EjzoDx+Bt8JB
yNNOUdUcWBbBVYcISc5b6jncdYkePoZFxtQTmuIJasTDiOd9NcxOUAsDnKzD
lvRViQ1SURbKberhN4zFUMkyUX7F8UxdhXSKZ9DQquKic6q3ISxM9eDM0M+2
Kd+k52QkkusIPLqhdLCApDWS/zkUcUCao/HwvO0NXJ/klpmEkUObRkWeVzgt
VztqZFLEvd95+ukdVMvpORo4UlZhoajMzFTnLAEWoOdrxvPYQ3LNsRNBgTsm
gN4WjdHgVVIQuSqHOtsXoCGe2cqIScg2W6GqOL0RnDjx1w7UBlRUd+2ME6r8
slOX5FHAPJJNjm0adrwVPq9FxrKMCZSUhPj1YgcTkSCr1HOym+5tFGCCKXR/
roat/EXZpPoe5CEssxYF1smkJDygcUKpPnGqozUptnl2gfP2BpdDTeec0V8T
ng4alqOSgIGVDhLeC8nJhmiPfR0V1/Gk3CHjmhASrnVCVEbCj0R4cZGDhMmM
BDtzU4xUcFqbwF7Xzdiwoxm9SkZR5C+5sWgDGu1GJZ95UAZashtnZEzKgjYo
EeUsLnJwCiSksR7ht/hfNREMFUmK7YJOkJ5FQoKsxX2v7zXW1NRy6Gon8UiG
9FpHK6CjMAQk7EVeqLEQ7hq1rS3TE9R4DWDhREjSH69htYJXUgg1bn3S6LkN
bimmHbidnuEmyxEdS0F3tDiL1XLpaoE8XXlYfm5pfDynwnMu3+c7iTX1rmMI
TOQ4HnFYI5/o9LN1J1UmfO4RAjCn44l6X5erqpvbCkBEArpOOdiTeEVRX9q9
Z/rYWZWlRbfdpbB1Qj9ZeNrTMj7otfCtsBK24xPuruJHhcuQ4OXNFBVluJLC
8lwGLw59v09heQWnE6IWAiFrcioZAs6Y3i0PihFb5zsQiBIbY5FLCCRnicNq
UX3KOAC9axWDqRNltnEmSyUtK7OepiAq+iGDFb30MsySRj8lw6zBSIjxwHoq
WVd3AY4QeyCSvlLuwmECBZxde6ZDLV4q/ESZXMid8AewTagO+R3h4hRek1kH
AlFY03U81Y4LLriAZMrndSpmBjAAlVszXceGB0c4i8p8p6m4iwxHk30YsfZB
JGoSotflG3FMg21ihDBVkHpnBkeiJ7z5oZ73IbyFVL2+zMmNPWt8P3nqgizK
lAN3+Do+0q06DXiEC0Y4G3qeg4FYllBLRO19xzveESmoSDCkikzI/xisr5lQ
YWqPTBWaWt/1WULSV9yQX26osOSdHWJSHIXoqX7bG+g5rbU+QBgA6hzzkZmm
YPkTdXCoExk8V0sr6RLIxFTDZ4SXwEKume7L6czk05zrSDpGyNNq8xV6RisB
mrQbbWciB9KpNZB2JIPrDmS1JY0gbxV1DK1s06Dx8wdT+idUJVKn4Jfr5ZDx
YJOlD7+Zc0ENj0RUYtLxS53j9j7QkTOaFJUWMt+JkIABUB3hOyprIdKA73Mc
ACAq9mbYygyB5BMTcQR2iYuYm7e7KcBSKUZRGSpTSJhyxi+zwJsqEFn1+Krd
dsetyPeSAr+7HFiYWQphhDhOBq3hh5SZ5yl7pAs2rSn622eLNJhRZqk+2JEz
irAYtyXRwQMQcYEXHGIkvCx1kJbetD2LbsMed8Lx2wyjqCIiAANsawfNQFAU
6cYUfpycF1mOKoj5NTUk3iuMaEphxQXQR3Ut1d/G4JlxbqzFAUjpmYX6awLC
PAcgQmS0T/QBQaRAfxZBZdqJFZ5vIJW8AQXSm5T0IsPMI5WiKhlT7RpF9gSD
eT3LAcyiDBhJN5pDfFSpHwAzA2TQqAMxfKCmOg9lTypUQ5GlKnm5wpFVTLUN
VsUXHcE626JEDJ+2Wk8lTwZVIz8X6BuXvJLyI0bxX6oWZaDMzC/6pb5RQOED
/Z437ILDOTnTA+SoFeYlPy/O9OMhQ7I8IqqWMdVpUZhx72c6cEHjnuWhnHOA
EicJuEQioUm/SOdR1LYkGJyYL5VOCuYsqh0fEysDlcPDS7D6RBgjiSOcC+Px
002nmYTf5uWPdCgoSnEmYzQiAETAIQCVAOu/urFQ04IZQB9spqdkGZ44JEoG
LXzcG3kvfPoAA6jtJBp2O6QuOd0BEYaoW+6KW2k9MhMgWo6l83tbrU96soOM
Vf6lOHVW6YCpDKKBitnnZRxYa2VdnaPziiWKH9bKO4tUzYeaW/1IQWDxgBOA
JMKI/ByGEcGMYHSQ6KZgGD0nyK3KwaIjgdxyjqSSDTtjwuTxuXJeppS5LtkY
IWCUFuU0B0YxoOt5Hdh0jVeuBxiBBO6gi+jD1zoCAWti1cI18VJ1OGE0FoNZ
rwn/4431CqsDF51+Tlqn3uHprVm2bFn/2WefterPzNmTLBg3O4hMu4YSRVCl
bwQojQRihFxlGjtWQuo5x06x++M15stAi88lFnmVwqvI8NSRKLlPtupUB0do
Yxqk3C8EFQATexrtOonWeV0WTdKTUYSVSh7MM1Rcy6IMps6F6BjZ2NGyHaeB
ED4he0MYY8ZKp//pT3+6/9JLL4X95xD99qBTh1vrkccka3xC5FVqL3SP9ImJ
Z4dqrkAYKSxC2F984wMf6sC+lY62QF0uIp4w2otawmRpGPcyeAOO2TuWfOV6
B2Fx347Zc7LUWUxeOSEQxmVX/nwRKUBa31PzUida5Oh8o8ntxRxCJhzCTaFz
tMHk9aTJk567sHCy2MNrm4mO0jzlKBVZcYfBPSKr7WlOvhtmkOnf5HkfEVuj
0pnicM0F1hwAi9QWAYuOVi6B9StC/VjS7wu//UqF1q1OX9KRGwOr7WhVM4U+
/Ibub3Y5w0pG3ZOao7kD3zu1SXXiR3axYErU7zu1qgs2WDW61/TEe7MEl+dL
ncmxVmMgx6tqRUIAENRQRNCkNMkqGCv/SF9ppAprulxorTGpOXd88IrJgBgK
+C1i2BCOC8SQC0504Q+/9eLHjYqRbGGVJtaVy1MieCMjSL95PQ7eGGKEqSoL
sE5LIex68OZ1Z3Y3liQCNThKR475EG3xtiQRUaRKIKNcy7a43+RcGlm/aWm8
6B47VSzOq96RiC0Vb3xnRgh/HMdlab6yHIIZq2ynJKEoz5ILZzaQ20T6p8hB
GzNHVJPIHhK1zP/5d18rPml0iCQUqzxzhSSYdgI37qmiEcFG3YAVVuBR23Wt
A564hQeqVwRmQMDWaBp5yC4tqZirlyQE/sASBbc4lyJZoBIIQgXUVasw7lS1
ykT+Wlkpf5KzYnfmSxlDtM28iZWmhU8wjb1QmERkkYn3OYaTzjXVKpUOdvFp
R5nUc9GV8RxznWCNoUMze43eUQN70QWuIHGyA51uB0YpYhrQWQiM+FM4bBHK
2Y5gMFHDxvy3Opcuy58qcw8xOhqsAnJEfysruTWAg1wIHJDH5oy1D1CiyFfj
SAvqcYJi6L0lelJMRgqIUpjCUy5e87VHfYd5pcRlnvCJOCSTzb9G0SiK0Rte
bbZSeD1u9p6dLemUPqaFAVowg0kqGvq/UDSy9BFZVjVKQ0BA2rE3O7fu5Kbz
0IrpLtX19O+qPBE2W3FWt8fVkMGTDCW8Wi9xEK7kGOlFkgc7NFdedXH/u58K
rm7xuq8cWoaIylzFAieUYmS0cYeBsQ2+nYeHmfg4g5Q/Ag84nIfiJTnTAi2Y
6ozr2fiaGmhxaJaw9AkwoE61yy3Jr6X77jBz1LU60KCKgsAZu7Z+ITykyM/G
tZhWpT5FLAfhcd0cf1JbQlAW55VK/itffa34DSPUfGxt7ShPWex8kBPxeBNS
oBnUNNnxLJCE+xMdJETXsTrb73J1bpTaC0ACaFlvlIStckK1nTylxVYHBcSA
8VfMILxjWZhEHxnf3pM2qOvAbaTOVHHbLfrGOdoW1Kk+AreYw568YviwQdIR
IdPTcxQQvHlfHmUny5wXcXxcAoibJC7rGPfyMC4Z957goCCm7DpRdor/BRSY
6DXt2qYIgksfQz32EK3XIXnVpWw3ZQEl8yDSSdLn8DqjIKCBSmfA0ilu8Kbq
V9K1nIKqpqUmyd3a+8wzz6RbKeJQx3BMzKI5U/2xkRGyERYO8oxab76lZHB5
dJyMSxgObUEtyoOVWFdpOIR9GFmITu26Si8CDpj4UjPwweYbTYt9+HDnXFF6
PR4F5h41qcyE4c7YymCo+iAVlEdpYQes3JhfS99ojs8Vvd2Tu5544onwrBs2
hAoTHljWXzZvfv+io48PP5dK4tcb6qIYFGXc6pKuBzsRx6UddQQPL5Vu+/H5
Nd4umK02pkjWwjToiqaRFNoDFHwyQrOO4EOr0d2naE4ELraH+1699OG+4LX6
RqPSbzsvw6WmgqZiQ1bqLw0Pf0NGZ3I/x/JzJFsTfck56eZoFMPWrVtpByUP
4rTlh/cf3nBBUBrHHHNE8euO0BkI1HzbRJwe4gQY3tRSaAxV8sITKGSFnDjB
PIEjEuJjigYrMnEqh/0pCuwcicG67m2rMS7PC53UgJkVy6HDfQ6O2IX1TYlK
qUQ9NJgpWaa/MqiH6zJ05eiX+NjzpHshiblgAKmokEwuoeLK41cHVNy1/qzw
+9NPb0WYoSXeRJDKoqklToDB85OdDgoVevIRLDJ+O8ZBBo419Tiu7F67oMDA
J9uqXVMQhUIn5TuiBValaTY74PHOjRQ2RPZKxQCmtRKGvlIPhtTfKAbaSmnH
7TbJ3rjis4roS+wh3Tp3bLx/65rThggNpayOP3hpcDVJcp9r4K6qB0tV+vGW
OjEHQ6It5sTcAn7+8NvRDiSiAnFbcuuKKgEJHGxT06ZtuUxUMqnNXxOhYBCf
U69S8U5rOmxn8tVdyzAXOl96jX4tqIV4IxMM7WRcitiUGFQBGYq3nn5uwZAo
fw6v33LLxuKzzRxVtWSycqroMicGuahj+cmUA/+jHFREn6On0FM0c1RABZ+h
2E1RXJ3vJ0W8U/6lD2YAJZNQc1iiV2Qf1eFglSo8oFV6VVfrzxb9iuOSWGVM
bGdMrDl0+QjgIPzM4tcgY3fAfk1VZOVqnpouwxBGRLUnY1j2ZMiO1SQBUQCY
EBFDkzaWimoBU3EkEBH90C56IpB/8T3KmXNOvKb1fThequJEcfJrnfXgj42x
90B1lNg+qnqLzykzbCQwIakpfhvPfu+fc/jRo8AEGREiLElorzn04xwBCKfK
UV66wok/GA1tQSmPS5RaULTFJTTEtZvyqhz3vvzyyyRjMhl8Giz34yL8iE73
GKGAdQQZF7qKu/lY5jbqvC5LIJmr8eqldLOPOM/CboyBQk0f1pqMkIGKJBFo
qLK1K/I3S6oSMFGzeGlbEX5J7RBJcd2Jaxkm5Y8BOR98/ukEkyqPVVvFKC9d
aco/6LcLO4apgIniIDBniX5OMIkk54SlslIxDOxHqB5GG98Mawb6s0HiZZIb
Ggkz/DZO0hPayM7kkysrmgUhoaIPennzSsd0S4Z8UkK41Loanq2JdcGD2Ro+
SkhGzpfr18KSxsUZZ+voMltlSNJzvNFXHUKzK/E540QnF9YrFTWOcm5GRlrN
GQctsXah0vBrK8u42ZeVSqhXVLZmTM5z5K5Bujy8Fo9WHaefySbxWcBWfdzo
YEAgS1YEbY2XqkybyWVKQ2QTsDGtO+0ZIoaLNEQclQbRX6a/JryG3nlZMkYv
bCoy11WMGdf07VvvT/hoIr1kpaHsFj3cCVX47NJqb4YeUwk3S7pNPJBL4SMm
z2qbgUOU6VUaKmzo3jnQgiR/ep0r88Kj0vnR27Zt2/vUU0+xVfKKeNi9Mc3E
+EelbYYyfGQYW2N9YqLGtz41R5JfmAEm02gwMkxyMeNBL0qSaxyYKF3VoDO+
9e0vFq80cF1e77fEzpHCLeVAhU+ebwtf5+eVTnZ+uYOJmEwcU7u06FAkGPec
pMFSAxROJgv64NOf/jSdG07eibQ20luJ0c+4EjRQKZ3Vd8bL7I12MSeX5eem
twXkDVf50GRKztUw4/yZ8EglzUErvYtRcOXxq8eFZoBXmlDQldeSfaNHCQ6E
g5PZjiUVYn5sCjoOc1CAuhOH2W0v/NNIUGNURvJ2ktUSwh2RhqXOHblGQ5Ru
xnq1xbvCNSlfXmc1eFPTZ8S4Y1p+bOdxhxhyY7NpQIisVQ5QLpBFBdM14cSx
n+nAdFGBn8eJHy1e44CFEdLWB4FuRRWIiDLQhJBYetJGc6mzbzQw2KKEZlro
fN68HPMhumBrwsCIDseIdThw8Iw09SS8d8eXGQLGSNgmK/R2OSewKsNBX2L7
GCphC4qwVS4N7qYtQKYVklTXpAhjjzkmnhr4qw59JZguWbvnFQwf48Qn5wm9
8U/Tc2p7F4AKFXcc6qDilIwKSXOZBmFFfgIVmJCrHE0TRGDtJgk5pAsIWHVG
hPCAgxLYvWOX5t0aa5r51O1S4CsVuzfAyNwEhJPy53gcFyOWi662F5njmgMg
yKwIA8EMF20qyzOYOdZEJBR9MBbaYlVgQUURWDwmowMWYm+L2/1bR3kqLCTH
cvuFF17ongserdkExy7WZkg8YE7eqCzXSD7/4/rfuNo/YM4ZBEPiA6umQqtI
nnaak0uPEQyHaA2UnqRDdrGDKcmuKSco/VQHssuwn6aI7zh8AsGLnQ4GRxvf
hfmNyisT87boQQIYYt9RpauXc0NmbGsVHKO0wUNk8dprryX/O5ZTdXIk6JoY
x4zZDCyjNNzYtnyNDDHUNajisqbk2vzc6aPn4e4bavxslUbQIEdUv6KB7Upl
WmC7ppzg9FNGBdSRooLtkpV+JzixyDl4zekgWCPPazrIWZhDHJDEHqJe3cw6
r3wPIIkhx3hgNKjrkKoQsAX5aFj6JghORqsN/gUm2Flfk0cDSaLpHZ0uDfoe
I0tV7xKYNcV/LMwI6FoLiPhOpds60l3TQEypZJJL+rKhrDy6q0RMek1qoBOF
Q0I8uoRLW9eAN9R1sQOXyBKmOj8OHFvr/BRm0ti7LWvXrpVq3GQwODiEyqF3
kbZqCmwJQxhQZ8t8RvLjJKsEwkN5QN51B+WPlA6GKORKnHncZINN5DWVynKY
pPJnCkOIzXMSMdy15BFihCBbGihbdFc7Qc3ZHcNeIEh1CCxyEBR3eIUQ81pv
VWkgEIQ0hZr+gnYLGTfUuYpdzRcPacTgZlsVhGo95bRG/r1ClHmXzs+Xyh4m
MHUqjRjjwsGNGbddGNfXZH3rWDUGFtUL0Uufe/3FBKwmVq2Mj1wm/iQnLmJg
tbFq3nBhcfxGAlbkByqsmldeqDoHNbDY0gWHdhRgadjLbOry9NsRiy1j6gjN
dAlKJJXu4SNppfF6NH6qtXNj+tKwj0BKyw4nFKZrdTaT8Uf33qVeUdSyOKnA
Nn5uPvB0xEGL+0uXxnrCl0TK1/Jz4uAYl6U92YmtNnQsJ1mcFykpbeEtJTyh
57Futp/l59LUUvqzQWFKDTUVk0S6mz7rPdWZvpru74n8eMnCP6LhF3AhrjP1
Tjquvs3ZkvGrB6t0NBiWuULlUBVVPm++cbcpZv+EX5HWhfQlZbbGickYVH+z
9f7GgB2gUn7QAgdUUdn0pFtIfwylp7heYIn7cUDIBK437j6VaWniSCKYJrr4
UdzdazvCUbSpEgcP+aCbk0GSuIk51Uvp59hPp6seYtlna6WLM63YySu2coEL
TBqJpP6iX8rm1UJ6DPE6J3o7q2OIjznqaljgfAdOMbrucjZJYog1nNTg7Wg+
Opk7Wu4BmACClFPRRNIwZRnBTMeyuU4ne5qSG8YpmkOV8Rfj6moKLJmhoCcP
0I54dVv8tjOCSsgcJJQROnQSekyzrlcz6THJp9BrQ2QcGTNtnCEwo7KI8zRm
grKOmbbAGTaUSarTJYEZPioahVLhNxEZdTZnbR4SkwGLfBjgoVRCG0XZyprN
1RgQh/no6+7Kn5cWRIzMZ13HW6DWmoEQaSMUFzqZKB5SUkcoOuWUxsitd0K3
M/FaW4/GkrwASYtMO8g5LyPHEop15ZQaOVz9EigBqA+SKDuh7cZLeUJNJMDc
jEuZBoVNVvYrtidXmr2gb1WlZs+/dFNGVSLR0DEs05XFUJxDYO1Z3CzTlYxn
kcPiOtaxWCQogHXrYpz1MeMd5yMZddd4qsWszKc81cRr5T8XZ+C1tr4Ogaa0
ncSBhAlNs3FFvWmBdUMnNZqcswI6267I0nRzhUQlr2w592j42C1U6Q/zUDfq
X3p3vNQby+v0CzaVeY7LZ6drZsmtLzL/yNApvenkQjN0qkP1Y8N5pT6zkiE7
zQnNGDptob44CNe4jBo6scqotttY1iYq5hr4QU+aMnHiGKLBwrIuSRAk21Sr
OiIGpV7uia8p67TQgdmIc909eZ1S7LY6r6fJic7hWJCxx2Dp0//J1fng29/Z
f+qm2/tvv+CyYqGTA/toC89oCzOlaWM8yEjr9I7hu2jYTmpj0sFIPKOpUwuy
OoxHY0QV3s1A6ghxu1msmsqKMenszJY4kcWV7MupyRdRM1RsT8TRuPKGilzK
xdFY0ExhnIc45KGaDp3vMYOvUhKJ1u2XHny4//KHP9J//dc+G+RG///Mx1/s
f+TxJ/vvu3dz//FrbpzrpME+mmBRnczvdavLdBl7vzKKYhVTU2czH8dbc/WE
UhOC4khQiXnrytC+JuYwxEuACjcyynq8IzJUupujlOGQzg0lXym/9upll13G
zg10hxqHsSmK1dqTiKQxaXps+R4cID1/jQ+j8pOh9mXL98UmslFSHgSK/rMP
Pdr/6HveS2Bh1jqA5xP/+rmgaOgaUjRcpUXdywV84xcET2iH9XvVnJJ33pCi
qNOEemmaIArMKDUx7mAmng/ZqV9Z1XCepTCjKveOyRtzQBO0YsWKgKxnn33W
miD2YmBGvGMYlBnBwFHGvpxjykGW2hfH6T0m858ehUc5R6bwYtHmnACS99zx
lgAE0iZSu5C2kZbIaz3aMTjtJ40W5yFk5MT+b1vMfaizIqJjP6EFRbqKN6aV
0KlJRftpoKhKvlUQfUc7FMPoKRZ9ndPCBomdFpNMCDvhzVkrSBtk6vzY5qD7
0evwdlKdrRxdzJfPDXghPHh4MdZIBtk7/FCnqeCTYULsMGfSZUjEMGlrJkH5
rxL/aN7tDBP6OSJlymP0dj/++OPcnBYURvmHiz9hirhVVnq20Qmc6GKGbN2Z
6E7onIIQ/nryQyO/W7FNpoeA/tJzPoSHqPb7NqUzm/i5hY45ItMjzREtCfnJ
JHPyVUm+H2rm8LxqUOnjnGssEvF6zNO09Zcc5uwdUdotIRNrMMfsbL6wIDt2
7AjFXcHpHIo9a6kslP6cqYCj3N01+es62CNBGKWbjqqwc+HGuCP4W/NryUZF
rZvG73GxHyMWakd5/iYxxtycqQHkrgN6UVJ2S2GpCDvvvvXOPn3xZz/7arA0
JFjENQE7JGzCzrNO3MPzhGX1qDdWgysBOT4i/cPAaYuhQ0FScPRr4BI7M6bq
TozhTjUyA2QOuHFRaxguDQzmKlaLdrZHCK0UGzKBj+iYS+DqVamnbtYi1rZJ
9bmzDmYdRQAynfrhkiP0t8j0ZBsvtwy2SkTMwfAQOgglPEWB0UO/k+og3qVE
zHuN5sjz8ysFpl7ygBuWZNC0TjjATfQdCtpU1eiQj6TY9VYZ/ceMnnf2ELwa
buCX7m8sLQtVPHV2ihN97GMpv4vnz7q5hUrnpJU/ZrXZPFJNmxsfxCE1FRCk
Cgpn4mteRlKxeUW1OnCZM4cjHiY1mpBEvgjknuwYyZx0Cf0b27GnGlg9tw61
Usx+QQqkTmkOvtOf2Aw5qsossObFUOwH5OrB8CeqpZ7l9GoKUYMINZi4WiyE
WmdlxHawXdxJI0UXSQS3y1Lart1PPfXUntLK3pC/UNqqQzUAgrCN8gr2CeBR
lYQrM8gMyCtVgUSQparA5U6CKYp1TkAE1ZaSVrA6iC0Yo+ZdHRi+XItaGfDB
ndYyrlpbr4R27KiAZ0SacFpZDzdRCVV4vtaKVIAHSUJVTxiz6tNd7Zli6WKw
5SYWqDlXJRbEDCcnmrIWC4WEyrF+UEPJHuvgtDu0Vf6tEAE2TaElec0FeJoM
GIGHQEX/TpT/1gbOzytDlW7SxSbUos9j5LRF5OjBVklfDzZxtEVlGKGquPDK
UDVsVLXg+RA90jFeX0oyAiD82Fjt2bp1K43wq/N3MK+lwTrJpgjPj37AQc9h
+e0yLOvI8TFS5HiPhR0MFCHHGqi3deD4ZG2pPLnqEuMr0XsZLW11NlHFjjJr
xzUgASmxS7G5S9tjhTVCVJLyoryzO1glHO2Y1MuCBQs6dGhenL9DWgkYItV6
B0dcMTwPOtgx75U9lqrUtKhyfCudzNESEVULW8T48EzRW41XYig+r1xUus48
rFLGU2vqFYpqpJmJD6+gEXsWXTqPfhe8b6oIRZwtZl4nxzfG74mW57lideYG
HI2TnQhdmzZ/4AXasxEjtgzPadom+TIFKc/Qe9CBjsje1lF7XPNINyCpvZVO
1mi5sDoEkzarQzi5u5nj86hg2WnDs9Fl3MSlxj9bd1JjBw1wwgsXNlg08G0N
3Ir21ThR5XkRJ9NKhRcxTdXa9oDPUx4uV7c3xNwSOLF0tc4G2ca86bwc6Qsf
cJArej/ZYA5A7B3uTP84vNUGjVgb9GahkcTxmk2VntIpvkJYL/om+o07Htqq
ZVBny73u9H9aByCHfpScHv/uHewD5KBsSRXpReRopc60bk2G0hojU/gbNvwA
pA1dc1oWdYNlCmgRuYf0bSKbkJZkcRV8JkvZROsd4SSTjhFQIHQgepHGicQs
jdNNjlPCTJ9X5ilrzvlUH/oa0joSOm1MH5wXhg6HIoGKAX5aGsPVkACNH1Wq
B/woum0s44eDJPZwPatlGJtgNgVj06E1dG2WdY3Rkqiar79PlBVramtRRprN
X1q/2HJ8Rzhx9gn7YLSudTyWmuJPr86cD6ST0RI38rUV08RoaUxCiF5wBsq6
beSi6lOeD2mgpFxgQEmlCaJu6da/x6e/S7sCqqZrmgGnmKhu4EM1uFhjoMZP
Fdc8oDdDWCNzhoB0fdp4viOdKSQnGxNGKPJMmGCMrzJ2yaP4cFKQxxi/yWCQ
wnUGUds01hVZJAlEfHa6LKMAkCwjaBg+VfAJIMHlVWnNS7MUUxYhLvncNptG
ovOgHqXYOQmBU4Jr7JmKjBY5Nysi8uQam65N1lxdWL+jnCEm6wWOjEErmiza
JcZSZeav5tihSmTGR0LTy2zrGE9tQflyB08caMvgGzOqujB/qgpUg0qlPAEq
ZTUWABUNhk6GN+II1w5NoGLmRAejtti5vWDUQr7PdBWbHKf1sOlFSfwd7UTq
Z3a0ZjLveb4xUZb403WhlcEoG50QjOdgtHF/h2XgJK8R9kJuG4zDrm1Bry0N
BXDYKMh6PwBHxVdMBXcxa0sAso5FFtgiTSaMoYShHyoGfSC/Pakj8FUqsQkT
1sYEHm2i93vvux21DwOZsLMdu1RfJlqpymA3SkZhJ9SrnP5P0bbjICeIpOcs
HJDTpcdcscYaOSrtaexYAJ8Y1MLaDMOZRulnviUesQL0dOtmEKfMV61WJbpf
ou9OosdJvrqJTnu+maUIj3HGoFywj4br1Gae0CsXlYmH651obFV9wU7/+w88
wMqDB/gpCCHoUVEYIKQKRYt8YmBt4egZCkKqHhAQUuXAUXCKLOoaqtnkRJsf
JKbmMEtKP8MPUtWleE0Fkl6VoOgdNhBrpRKPdYL6S/fBjq3xs5pNVKLst7rB
pNwpKmMoOYF9/xdR/GLmh4aSdxwjHGo+CafAnyZ6ESjiamDHoVYkkXfyTNRv
g5i1rv2eMEFtVo1QI85ISsDxUhfitOiaZGgTvXicSXG99NIHEG7P8QxbwpIx
bMkMyeFezBB5daeyhP1Gwy6RP3V8c3jPNS283RSQ0ACh6iwEkFp46sQ2aiB5
TrTywwEktfExs7ipR4JPQcqmqHMDKA5YsMkMY+eY21nuYOcB5znwqQ0pU5tc
l4Tj8Y6PvXEfTd3RBiuSdfQKUyVhzYyljM4YU9W6nhFmHZl6XerAivulJCsC
WA1CQmpYqSpDwRyl9IcYe5jAO5lh1cXaDeI78TlBJtfhWbqVej3CGgFQyvTD
RfByq2384/HG7aaI/yZoJ7JabXU+bOlmHK3TVKkq+etbnHDtWKGddKvNyJ7v
531Of5c4SILtV+5ldw4ymTMgiZkXx+X2LJ1DJw1i6aa6+EzbN27cyFyzMG+y
W2/Gwbrwk0wKz025tvGOq5yJJ7d1KPSxtm2Zo19aSlUle32rE7UxgKrx/sTu
jz32mC2qkT3zQW4H5VVJqBId6GnvAVW2A93Ur6p5BhpVquTQS5IscbDMhYUd
WgOzfkpJElKFwoWioiHpQoF9si1+RziINyRA/A1fZrgi8I+2QUfxjyc4I/jv
6lAOxLZNlgMtdjRNTb2qVz5/m3g7h3GMqSoTMMrkIz11couGcmGOf2ABIl4u
Dgwgm5u3qKEM2upaFesNkHGHuCxNvNT5BjFwwU4ytUYQzIvfqTyV7NpTTz21
/fTTTw+nUTe4WNhnqrgVB/OpDJLJmISdIY4VcTK3bWTliU7q7V4or0FKXOc7
GkkeR4USV0t0C4bqdifO4ynw1Rm9U/Cewx9Vawj82dFpQCDLVoXp5sQuWeeh
eoH2ge4MPLmGoSp19JIvngXlMRtdLOhB+f307+H2Re9Zk1VlUJrj+dia4ghR
lWmJSzNmi2lU1qYj/bnaGcGyeQBLSmAl2Hh5uS7MOeaSvdkJFBmJ1fG/Y6p4
qTCdy9GvWECrQ09Pr3lD+Nn6qsmjRfTLEiTFeSjJ9lydcSF3QOo6vuOOO9iq
FUMBccMpvKQ/pytoeglmZXI9M3wooNXRDGP+pQ0nOcpsJji4AgZX26M/QyIx
pHCijzfKa+Xlk9voVEajnOrycAc77JXljjhIc+jUXJlbocvucCJNjlzbOpGQ
Q1a2LrIXahxuApYzyC1UghAoAUKVe44gHK9r4d/zyCOPEKpG4hl/gcfnP7GU
icd0ONWcOhMkwpz02vIMKKn0RS1wtXymUumN0zq6po2g5ZXBPj6vjDHYiSTh
1enIwJ7ksBxbRc6mUvM7LG1zKcbyoqHAf0TclO8M754AbrxqX8nib3JiUj7Q
qa2majhLKtnPuRlztAqyNrdoss8IZBV/FEOOKbl89EdmAkhYXOfNwcUZCm9O
VajOHy1xZBqPuuxmiofzZyZTHD3KOY08yYYNG5hqCbspDirQejcOkUiELj95
zfl/2xlbZZhanOxUCb9LqDZD7cesL+IAJjsYRE38PYHobicuPbJecW3fXgWR
YiuiYzZfWka2rnVH3HjWFUlJ5Tp2Z29TGgD2E3lGVSsa/+slk/Rr0dFvnHPP
RF8yYXWJpccff5yOj9i7efNmmViCalKqNEZIozJNnSpCMa2zjYVd4wyZeRIw
4mpwEnlL0fBIRwL/LU40ykhqq2gYzhs5ma25GV0mV91qFuXIyqAUhrRgJdfm
jROoKz3WcPJKR1uzSrGYapiVrDgvMPXFaMY2WScajNSQVILzr8KSOKavx/qN
NTFv2Mggt/Kva51M4xMOAIaF7auUFPdUXPqxj3+YiXvvwNJ7nGCTodRWVcUN
tNIaeRzGVIYS+yX2wAHe24piFGS/pGibyH4NG8+LV/T5EucJ4vihKWmpuli4
GDjMVQqtiMfudskt4dhoZdfuzaBOr5mzaEQGKTVO1dGzax2Gg8Elqdbx8NpY
xf7RaTxkXiVxL993rxMtHtFRK404jz/lQClG9FOD2rgr8u6UtKw5t0qR/UAS
KxaZ1oY9q0sbpdfE9C32Yeim+LDdDmEiiRckhvL040cMMnZdc3li8J80a8P5
IRKGY5jQTNSeAmSVP6ezGN5dS7iOJsL1l395e1I6k+Z6Qs99TqjHiGqbQDyq
nyW4wnMcREVVMcrFS7xMrXYO87cGIWE1pLwEd6tNw9AiG7QNdgIEzL3y5bn3
omOBDoollAnclO9N2rggiEBFRJG0MrGnOElIRlOVVe2p8uHv/uFXGSkTzlvu
d+I4zlW2tVV5xXti9ncCVKSTJuwIk67WL8V6mEg7cC0yUIaMuiopheLy8knq
tTjaSAf1mOTPppAzYZ4ppNtH8l51eOKoho7nwh6ibyyYhLsy7NKNiXR3gmJc
FzU33aNZ1zsJy8c7UqZDDpTGnPdudqI+hlwbdeAV+4mqrQQ5bypphOvAljK2
ZI7ZRIJ3lpZi9jXqvNy42jiiHDW9fjjgYYZUcAtFB3MpJhUoczkX2HVmoXq+
mHdy3R16SwQ846uU0xL9s1ZKdb3RcZTafFc3apTANyxAxYNQRv23PyA8NY4V
VzYXe1n8KdbBSxHBGqj0T1QAKn4008QrdjV8Fg5zsxRqaz20BqBXzOqllpSW
RuOsNGD0taK8ufvgH2Vcud+jY1s09yZJw3+73hxsO+Mqz5FQbeNSi1OdOGCb
4NqdsYSyyplJCjm10rL6ePuDTnDJ2KsZ9pSignG9juG3noO9w5xNKI5rHcjk
4uxjSZ3SH/6d3eNSjKlEA7CDBvbCBC9tpIwamt2UtY2vTRN6uhzDxN8R1NLi
drSRBuQM0rS+paDx42lclVQ6uioZmI3M6ulOCvOdDrXOZWGSPR01lAfFAsPm
vUTmv028xtcxvtrIC3MunuzsUfiCdBQmokka2LbG8zsGYlVPU/DyQgYvK6Ri
vaicK2a14zhx/j+3j3VrrPZOfcPYTS8dzj5tHb16upOAfKfBiMSS5E97JoYk
pmLIweHDTqy5oiN74TkC5kCF8FgiFDee0OB2Ms7cr4xzMOd0NYDJq4T1Uj7K
bKK40A4vFH2rHUwkDlbp2lztHXcaJ3O6zUEcGzPQFcdaIugMJ5f4DghaTm6x
lc80qmMcISeZSIorKY8oeuwfdWKC5fX6SA10RsAkOZbCnD4XVHPAXQinl2vk
dLZykZYaqIYayOGoX3r3DckdtR+W6mcJ+F8NIOA6q3/8uurOHAXMtdLwN2ag
VruhFYMaRqeU/5cM6hlOtvAdwr9m/eKN6piAk86zCyXUtjgx4mF4rW2qc8TN
mDUqCjMgl5UfH19rtWH0HmnD4tsGKpvW4PEKXD3aS9k1nHtCIpQ2LBrUKY71
uoaIwpZVK2x60pbRgDQ2YBjHaXuhawpZdxHqCvCjZxmegTzux1oKUp3z2djj
BszeLhxxsmISNW3MQvTklA6QiEFxr0oSxqzX4IYqqimXKK0riQZiuIVWVqsa
CktmcZTxwhgfa6jWOJeKCuXuxquuPqa/bds2Gr3Ixuva+IVeDzQroToedIOT
DNwqNIXmQXUZ87e//SVbGk+Kht8uAzKutm+rnYqQGWXdqBQMCEPFTa7SeOls
nqI0O/Geil3XoFG1pQ0JGxU5gfhRNmqdvk6cx9F5OjkYYfZ3dt988800uNXN
1rwpA9Q6Nm1s5gYnrn+7X2IsC5LF+Wv8MkOGri5hs1W4yxxmMWraZjajyFHW
fREajnJWFdp8UIsUg7FOtciKJ9d48VLFnA8Kv3kFd5itYs3SeudSHmzW0UTF
b5sT1uf/p+1Ng/WqznPBXWeeNE+g8WieByQkAULoSAiQkBEyBiQGwcFgsJlx
PGDAsTwFD7Flu2I7JHYgNn3LfeM0Kd/0tdOdhLo3rptyV26o291VXd0/muqq
+6d/qfp/V53e71rvu9bzru/Z+9vHVa0qgc4+37D3ep/1Ds87rHffffftS5cu
9XN3dNx1ShfDPKye2fIlHXmrQkf8HJsY9DKvCWZc+JT6NoCw8G/pWjY7p0Yr
/HQ9qJz/d8EkqhwXo0MGOKFEiy9cbXGchzl/0xR5onnNXgiht0LH5tpjrWZL
isVRgjpZpazbPZy3f9EzNr8Rr2MOfFWsQ+jQL33KI9oC8qIBrIdalMRv7RTf
SgYGvZysEz3wxJjF2lVWQzZaKqsQZen8hAQniMASnPqF6Zp/MvVuItbzg5wH
fdQjqp/xSi086lchW4RIZcN9PZhYIaabTwiZk2TLtEXD2a2jitsN7XOH2uxW
8xmjnVum49zznpxwl9LM20ic/hJYopJArOPzooa3Z2jrAHF/0KOyVIoBqh+H
qC6RbQt5yoQiRZXjZ2JyLVk4ZgQs7Omt0OzhDU38bLRH1CNGXrJqTJYNcXGY
Wm6rETEI35yfi40l6mfYyiO0g+jH9f1dylluzrefsK7qqdRachFpxNvIUCFD
FA7aYJQ0NiOAGhskrpEhCuOy6/Rab/+WHw0do/kRRJRcMA2wjchpJoLQ0gD9
jJ8seFicgYyqkkBsYqM9qsz7Dt5Uh2QHtGL32L1bCChhjm8Hu2dHZiL1Ha91
niarfhtrkcFMSE/hZu1AnSC+94uk3LJtRAcqtREwc8YkvkK0l+GqtxvLj5KG
A5ISrgYImKC0NXm+d2SANdjCsZQt+OEPf/j+Cy+8YMfhyDVgo+1oOQIm5n87
H4bZvQkvsKALbiVAXKM46Gj3WEXJIgVjt/zHvgzd3qZneool0owzJPC39ASj
GdlsDkyLhLKUcNIOi+RWdYz/xwmEWDH51nwtebux/rLX8L3xxht2jEnYmN/5
znfk5BvzHgyhSEXbIQhV1O2hXMHydnot+NYRcsNCqMhGlc0gwXJ4ohgyptNw
SNLWnhITIS4c1O4ptI7yZLcp0NE6RoQ3HuLhTqFidbBaANM1XdJwzG6XhvuT
ZDiRAQ/rMttGeWCZ+hiA1iyhQRDjwZUdWUsGQVaErhB0FEBszZt6+Y477rj2
/e9/3+qAPnzttdfCeciwmrKT5f8CCnWtD+gyXQW4XdNrAW5a95PsgkLxqkJv
Tpd6qUOe5XODs9+SSCEzjnrmMZzIa5OUFlRU9VrQ0dKCymuTj9nxOHoDXrHp
50NzniJ+fvPhLY2jh1ExWumn5VjQz8fAcUWz6nN1UGMEd8Nkp24l1xR3JZ1p
K2WLm3b1t7/97Wuf+cxnGnE3IMkf67rU385mBA4ZAgWd05VxVHaWBCsHZdkX
ckioN7MnGx/fmdny1BEbuJZp0a6NztP+JpqI0WDDK0+MniJpu+faidFiJDE7
vXeC2FIWTBrI/q9PP9PKThRjm2Cve7JLYwBU4nawUMmBOtApPuzzJVEhnrvF
Ywg09as+VBjFn+J/L+jrrlQ92LK0MMYDbXmaoHNgaAfOV7g9wzDZ0diY09hu
iomE1IrfsYtZyxoa0sL92NPbSRnxs5yBaGZPuYVl/j/GlQaufkyFgitpHQHX
WF7jtNW3kmsRXAuaWFLT6Qa2q+fPn09hIUOXFQdV2UyaipnGax5drqKzOaEz
Vt5maSdPExDuzuKXa6ZLGiJNxVZXfwwOFMFzADpSqreTGUjPJktIz5bBQuEp
YkgXkGqDV4jFXN6RVh3x2MqMTqhSAcoiVZsoosqBtVjza3su8EZY59uCKKeb
wElLbUGRdLdyCOb3k5RP6sR39o/xHfEUiAVoT8tpSU0hZwVp5S61LUrNOs0U
V6ZnpP8VQ5SQqncQnuJThSFDUtWw9P0ffDNfg+6GhUQnvUIMo2GpX9dWgaWA
DLVGruRkK7mmnlZSCPpHPscySLYmpkxkOVsANVtlz129L9H7SxyMXFFmYfaA
BktpBzNxmq5zJm63f3uw29br12XKgtmxbskeTa+xXDMyF4xKvZMcMWKdLnjo
jGHmL/7iTxrJeW1UWNTitGtAGX5aqtf69WsNEyhN+msIJXdN51uxSt2kAdQh
SqSV/LFzgzthqXCwvHJi1ZmOqtWSKDNv9ohns0wL8+atJZQwdDnXhPhTbTYP
Gpfmy6TeSWp9PwlapmRSm0h6aEOwkWx4ViMLBw1Z/WgIhizdS27nbiXXArKC
YYwbWy7acjDKfV6IGpC7VO2kJVysVtOBI7onw2jcEu+qYCJGzgeN85yPG8HU
Ld2j8UFDQrofk3oX4RasB5QxqexYPqTll7W45RjzLelILBTNQlCy0ZVYSJWY
WN9flPEmyl2zS+InqbapEFiKqxnEGrhRKZ+w2CHMFXQytyjyl2NliCcXkSRW
sDF76LjkhYqe7vZwsp9Xde3rX//6B1euXIFyi3ai9AxhFAxXLIxjZ/ahu7Wc
YIiFe4arhqqrxSZVhisjzrEhfiu5prgyJSEisyQ2KCnnPCuu3tfdJ0uFIFJc
GdQw4HNBoGouLSZkZZ+s+grnrgtAigE0wdr1sYrpdVAgwaxieUoKuFtiFe3I
7QZ3S8d0lCRDVXk+9Cw5vOTpwvUu+VBynh96YSsK+ykteyziWwxqy4/Z9mwC
pH0SbBbn7duBTUjlwHYcVzE3wZUDK7wEUsatG6d+tephqxbDHc5WQJB6eLEC
UVKhlYrPwgPAcOxk/NSPZ0bSwXV5xlYXIxnznQtQDXXtX2bt74wXvZvkGZ8q
nPOCF22oMcYU98oCgKIHWUhoYOtHLxQTbwLYoEM2kQpb85onJ1l5UfNDLZLp
W0ushT2LK9ialSNHR16Ga2hMgw+21EHN5bZZmieq5h4SdMQ/ebjbPlayaN6a
z5jcnmx13IpLuqSAZo8ePdrGkFZ3F7zDz9/9YQ/UHI3VUJvs3TZLXWPPnjn2
Alxz0Sy07NeDVRwxGaCm43cY++DUQMxOj5m6QGYUaXlWiaweHyIqtc9XOe4W
3RfudmAu3ibcuUFQ66pZSSor7iptp8ZtLlJssZ1NRRZdzl6BwcqYpo6+AvfY
JE179epVebgrsn7Shy3e2EcUXJuWrkjjh54EjVOej9NGvguErPwPY8NXyDUj
v3qLukZdixZAIEBKjyJpYiES/3gu/HfcTIBprbYyZXe4oHp8gqdZuxHVbHJ7
Vi4hv5+Wq8schlwlKkvnwDSlpMkmCNZaDKRTY+szgLoYyGJAQFA9VqWj+L32
5S9/eQ5ONnjmscfnPnXh/rnnb6+drNtOl168UA1PFpaKkaGIG5wutLrFi8dr
hptenmHU8QwlbrQ9xWX5FDfOosVqmwmX7KkqNxEWPX5WlBxL4ezTXf1oLAfz
OgLOxLIMr4hw0qMm3EiLAXMqJkaX3QxYkaAGVz6Q8XPibcsCXLjxprlnz983
98lHLs89/eRTQZjyf/kZcFGdJgm9jxduTa0weoAh7CZjya1ZBs/TZuGdZWZ6
aYMRpDYRFOz81qL8BZfd4QkqQFvmEbi64kMOF6wClFVJlWYGTk5JX97VzMSv
nurXSGOYsffZMcj1fz6wXqRnTt45GCQ9IVKfe+7OcwEFoiUcOh56ZO7Zc/cK
OmZAYwhfKdm4jxeOST9ysvCs1xYKB91ljM0MG72h/wgqDRSwlkwii2HK3Y3X
OUOwEZVCz8jWtupgjw3m9Lq0CAxzSZsWGhkSCPqYj4TcHSrhovqkYfq5TuBO
hOHe7TvCUn/p8ser0SDloRIUzop87MHwq/olt5KU2hOFV8E4xlz62+MC28wA
82sFUiyEmmrUF8NXr/biAYt7klBVXLLcaSkLFi9cjxLvNzXAVfgqICwDTNKt
zgpoHy4akZByJ9gBI5JuujAi4afYgzqJadK+xqSI74JXWUt47i//7M/nfvCl
r0yixjhzz9ynHrw098wTTzTZkpsgxrYxOLOF74CiZLW80DqVRsfZ5Gj0MTDk
sff2RtdDEl0jLHQyAwumHVLU8FvGIrw2EiIj5bBDQhamAl6PClYCyQqEytMV
7cRsBNAZ8vYioxrQszO/rsjmdT67Q4mgRA4c37i1DsuiqL/76utz7/7lz8JP
C8N/xwMa+nge1Y0k8zVLvIm26ltMVmwEmJXuKIYxcWrhcChQ+z++/YfyU/hb
R8u11QmQEfYPIaMjZKwXHCHjYKTFNmbow3XtZirnAVjLAZsgoZDRgd6uhjGC
sqeF01kVO7APcXGG4AIY4aRZduSnSnYUzgHFRmUtq0VlMi1cb5UZt2pQZVyb
mbD133jwkWrJ/HyQAySn9Vg31q6BIpaeJxuri80lLHYZ1Y+UhhNp3RXA1Dpm
oSa3Ho4YCcukAz9YZbbTF7fnZbdkgzqOI01VszBdN7HEHiS9xYgDAX2DaFoq
5j232BbSKtOQmaRxy5z8X3zSLz77wtyr9z6Q0PDKqTNBY3zrlc9WK+blfOwm
iSgDAz1muvG0O6zb30x8DYxX5BqCwXg1AUT976g0Buf+bwCDttm7mIRVXigY
rFY47FUdQe1mkFbtHf6B+PKIIAWEQ7atzarY6RXYvlFYFcSDo0PIaObcRDt1
QQJuueFPPj4799M/+WGQt6yj/P9Hf/SNua8+9cmAA/l3/fvrVSk8P3Nn2Pji
ZrSErNuLiFWc0MuFTWAUWA2CdA2Z1a3EpbApRRiVWJ8aeqALifi1u9mFHaxL
41QWf6Kyo7ptnAiKjUhuJK2K3zQ4up+nvfiNx2CDZPoYikSBbPZgDqrDzp+r
oAJvQPe3yFqsQL3nRd52IojBojYM8pI1hf/QYxfAf9hC0jmPFrsb6SzBQEln
IQ0aTnoLbWMs9mCSZxt/A1GnbPqHNhS42Ys62wqJq1QzeuzYsbDJlbN3NaJe
8q5ALwJspAwyTLOzY2m6GgSt3HKFA3ZubAV+4qjKqbYAc28+99LcW9/5boXi
r38OqKh/v2YerkH9mg0kFC0RgPQEnrbGCM3toBlsdjB6kKYZbF6nOANFKs+w
cPVT9WpMx9VwPfGqBVDG1YmMhYJtnirJqnCvX/3qV8XWW8LdTosRwXsouKq6
iLgxJJCtDQoVe4BEcB7OZgGXlsBljiPke/JpSEFVueAtBJQDEl5WY6YNmqzD
GnQOLPhsdA7WwFQXy4s8QpS9iR5PQWOF4ztafEQJUCygMDj81088UlBVQwaH
a787e1bi0Gmyj1jVwG1+mYPOjyziOJuA+f6nP/1pcQ6T0o8rNJgKNeXPDfF/
Fg1iodyJfFtJDcDhGOUQKSf9PgYjfV5Md/QkwBQlZSXbVJBlBIgGl+GvmBGx
FYUZEQxJHOrMyESXMFSAs5LMcXmEWIh+NCdErTtbXEoMUA072NA+ESktw87c
/3727Hvv6ajoAal5Wp/F4NuQQ6GlYscxYdFL72GzjO6ESc9JXRxycHFVb8ez
KNGowDjhFOywNvZGAwNjPlMYFW5XzQpyVEo15NBSmMxhdR/A1DjVAqam6mpr
FCfLSBj6MLEhzaWVPaOldhPTYk4nhh2GEUznj3tzIxipv6A3xb/Wr2YZlCYl
dCsBTeSMe2ZfFhSoO8YsTo+zUwtdSduxCJrS/BRFHzhIg2VVHQXDjNGa/Lqk
euyU7Qq8kkVFLFprj1rdREgUSoZap8+cvXdNx9C1Nlz1SxYWoeulSxcSgBjd
1VtD2RPi7gGjZZ1NBiDzf8Ro2Qh79F1LAP0v9ToNkbn0uh1Zws3pn2P+dXCG
yoh7XVWVx1A5ttQDyBWtxaxLcDPQUGm1pWNGi7NUgvk8Q66xhNv1+WsaEmrI
cC1RqWoYG36ahJCnu60qfJwmWzVBfN5LRL8UdBipmETudB+4SZadNSRZG4GY
MIakMYKk4XgNz2o3JLGCXKeedDaO8e5BqDEp0o8fCwMOjB/zSHLpuXjmhrNf
8m8YGlMM5fH260y+lmwYq4Bc5b/GOiHB48GasaUqWLFbsoy1glElNZHs2Q++
9JUme/Z7uD0jJIC+2I1Mk0I1qIfEcHs/oU1YEGWjpDCIGm2Gkusj6Bpk3+wl
FXyJuPztveOsRlLxtDtDLbnPcaRdj2mbJHfEZqucIddYiYi2QGF2D8bWzVRQ
sL8cYu4QMT71yWrpPKzbPGPxGlCWDbJZKt/69h8qmNj4ujhxgJQ7Yth+gCgg
jL8sH2hIwvhrpBlJzj+alv8Ev5MN2rwp4ydR9dGZ6MnAsBOjXNWjx4+rNovV
R86yCZYWNuoU7y51tWwrMqZaKTsLhwQcAgj5acXvYdP6eka37tk3t2zZ0otE
i7TVLmL19cEWHxrjLMMIxlmDGmfV7s5cHV/N/a4XK67LhI2VZ8G7jqKU1yRO
X1HjjF/lW8BpTaOiRs2LK0yLv+qxYlpT4pxiNuXkrozt0oo5X0qrN11GkNF8
qxQ1FrHXMKiM1a9tWVArHe0XukKmbhQEIfYWUNQ6474OVB/iBjmgQyTXV8Ze
0jZiuMHYa1C5nXrTzO3KmBkh8w03emEgZByPcyRv9aTuYxq3p1zN4MMOBfNo
ceVqkf3psVGLMwpKloflj11IxmxUMSLaQNnABV6nmBG1YTH82t/PTEkmaHp6
Qx13fyM5uwQ351v4QFbWiN1tNwI+xJwJPli4ZWNX0UnW0GrubtAxI6SLW5sM
WV+tI290cLJLH6zggGmrb7zBAcY5yftVZIVRAnWQgKBGyRmbFqPkjJcOhi7b
pBtowdUKGClOEnsjP22Yl2laCWG4DRiJApsI3q2AQLBi9QOGIQnHhTCuX3O2
IzXIUgyHC7xIxM8CLYahQf3v+3GZ5/61lrFi6L33AEObiTjYoMsbM4aS5xJ9
zB6i0JQVq4NUDO1VYGDecW8WLpqo5QQb7CgvMFGpXo+VQhYH/AatyijDtSRY
3wzqRqjEPiZqKQm/RyA4kqnMCh/zdgRJwgYKsuqXnO5AGkqtJCusPqLXsAHo
FeUIwQMKf+u4Kmmda4qY72bEuHGpLCm1xS9q0ESH/LUguLj5+7GEgpjEEnrE
uJK4PRmnif1d6WHw+9god037j1ji0lGE6wqGWSLybfOzTosgxLa5IRP6X/Fi
ZE6IlEA2WCvBy4kWjrC3erKHBLoJHGRLWL2cMt1RzYxhlXX4a4CRJXq7Qm84
uTdsjLy10mBsfdBvdijMHXHdP1XVWkapmNmX4ZQcYZ0AWloqduRpYanCzXSw
VOHaZP6ahjQnEoPrgV+WlZRap13zslTG9GFWamFHS6X4uYVjormisqc0++ZG
P3kY46vwt46tarsVvR0E0OIUjrs2MTYpi5E4N3hQBZldnwGU/Oqq55AlV1Tp
AeTq5bSUviTqrvcgQP7GxeSFmQr6iZXMTOSvaciABj5QXJ3aN55W8YsBsih8
7/yMlRF8mLNa2gdBZq3U1zkMfGDPcRaNlZZYgnWMRFURQZN4LSDIoixDzz/W
6JElEbU8TBrzt5MtDrYsdYHs9xAK+irW9HbiAV13vseRq7KzWkw0XpqAY+kJ
lkbva7yKc1wxPTpTAQO4iYTjN2h6tIPhStXdWGm5CrAjjo6YH5F+g+U6UKAB
6b+GqkxsQ7y1cJXFLTbgQLiVXORr2S2eq90+UTtC7dC06A4vgeA+MCpHpWz6
KEgwZhgbCcBGAlmBo1h0frLWUmLOSW5tXcZTl4REmwULd6Xtziw3esWwIwTg
5oI9lrD8xjbbNZxs18On75oTjkv84jWFo9MSlgsGdhfyZjQg1m/ixI/jhWOc
T5mcwLAqDFFDnAj1N13/nU0wcclPLX5gHajObO31QoGN3+lgd1fG6WHiivli
YJcMiNmp9R6kjSn0rnZquBeN8pmM9NtK4vGjLUZK1UCgX2Sv1/Ja09GlEYNU
w8Bq9NjRtazCE19nrnSPL1zrRAuf/vNf/CChQ7TK2/q0YpqHSFZTIcIqfV1I
ZBSLeo8BIlFwI2kvVvT0JHcUl0eHK9ixCWhqfYKuUv6xLYUQwv6u1qfoWStS
miW9t43E27coOmoXeU4A+8tfvptaOAwh4myKa5DaRYdKdDTE1tbV0cbuYfEn
vm6GZA3sMC8rsJCb+8c//MMBDaun60ed8eSMS1PqCrpewyKsxte5NFNMcTYe
gsSa2BUbduYnFvhBiSYamE3+ZoJ+62BgAmRY8Y02r5XHXzWQedtJfH2L1v3B
bIvwVxS7KHyRWC0dC5lEULJr5Vf1S9YSB0WSjA0WZ13SG71EHisOxdedLNxa
IX4x8RTc13qPG1beVz3yXsaK80iA10pZgS1+2cMS7847OiWXFCt2+ox9ZBvx
e8BhxVX3kUJN+bcN9yEsTEcrk1ymNKqXZCIdYbeTNAzdTKZYjKjcBSWi8EUA
qFAKk7NWdX4HxyQNR8ETaLuSvacKr1Y82JeSQvvbdIv/z6Zpg8msOq7y0wDJ
Qe7NK94aNO/Kr0v5gekMk5Kpa+J2FSYagrt6Pg1snLlh53W11GIRczNspork
G4cSOyd0Wh3k7Iql5LV5MVDgBIsJlbKstOxSZmUUFNXa+Tkhy4AsAV6O1X4y
GtcoYOw2egHuVq6LPyJ3KgUMczGSCY/+dpX0h8s0KjAcpbYlb8XEnKi/4hJH
esi5Sw4oMICOc4WeHhiuTo8cLiB3tZ3gAGxNMnTNtiad5eCzioNIvdmwqOBf
aNF4tYOUVh0loy0Wgli7GpuutD9+NtQAt1V7Fui6I7G2JVbkRRbl/J8nTgS8
aARsWHFJRo1qWVGw8zcKPiOILLoMU6yd+dpbb73l5vIJhpTDvcHhxSUateCy
tDfWwoLJH8b6M3uzy3+kacWIl3C0yoeKF4t5BQe7SdhrMMF8z1JibWy7Nlqb
iVDxJPqjD98/DgaigXHrKebsoW3vBGtknUzPETpmAJJHFg9XET1mflxqsSDS
sK3VjU7Z5hEWTFJ0IBpPBionPIodEoJEkaNpBFd3t8rjM3y71eepfkPOxO4a
89POBEXIDeOU5cTb2QjGSs1PDYhqP0S/EuXKT0fIAIyVhSWyTU0AU63T1zZZ
IfRNholES4LNHRvVw+PepZ+ALU7Pkk+NZTCjwWb+U22YISoWlIRkokrIFdCx
yYFFH2x4XbRUU01nrBxYs2aNhL/l+GyPDVdTp8eQlFZI3WzG6bPUs3O9ozrs
mZRMzk0cnDXVUoc5lU0wMCJEfjpMhl+sBr0C5idBhdqfBV2rFsiRr43nPqHo
z8I1c2LtCA1Bk71uSCHym1/8bO433/iG0WoCj5Q3PJRXmgXEpeNiEAkrHWHT
qS3a1V2qp6Jf7SroYi2La2GXj7McI6Hs+1qerRl2mCS0rl100RUq75tGEUAc
KEJimZdxmGRx1hMTJPBoNUFDcwVxb66KvOs73/ljc1XspC9We4nk7Dmg08yN
fYYgI6qpkbn/+cnZ8F6R4AcRGZIQ1DIUZz8UAM5WFGUtAUBxS9Lzx2WNGb/q
8eBq5IwLR3tyIF8r7Qmrd3KaDvham0ssd2eBFu4CrUmw+eDBvNxAot8bSVpm
87zNS+Tkf/GLvwyvefHFF5ucEbMwrJwSyy4/AlGydSI93QIFydlYafbdMcKR
xN5hsoiFLgAn1I9misZ7XuWSHgrOKV2c9zGajxuI5FtSws58FKV9MBzIt1hb
eUqlRKoI/CBhUg/ptSPrNibXdFtHEyI6o35NtDiLk27/zd/9dZfwNzByUC3J
6NR74Jp1FH2CIGJEPVDJzPzXuHPn/vXEicCNaVWs6x9jA/3sDBnk1mOc2zjQ
DzpeE/GlcFB95BJ0OrG6tBSHiOgLSxFEzyxFMT4BTqnxMbINj6yUPK3NQBI9
BrSHwPG0bp5d8zMTq4hCH2gj4AdT+hcpMDw10uptsRvoKQIDG8ol3UCz9VNK
teA/PvZYyMQpDFi46qj1DR4GQYPESLCx8Rk4r9Qrv9/BwFWnFZVjAViHM0hL
Dt2N1WAGQqnWMtM25uESHlBhMFuBY3mIBKwHScC6fx4Ggh3NURY4qsfIaqTv
BdnatSeJvMf0I/+3SxfCbap8tHWCla46ZnxD3niJBVdRdyhETPSmivpw/lXy
DSeyaGwqs4j4CNnJLSy4MwAxnZ/G3lvyjM2Q1taxVA8kMr0Rok0rCDIXQU5P
tJEXB/vYANvdEvPBaVGYyLCDrO0YszpMSOe/4oSMjxKF8QSRtnEan64D4lqR
XXsr1usczYvJIsa0Ydfna4mzjHF+TwVYWwmhl7arANOBzqV+v4mIhhXvMP2+
Nn8k5sKKGdHh7YqA6QqcP/P6YQBGig4w9XF0fire9ixGc2NpH/8i0dZ2pDTS
1vcR1TBLpD2hurwG5PvT/tAj641iEaCr4lqXryWRx9i9SxNwstte5K5YS5Ws
O+XyFi+ckqMu86EOFzoj0uW0FpD32vGOFbh3h0nYx+YeHpuHIp8ge9MkLaSQ
cNOo3Isa0Y+BWjD/7XG9Zi/Nwh4RLAomBcPIsx0l25mlwNd6aYSVjymNnjl4
fSv0VOiqqp0fB6UtptXl4455OSHXzLS6QzSMk01cxSLyXjPqtsmlfOYIifD2
F5tc5kSc6KPS5f+y8VWlj5CNaqIXN17sd9yimRQE8vh+4rM91ij6UXExZK/b
uaZOnR/N+7gposOxHa6zIPIw8y+08/J3FVRRRzilLB9/PKOvDPKdLmB6fpWH
lGmrxQQqCoHZCny4oySy20d8uNvnp+cHYPu2WfUhsAemvx8EWZsff5nIf1xB
9OMffzNEHFWMUEIYpYSX0/NH/JIgFpyMV3t8BBzF2MwRPfgeRvx5GLhSqcEs
76SrT3h5hzspdD/mJ93ehjOveyu7/RgsO4W8iqEcVMz5cG4fhHMnTsQy/MjW
T/ZV/8bmNxn3QRC6kXmXiLl4hAh9TPX9t+pATTpaFMsSrk/Lg+XVSfreNiLp
aUR5msZ1rG8kXByrQ87ycCVyKveoeUaxDKpU+zaEkTG9zhthen+5vxber9cc
H6AUz4wulAxIqG4qAjcZz7C3GKAgzt053WFE7+sIxTgZXfW+RtGjga9R+x7+
YqnsQ8Q4PEwEPaqCfuXTz4TQQu9fdvhslQ7KdPOYjpDNzPLKBX8arh/Mgm7h
a1y9mxP0iGHgam3vTbeLoHTEKiNw3V4H3Z4267L8kAmRKwgW7GyHCnw6K0nB
KQp7iE93L6y9KHbpmQj7otbNhVIfVJGIDReiVkQLwxAeLnS+IOIhItlM6r4z
99QnHtGCifikFfxRETt/S+055r+iDg8zNID3SLxsJFV6GJi24rRo+G1Mj8Rv
cz/5yU/Mst7u0dN40oMK1Cnqgta19MxKAlx9euev3UKaKthI6vuUVzVJyP7r
468Hqyz7FkhU07/YAXGJCNSMOBhiE6g4ZanpapQ8Zp+ArDBxfpROpMjmxbg4
0Y4Ge/3jH/947t1337U9mw6mUOXcRq5iGs5tSD0Yq8y8KEzcvGs7TKnSvVvL
MckZ5xKYnK3E7O//4ZcpIsZo2prJm3x1eVR5ZPWsHi2cLeHOLxIZD6oXL3ZX
6grkdlevXjJ36uSuuR3br5ef4XBQ5oM3xWCJWl+e35v40xg59+vUdMegOBFP
WFbl6vHjxwVwRuKU4i4mniKN6vDK1LT2f7vMCoTjCSkGyAp8r2Okg2EXodI/
RvyjYTDPorrl+ve//725n/3sz1LAhL0GDxRyFVUf4bLAmdnDN26a+9pXH5j7
/Oc+En4Wt7J+JjukPpwSI89jviRxsp1dZtlUcFUSg6rCLgmW4qgKx6mpsPXw
dledU0VXTe7WaBz5VPkkPJnISBdGqbqNGiQfzExBw4d3rCFYKU7FDfHWrSTe
2knirfvBTbKMZvB9B8T8mnSxWeB+QINF02pitSpxcditb//06blf/tsXw+6V
1a1iKMMO6iklbhIg3rXbOEVUFWLXZVngKS8V3ztS9kC2MWpO4D6dGl8+zoRu
0VMSeguz2le5AzWPWZN1eTckH0DD0NCUYjUWhgDpdLRoayfseOvTvx/cKRv3
YtGUZMHEWMtPlwu3S0LtjxWkmgQdtSaJMBidu/zIsbm/+/Xn5/7X//KN8O8q
9s1My2+j3zHVdhAgQsI2uip5J8oiV1qe75qIVQ2VuhItssMRC7qBXWnNiMeC
MSsUC8rOMtbVOXl3+ccpT2JE9iVmDEbdIRZVdP8Sw36cdOhbpTD23D9AjLzh
QLJhNoDhMnndfeqxIw4qtdzPfvL0gCCghgmoA1lZPZJLFofBYCA80qCJCteQ
taE581Cc8h3Er86Yg0nVobLKi99V0oy3i1++Polfq/dcEXhLTYW7pgculkkW
bYhx8V2lZ1vXPt4J0lq/nYRmaK9FA0ily1iS8q9Sf5BZA31N+OmCWoM33nil
9gfeDpIXP62261UUe20pfntl7t7zh0Tsb9v2hyNd5alM9tpnW57ehgvIXHin
DIvJcEGuUXijZpTlB8PByydPnsQjJ1wVlZe9K52Z6pW9fLzJXmSXPBitrmLE
K0uwsaDbJVxijc2wLUXa71I0cYIEb9uK4E1s9cUmy1/FiRkSfSe9H+rxz+su
F2svfpz4piLvv/mbn4m1H9RdLi7dggVjxqBED2zKPFkRkzxL22F98lqoTizL
5ZxfoE6xY1FjnmOMHirx5ptv2qESA5EkTYZd/sRkjI15dkmViKsxPEcOhW06
aq+/IUawBggWaj7QDMP5AdO1WF03bC7EbAVe3omCYJMAbhvx8i7O08ZjPf05
lfrP3/2hRd0oeZO62Hlx+1T/xCdeVIrAdksXBGBzV5lUcT08CwgE4qD3cUbH
vPfcc89hhbWdIpF4Gfmzx+HAVccsbcaBfJWdJbg7A7iM61myzel7bTAtky06
P8H0/TURw5pFi0+S2G4rie3KAaTMwkuyxFCA1fJnVc+XcfnDDx2v1w9woMGc
ETKQXkxyiCifRCyUhzL2YEE7LViNnNOWWj/kONeY9urhb4pTIcTHT8pd9b4e
F+AqZpZ3E/+ODNQmPjZ4JVH8Y+4hquiVYI4FCq6v2bnX9Q4/ScI8OzDKGPYf
//ibjk5rMvEyjY05d3cRhlxN/Nx/+ddvBenXv67/GRx9cfKAqQGCIm3Y8d8D
AFpW6oJ2lmHVwhM3Vj2SLrTxr4nA2+sA4IpoohTH5M4YAESScsdbPRKDVmq2
AyPYNIzJFsXR+2ImjHM3qWNH+Rbi2D2UTLfVuUhFhDPsBdVzu7oBf/8Pvwzy
rtTYWEAvAiYyr3182/Ti6rAjIhf8HjJnEz9YJhXYwETaxlwbLZwqSJ7E6HmZ
uyqa1d1krrX7jMslOn/IWCmTu/UC2qoLF3+KhG+bC3dOwjfLimAhsu1wG2Dk
3blTxLDLX43ao/c+FmQsHp78lX8XnA47OGPJ7yHr1Xnfpu3CZlxB0Whib6P4
+vE7ZGSnmgb/q7X9ZS3fMB3fyphcF+LrmZQljaMNymkOgLhzt6dG780FC4/Z
S6tXkcrENvONSDgB5lvS7PKNtY8usq5tNhd0wdiszwufBLTi9xC0rlFTGJeu
qaDdePEo6FEXslcdSqW8tF2pzIaMOxFlwJMyD+78cDjWo6iJ8SF9PLl4GEfH
pH2hMnfE/O1QFGHh2kYyvBeLFDQRSoseLhcoEeftuEqfWPD6qkh/1En/K1cu
Ik9jNfxOPNGx63uytq1f8JrwAALnEWrGzs0Fj3mxnkY4dgCBK4vysiajg8bk
403Wdr8o6zX5DltJ25ihHXH5mCr6lWC5L9gOf+jAkeo0Cdg2koDN0mV4/gNW
NYpGl58eJf7aMZB2Bfb7B9+7XGt7L+2f//ytuXs+cthRM5uIgNbOT9pAv5WR
m7s2kq8lllZXNVGfFe11cwydilxza24i0JYsctESTSLXMKWNmw0A1CoLl5IZ
8NCAHlpfKXEHCdOmIUyzNupHWyw5ljUy/+1ou00fDeIfSeIX0yYKrYobnWVL
p7PkZQWaJC/vkZWayh+R3C5WCAuH6KXdHI/v7dfa5s6N8JJ38322Z8nLjSPb
gAnZIuGPtKwL3WfyrigTbw4hGqg6H+5O6IwW6b+Qxrn7zuhSd6OFt0FNaOGR
ujsMFr6QfDWhsfm/+9U70nEkIpfQrJheACHVUClunQ1i0pa3yFOPNX6Cv2YH
uyMlGw1lv841Vwml0g6u/YDQN7u8jJuS7sv8DkU3xF2LMOrJsihWnVevVsx1
L95ZhGVS3r6BhGWX52nKsTb9UIspn/Ri/kCUdZXGmziU7piXmIfIJ7A4TGXm
ZmBrnqzPpH1XF7UHxFz5oTt7vMAx94oCV/vDOFh3w3rCZ5lXAco9YcOGDFU6
VEWo9rtIXfv6IjaTOqnH+1hz61F4lPhuN4DABUCVWnMUuIRk/+a/+bEI/Wp9
r+pmOk99jxe47LAs8FErQDCBu7ey8UoDfoEhbzniKkqrdpbFS5qcy0Gz7KYi
UkihBDCjWt2mPZblmsjBsWZsz1YQm50hTJtNzsfW5Mc7Wm+TtXUQSvX5vnbr
PaXiFrZFmYMDnmhOZhNONbF9AvvbQlrLT8bndYYXCdRYCt6vB80VR6lg4w9+
ms0NzYLtSZm3HFXo4m7Nz7m8ib7X1dYoP+P6Dc9AAGZk2jpwy4w9f5xsTtZq
wNyy3SpYYpwlOzqliVKjVrBYaU9+tKQ/D/VKV14P0pVVNCZ6Orx62AytMcth
USKnQnvN5DWsFMqL1lXG3OhF21oNURRpIj3qKh9uys+Kk0YmCTJsXIKtrlQ/
nCUB11oScM0WNlm2Y5tNxrLynS02eaGKVvPfTrQwyy6527FUadhEipu3apCv
dmDaGCcjXe4Olzu1lbnKJ5XvybyrU+rjSK98MeUtN5pS3sxpYlSoHipZ5juK
PE5QyypfF1TdTbqF15Bu4SdgV3YxwVhcvp3I10zwQo2oJBmilMmcsnwwY8ct
OusPGsirINeJvsZiqOJ8+qAXzkVxN9ElZXFTosa8uF11y81e3G1Jb3MIGBvq
Hr4YIxCgoQUbTlNPx2spjJJ57edIr/Dqwt2SMOrjJIvdZoIxH7ql3QQvVK60
KGn5AIJLWZJinn4QhordCWSkV+zyMQ1i1zlO2N4jnxLVcteesWCDvdCd3xVd
4kaByzdYbk1+zzJaOlLCtZOoR+70tcp4tgI36xyJoUzGSIZ/vIM1/qff/qoq
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
UcgfydeS3ivOc2gkauFItL6FcZquqi8FWIWovxghgZaAtcK6UpT7nEBd6dLJ
jJO0K4sxEKUqL7E8W0F0d5yo7dh5P5qiO5FmaZ6PkXBuUUuD6CfSElkHOnIU
1sSBC3MPWcCj+UnL/gCXmikOLGutUYMDLxNI1Cy4tIwK1JlxK+YhI+AcF/sx
J1BXW1SoZzwRC9WzWpaRpJ71T9iSyyenbiNaOMpxeG7T0hWlmY0nfhVh11T7
FDUdfehy7czOjhJhnvc7LDzl0bRXTMVM9LR5983cwgC/5LyfyTeQHPUF5AaK
MZfohLmiDq1W/Zw+PyZWVHrOO4p875h9rP01/RqOZai31m1Eh25ViUknmhT+
VNk+VidISDTRbiA/5bHlogs0kGbWsfROGYykc+VPrFDw5Xhs0kks+0wJGlbN
hdv6LrIFVDZJLvJHZcjmiblO2AecvFwRzkmPYUh4jRvzaSo03LH8ldNgv/rU
J0PHPVOXm8N/h5KzI4auFtgpEsCMgqErx3Q9nxdSnrrR0LWfeXaYbD6W7Iot
r+kACHs9O9OJ9dKzmsApj4Swi63kCyseVDyfD/csv1Gh2N4MXxCFMonEewg3
ZHVeevKpsPiyC2TnSImt6LvSE5WTwTeqcHBH1THE6SLMkLKF4V7zNSc+kizh
S3kJy+nLzpANEuHAgWXJtTvULCZndHblNbWRyphrIL3obncAqZ9Ciqn8KGkL
sJKDB0FMRWEKoxej1luIftpslR0NEYMwQaF4XopNREAiRGnErYV3E9GG02Rj
/fLfvngHOes2nm81ycZEXVX62LRPist0w/W1ZwP5dUmmmqVzPH5x/mdjXWqo
Twubtb95u5XsqaX5M5PDMkm+x4asIPd30QmV5BBYceqQEQfm/w+BsESmtTas
JVCLrYpnZ7/53EtBW7KM4DoVqnAC5pjUJu6MHjdoZQBq0WJ72pSb/1DFFEBZ
A4q0a2H4oE1gBA0filST7s5BuMF/DI6zcTt8H5EIHNnRt7ropryfkoJe6sUR
fpog91O4m6KNlA2tXlXgosMykwFVVJcOhY+V0QgiknM7945qGCBSFokylVsW
gYjKXasStvBBtm0tzrOqXv/8z78zJ754BeRdlM0YRjBsNzydb74wkcNmIt0u
1fOlnJXSHs6+DN9+fw3oj24FQTeSHal+vdMa4+R+WB7/ISdTp6AYvYen8chH
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"31431307-c6a3-4211-b03d-8e6fc299d9eb"]
}, Open  ]],

Cell["\<\
Our aim is to see why these statements are true! This works because the \
\>", "Text",
 CellChangeTimes->{{3.905954940813627*^9, 3.9059549620469427`*^9}, {
  3.9059550060571995`*^9, 
  3.9059550373167334`*^9}},ExpressionUUID->"a3a742c2-7934-4dff-ae1f-\
36d650923399"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"LightGreen", ",", 
        RowBox[{"Parallelogram", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a1", ",", "a2"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", 
        RowBox[{"Parallelogram", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a1", ",", 
            RowBox[{"a2", "+", 
             RowBox[{"h", " ", "a1"}]}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"h", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9059550697357893`*^9, 
  3.905955303801333*^9}},ExpressionUUID->"d4e67b0f-526c-4dda-95fb-\
b5eeb82b4487"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.16939029693603525`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`h$$], -1, 1}}, Typeset`size$$ = {
    360., {200., 204.82944112655258`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`h$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{LightGreen, 
          Parallelogram[{0, 0}, {$CellContext`a1, $CellContext`a2}]}, {Purple, 
          
          Parallelogram[{0, 
           0}, {$CellContext`a1, $CellContext`a2 + $CellContext`h$$ \
$CellContext`a1}]}}], 
      "Specifications" :> {{$CellContext`h$$, -1, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{408., {238.134033203125, 243.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.905955218718696*^9, {3.905955261555415*^9, 3.905955280810704*^9}},
 CellLabel->
  "Out[325]=",ExpressionUUID->"c1dd4741-3df4-4dfe-aed5-a53bf7a83378"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Row Op Code", "Section",
 CellChangeTimes->{{3.9028328951014414`*^9, 
  3.9028328990687666`*^9}},ExpressionUUID->"5c26734a-889b-46d3-a44c-\
43d529158be1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"RowScale", ",", "RowSwitch", ",", "RowAdd"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowScale", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", " ", "\[Alpha]_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"ANew", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "i", ",",
         "\[Alpha]", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowSwitch", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "i", ",", 
        "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "j", ",", 
        "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", "All"}], 
       "\[RightDoubleBracket]"}], "=", 
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", "i"}], "}"}], ",", "All"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowAdd", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "\[Alpha]_", ",", "p_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))\>\"", ",", "i", ",", "i", ",", "\[Alpha]", ",", " ", "p"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{
       RowBox[{"ANew", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "+", " ", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"ANew", "\[LeftDoubleBracket]", 
         RowBox[{"p", ",", "All"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "RowAdd", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowAdd", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i\[Alpha]s_", ",", "p_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s", ",", "i", ",", "\[Alpha]"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "\[Alpha]"}], "}"}], "=", 
         RowBox[{
         "i\[Alpha]s", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))\>\"", ",", "i", ",", "i", ",", "\[Alpha]", ",", " ", "p"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ANew", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{
          RowBox[{"ANew", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "+", " ", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"ANew", "\[LeftDoubleBracket]", 
            RowBox[{"p", ",", "All"}], "\[RightDoubleBracket]"}]}]}]}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "i\[Alpha]s", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ANew", "=", 
      RowBox[{"Simplify", "[", "ANew", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9025222040548058`*^9, 3.902522688811363*^9}, {
   3.902522809234256*^9, 3.902522862117859*^9}, 3.902522893587943*^9, {
   3.90252293637116*^9, 3.9025229409044313`*^9}, {3.9025229746671543`*^9, 
   3.902522990191957*^9}, {3.902523031737338*^9, 3.902523078896566*^9}, {
   3.902523113357407*^9, 3.9025231207529497`*^9}, {3.9025232328286953`*^9, 
   3.902523261689928*^9}, {3.9025233017719088`*^9, 3.902523321902813*^9}, {
   3.9025253198585176`*^9, 3.902525343090293*^9}, {3.902765773336645*^9, 
   3.90276578680836*^9}, {3.902765935450306*^9, 3.9027660084078593`*^9}, {
   3.9027660385751886`*^9, 3.902766135385269*^9}, {3.9027661852743845`*^9, 
   3.90276618751116*^9}, {3.9027668190669928`*^9, 3.9027668208664913`*^9}, {
   3.902766890078801*^9, 3.902766895037586*^9}, {3.9027669983831015`*^9, 
   3.9027669986731668`*^9}, 3.9028299789115953`*^9, {3.9028302036985703`*^9, 
   3.902830244413587*^9}, {3.902830293858634*^9, 3.9028306483338337`*^9}, {
   3.9028306830992174`*^9, 3.9028308887606993`*^9}, {3.902830955253166*^9, 
   3.902830981572176*^9}, {3.9028312934755526`*^9, 3.9028312942718534`*^9}, {
   3.902831486049415*^9, 3.90283156141187*^9}, {3.9028316365910025`*^9, 
   3.9028316607707396`*^9}, {3.902831703711198*^9, 3.9028317767985153`*^9}, {
   3.902831815669244*^9, 3.9028319009527917`*^9}, {3.9028319732226763`*^9, 
   3.9028319799112015`*^9}, {3.9058426318115125`*^9, 3.905842633514278*^9}, {
   3.9058429984165397`*^9, 3.905843003755211*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3608da8d-2ee3-4e7d-a9a8-137ab8c6e9cf"]
}, Closed]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1141, 856},
WindowMargins->{{1841.5, Automatic}, {221, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"abfa1bfc-a7d4-4f26-8179-6deb350c3508"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 204, 4, 98, "Title",ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-fddd9660e667"],
Cell[CellGroupData[{
Cell[809, 30, 295, 5, 67, "Section",ExpressionUUID->"124a94b1-5c4b-4bd3-9429-d3d515e88560"],
Cell[CellGroupData[{
Cell[1129, 39, 510, 8, 54, "Subsection",ExpressionUUID->"df3861a8-67e3-4d73-9619-5c53beb7e949"],
Cell[1642, 49, 1216, 38, 143, "Text",ExpressionUUID->"e06f1caf-ad3a-468f-810b-4a177e5d1e8c"],
Cell[CellGroupData[{
Cell[2883, 91, 464, 15, 44, "Input",ExpressionUUID->"958277eb-aa35-4b58-a88d-27fe64e02920"],
Cell[3350, 108, 859, 27, 59, "Output",ExpressionUUID->"3ba6d529-56b1-4816-8adf-0ed7fc6cfddc"]
}, Open  ]],
Cell[4224, 138, 856, 24, 73, "Text",ExpressionUUID->"ac5b9127-38ea-4a4b-af8b-0921091690b3"],
Cell[CellGroupData[{
Cell[5105, 166, 1841, 55, 148, "Input",ExpressionUUID->"0a8b6b6b-b223-4576-b9a9-8c3f3d929a3e"],
Cell[6949, 223, 1642, 45, 80, "Output",ExpressionUUID->"fc0dba58-e05f-4d16-a0aa-1430e5275577"],
Cell[CellGroupData[{
Cell[8616, 272, 4114, 108, 56, "Print",ExpressionUUID->"2d2cab1a-8b6a-4781-b897-34ac799d5fab"],
Cell[12733, 382, 4484, 117, 56, "Print",ExpressionUUID->"a39be0ad-6b59-452a-86a3-c9072837281d"],
Cell[17220, 501, 5921, 146, 56, "Print",ExpressionUUID->"3207e7dc-11b6-4edd-bf99-ca51be820040"]
}, Open  ]]
}, Open  ]],
Cell[23168, 651, 824, 24, 58, "Text",ExpressionUUID->"46aacde4-1076-41d4-87e3-8926e43a7659"],
Cell[CellGroupData[{
Cell[24017, 679, 1771, 45, 87, "Input",ExpressionUUID->"be23a372-819d-4589-b392-9c2a9beb67ca"],
Cell[CellGroupData[{
Cell[25813, 728, 6737, 173, 113, "Print",ExpressionUUID->"864489e4-769e-454d-9937-f4f084570462"],
Cell[32553, 903, 6977, 177, 56, "Print",ExpressionUUID->"596e4819-dc42-402f-88ba-5448bff44d18"]
}, Open  ]],
Cell[39545, 1083, 1637, 56, 33, "Output",ExpressionUUID->"78ee2011-c904-472a-9316-5ea79090f8c0"]
}, Open  ]],
Cell[41197, 1142, 787, 21, 81, "Text",ExpressionUUID->"017e868d-ebc0-4702-a115-0decfd25cf22"],
Cell[41987, 1165, 1729, 58, 34, "Text",ExpressionUUID->"193d6fa3-f718-4c67-8a80-a00eb4a36b82"],
Cell[43719, 1225, 3497, 113, 125, "Text",ExpressionUUID->"0881227d-bb5c-489d-8c1b-83c5c531b977"],
Cell[47219, 1340, 2974, 94, 146, "Text",ExpressionUUID->"25cfa395-678a-4069-bd05-38c88de4a8aa"],
Cell[50196, 1436, 568, 15, 35, "Text",ExpressionUUID->"806d2203-df55-46d6-9703-180c873079d8"],
Cell[50767, 1453, 1321, 35, 116, "Input",ExpressionUUID->"cc69fc0f-b9e5-420f-b40f-4c63cfcbc460"],
Cell[52091, 1490, 378, 7, 58, "Text",ExpressionUUID->"7846d1c2-322c-4448-93d7-f929e65ce6c2"],
Cell[52472, 1499, 1296, 37, 74, "Text",ExpressionUUID->"d6db6598-eb3a-459f-a85a-800baecc50be"],
Cell[53771, 1538, 3323, 96, 219, "Text",ExpressionUUID->"e97ebb1a-9b03-40d7-8600-20fa0023d3ca"],
Cell[57097, 1636, 449, 12, 35, "Text",ExpressionUUID->"7c71882e-5a03-438c-bb7d-a1c27e511fb9"],
Cell[CellGroupData[{
Cell[57571, 1652, 192, 3, 28, "Input",ExpressionUUID->"5ed49eeb-e2b3-419d-8d2b-ef88a0958179"],
Cell[57766, 1657, 206, 2, 32, "Output",ExpressionUUID->"be252919-c75e-4c0f-945b-ea1a7a5daa37"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58021, 1665, 215, 4, 38, "Subsection",ExpressionUUID->"cf66bce1-a297-479e-94bb-ce26c6195628"],
Cell[58239, 1671, 217, 5, 35, "Text",ExpressionUUID->"5df654ad-a06a-4ba3-8d32-e2b908fe3fee"],
Cell[58459, 1678, 1760, 52, 120, "Text",ExpressionUUID->"59e0a85b-ac45-44c2-9e7f-9cf615aff611"],
Cell[CellGroupData[{
Cell[60244, 1734, 1220, 38, 85, "Input",ExpressionUUID->"551ab84e-e2ef-4dce-9fcc-549ebbd3d5f2"],
Cell[61467, 1774, 843, 26, 76, "Output",ExpressionUUID->"f77c4ac4-6939-40c6-8b78-38166b036eaf"],
Cell[CellGroupData[{
Cell[62335, 1804, 3067, 79, 52, "Print",ExpressionUUID->"6322d921-92a2-4fac-9c15-d59e351a09fe"],
Cell[65405, 1885, 2639, 71, 52, "Print",ExpressionUUID->"67af6c75-3bc0-4348-a116-dd72af042980"]
}, Open  ]]
}, Open  ]],
Cell[68071, 1960, 1790, 51, 104, "Text",ExpressionUUID->"3f3b2455-8c88-4d64-8600-0114e59ee954"],
Cell[69864, 2013, 607, 19, 35, "Text",ExpressionUUID->"5d5addaf-8842-4a89-b7e9-9f759a7d6b34"],
Cell[70474, 2034, 965, 29, 45, "Subitem",ExpressionUUID->"d3fe47e9-32d5-41d3-80f6-483a6ebd55f4"],
Cell[71442, 2065, 966, 29, 45, "Subitem",ExpressionUUID->"cb4b8c28-76ca-40c7-bd9b-61b0f81599a5"],
Cell[72411, 2096, 970, 29, 45, "Subitem",ExpressionUUID->"4a29b33d-2a90-403b-b0f1-53c78c20e2d4"],
Cell[73384, 2127, 160, 3, 26, "Subitem",ExpressionUUID->"071bbd0a-b28e-4025-ad41-fea14fdcb9d9"],
Cell[73547, 2132, 961, 31, 35, "Item",ExpressionUUID->"54379b7d-ed77-4fe3-880b-2a48d4c58100"],
Cell[74511, 2165, 440, 12, 35, "Text",ExpressionUUID->"07bdb8f5-19c4-4c95-9171-4791f88d2214"],
Cell[CellGroupData[{
Cell[74976, 2181, 597, 17, 65, "Input",ExpressionUUID->"f632f4a0-9499-4a82-9e7a-e7a53d7103f9"],
Cell[75576, 2200, 271, 5, 32, "Output",ExpressionUUID->"2f789dfc-e906-4387-8d60-16fad4107b9b"]
}, Open  ]],
Cell[75862, 2208, 746, 21, 74, "Text",ExpressionUUID->"482e816f-cdaf-48bc-bb43-881a75a60e11"],
Cell[76611, 2231, 661, 17, 51, "Text",ExpressionUUID->"a80d4e61-d8d1-465a-89b5-190d39825d2d"],
Cell[77275, 2250, 227, 5, 35, "Text",ExpressionUUID->"24506633-e8f4-499f-9107-0e9505a74888"],
Cell[CellGroupData[{
Cell[77527, 2259, 1241, 38, 124, "Input",ExpressionUUID->"81b44001-b67d-436e-bfd3-6a86c15c7790"],
Cell[78771, 2299, 1775, 56, 122, "Output",ExpressionUUID->"885f63cd-e1c7-4e58-9921-1a225bc2eed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80583, 2360, 1307, 38, 105, "Input",ExpressionUUID->"f3dc9506-f5d2-49fc-90e0-71445b9f2da4"],
Cell[81893, 2400, 423, 9, 32, "Output",ExpressionUUID->"d2bf1a79-a5b6-4023-812a-669b16cbbd2f"]
}, Open  ]],
Cell[82331, 2412, 399, 8, 81, "Text",ExpressionUUID->"c2b1b3e7-a44e-4ff3-ada8-f9707ef8439a"]
}, Closed]],
Cell[CellGroupData[{
Cell[82767, 2425, 296, 4, 38, "Subsection",ExpressionUUID->"5f4ffb67-8c96-492a-baef-8a8cb86cdce4"],
Cell[CellGroupData[{
Cell[83088, 2433, 183, 3, 45, "Subsubsection",ExpressionUUID->"7076002c-50f5-442b-86a8-7fb36c6ddefc"],
Cell[83274, 2438, 513, 14, 35, "Text",ExpressionUUID->"e242418a-f0a1-46cc-ac8a-d9524a9ae40d"],
Cell[83790, 2454, 1661, 50, 120, "Text",ExpressionUUID->"12e7f049-8e52-43fa-ade7-a7215a60c971"],
Cell[85454, 2506, 2036, 63, 104, "Text",ExpressionUUID->"5dd00bc3-3dd2-4196-be65-cbb49b642b64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87527, 2574, 161, 3, 45, "Subsubsection",ExpressionUUID->"4adf3d9d-0bd5-4013-b608-e688b0479734"],
Cell[87691, 2579, 3737, 117, 248, "Text",ExpressionUUID->"c5b49822-dc40-425b-b911-04cf09745235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91465, 2701, 164, 3, 45, "Subsubsection",ExpressionUUID->"dfba7e6f-c3b8-4f20-b010-1530dc62376a"],
Cell[91632, 2706, 945, 28, 51, "Text",ExpressionUUID->"b47a1e4e-0eda-4e30-925c-606c2237b160"],
Cell[CellGroupData[{
Cell[92602, 2738, 190, 3, 28, "Input",ExpressionUUID->"05bd2373-042a-41ae-a21d-95a27ee7661a"],
Cell[92795, 2743, 165, 3, 32, "Output",ExpressionUUID->"7d015261-3525-4269-96f9-7cce04321eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92997, 2751, 1988, 56, 162, "Input",ExpressionUUID->"278690ee-58ec-42cd-a76e-12c0391ed77a"],
Cell[94988, 2809, 849, 19, 327, "Output",ExpressionUUID->"049e557b-a1a3-4391-a846-b8540b73ed2e"]
}, Open  ]],
Cell[95852, 2831, 1156, 35, 51, "Text",ExpressionUUID->"96fc4e24-ff00-4c43-9255-2cb3a8ee5027"],
Cell[CellGroupData[{
Cell[97033, 2870, 2523, 69, 181, "Input",ExpressionUUID->"27941885-ca28-47ff-b95b-4adfbc80a715"],
Cell[99559, 2941, 116290, 1915, 457, 1583, 34, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"31431307-c6a3-4211-b03d-8e6fc299d9eb"]
}, Open  ]],
Cell[215864, 4859, 277, 6, 35, "Text",ExpressionUUID->"a3a742c2-7934-4dff-ae1f-36d650923399"],
Cell[CellGroupData[{
Cell[216166, 4869, 1716, 50, 162, "Input",ExpressionUUID->"d4e67b0f-526c-4dda-95fb-b5eeb82b4487"],
Cell[217885, 4921, 2198, 45, 501, "Output",ExpressionUUID->"c1dd4741-3df4-4dfe-aed5-a53bf7a83378"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220156, 4974, 160, 3, 67, "Section",ExpressionUUID->"5c26734a-889b-46d3-a44c-43d529158be1"],
Cell[220319, 4979, 9436, 229, 616, "Input",ExpressionUUID->"3608da8d-2ee3-4e7d-a9a8-137ab8c6e9cf",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}
]
*)

