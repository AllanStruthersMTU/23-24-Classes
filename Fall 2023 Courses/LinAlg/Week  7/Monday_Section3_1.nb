(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    256478,       5011]
NotebookOptionsPosition[    251744,       4925]
NotebookOutlinePosition[    252255,       4944]
CellTagsIndexPosition[    252212,       4941]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MA2330", "Title",
 CellChangeTimes->{{3.9022119421591744`*^9, 3.9022119446720896`*^9}, {
  3.902212079422366*^9, 
  3.9022120841135693`*^9}},ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-\
fddd9660e667"],

Cell[CellGroupData[{

Cell["1.10 Migration Problems", "Section",
 CellChangeTimes->{{3.9058436045816803`*^9, 
  3.9058436159292507`*^9}},ExpressionUUID->"99389cae-f115-492e-9dbf-\
1a26fe254d70"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pQqVMHTROfw3tuSikPFgJSauOPr/9ginz1RiuB/2rJ2H7s6N4Tp0I4Q/Rmb7
IURJ0nH/4iFMI3Vuk/o1Mcc94odpOwR6zEXV8uXRf8He/7dXOP0HpcgKgVtZ
vRz7f7HOwMwBRx5HaV2b+PICGpW0QpdJ2yCk+/UUfHiuHQwL+zr458Zb7QdT
MlzeMAZ6Bo7YcDmYyY/y9BBM7FAZDi3GIihe8O0+klOBkkRcxdrZg2HFxL8V
9rwW/7+99JmikPD0CjatW4wG9iZMWm71VxB+iJ4DSgSPQWVhSPzcYsC6/wQj
UNJULGpbGiaVuiBM/KPU2pzUUqbjwq41GNbIlslrdTovA/+HyGw/gpSIunUU
G1fNRFUztl4efejdD8K2FG6u7wojfZImBi7+QfzM6WdS4MFZcKwxBDcePMbj
xxrnHxQGSc5xafEHjKhQDHoOvRHC1xxXCuPQt24ZmFbqjEiZ5rjgxUaUMNJH
uYm3IcnxmIRH+5k82njyzh+DN75HKQU4u80TGf8mAOVJOLPrOrRwQhiCDqY/
OttmS4yTXe2/X7ZVpOH4hosQ5OJXhSQTzwNfIV3049hR/BulhnihrKUhiScD
dNr+7gfpX/+BJY3C9Yt+X5w1kj17o9i3YlslH+5bLyLzu8vUX0s8bGr4PbOt
DIEXjyBLpu0zhSQLz5/4I5En/T/5i9N/VpQAU7o2x6r7qQXmF/8DM2FA6p8W
iz21OYGSw2dxJ5LviqHJ0icklbN9MXM7VoGecXkciZJpv1L4AQMdSD41rYz9
r4Vf+IP+Gwq/swOl6s1D4r/An7u7pqKGyzZtthK9QZfiPwvbSnGxl8N3y7ZP
TyyCfeM1/3H7HCWurPwFVWqy8WRWqjNep/03mP7/IUohwqm5v6Dv7PNfvA2R
cqU/jL8R24be3ArHun8g+XvL1F9NQuxuof+dsi2F0Ktr0bzlYCRLvi+fcfqv
igIvYC0ci5fDoMkL4OkTiOj45E/MIaIwv1896OlbYJXXqzxnBU+XwpweyzZp
hzc8JXgffVHdoRgMy7sgOU8hKsW1Qez4VavJnpD9i+xAKeUQi8SQFTDviblO
LIZCmc91lBJS1XMopQLiPPPeKMgkYkjlXxtG2PeIpXIdZRiFtLCraF+ShHWV
WZ/HtiQsEgIOoLa1Hip0KZhtlQo2jJXUp8OOnjOQHbRyKYkPHWGkkEshFIog
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
znq0TyYpR8Z28ETc8qjOR+F+5+f06lHQ19KEVZ9RmDl9POx62GD58UdIK6yy
BuV4uGMaDNXpPpeS1cK4uRvgk5yLe3uXwdRAja6jlBr6TtyAGOKz+RxbBO12
HdCxex8sWrcDB7cT/8OyN/bc8hVY6zw43ZZqm/FPrk07N4LY4MOLnWGgQtdJ
q50FJi/5FXm1VQa7EveOb8JAGyNqTZSSNwlJGFkOwDmvzCbJAYdZis9Pf4ap
thJ/3OS0O2LL1fcoqvE92bwINwwzVuSVJYcuI9bCNzoVT9dbU7Ito2WCM+6+
2DLbGW1b0HNASrEF+k9ehIvu35pQI1B7GY8tGYOOWrS+kZBVhN3oWTh531Pw
tuIUnFo5kj+3KF/EwA4nH/vzz/1N+PIII6wMqXinmLgUjPu64PRdb5TG3MdE
RzMeNyGch+jbXY+iKT7E9YMGddCg+KKiigaW//qMd/Y3C2FvXWFnICMw/wYv
PISw9FKBfi/NisThuX2gRDiLhKQM1NTVYTliBXyvjYScSkuMX7Yf7wJCkF/7
w3cNgJuXtH+aNX/u6Jg44dr7MEQ+3MjXfy6br/H137Hp1rT+k1OG7ZQ9iM9v
ov4jyInzx5ZJdmih0xp9h4zHT9NGwtqmP/bd8kIR/4wQBo4sHAo9BdrWKGub
YOG6/YjNScXJZRNhoET3l7iMDsYsOc7PEUsNfIGJPXQorl/Vn+YjSR9FZja8
X69uzyDpxS8YN9CG0iGUr9eyOxat3Y0QnsPKqSyC993DRM5l0bZLL0yZ9RMG
9bbC4Klr8Ck+v9a6LBu50Z6Y0cewepxlVDFg8QlEZ1fn7jCLk3F4qjmVGyMm
Lg41w364+CoIhcE/Q1+GtFdKCS47biOXEE3u+ZX7J9NnoUkrKKHPzN1EL2bi
9LYl6NlOk+4DaWWYOYzB+Tch/DLyk79i76w+0NI2QO+BLpg9bQxsrB2w7cpb
5PFtQxnOrhyNlrz8f4UW7fHTip0IzczAhbXT0V5dgW6DtCaGzT34XXF8Ef4/
goPi1BC4PX2IW3cfwt3rK/IaqY9Kc5Lw5vkjPHr2ChHpJX9qc5LCA/D04X28
fBdAymievfCVJbn48sETH76E0zpP2D2FGfji54vQ5Op1TXZpBj76+PLz1P8M
7NJ8VBCFxCovRMQ3f/h9CUNxnQ/GcnlcNmKDn8KxoyWCMpqua7l+aHLEV/gQ
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
sf/UVTh6BDL7qkuAUL93eOPqgheP7uLCmVM4ee4injt+AEfu7+Wmx8BF0RaT
Mesj4fNSUQaRz1FBf+3x1vuLwrknUiSF++HZrVPYsmEDdh04hoc2zqQPFrXv
TQKvu7vgE5NvnwOZ493evgVuCQV1mUNsl6OC3to5uyM8Lh0iTjhcHPP6l52D
EwLjv53HgpsRB693zsp9wP0jsoTEznq9USrnO08/ost8hHm7K9kel/cB4JVi
XGbBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixY
sGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixY
sGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixY
sGDBggULFixYsGDBgsU/gQz8lC94cfssVs6dggHLbkPwq0X6nSCKw+ZxPdGy
82A4hmT+sNdKhRlwe3kP2y3noG/XMfDmSH/Um5EVH4wXd85j1fzpMB+8BlHC
H/TqnwxxVhRuH92MKWOGY+CgIZg4axGOXXsC/0A/7JgxF++Txb9axD8bMgFC
PB1was96jLcYgmN+vF8t0b8CCS8NV47twdatW3P/9p+8A45QVuyzUkEGrp/Y
p/Ts3hPXkM7/Uf21dJBwk4nduI/da+ahX/8F+Mz/JWIUCjEvAx9ePcSedUsx
csxUBKf8RsL9QRAmf8LpHaswbqQFBg0ehllLN+C5Vxwkhd0sE+PL2/tYvXA2
Zs6cifHjJmPjwWuIyvm2forSv+DQjm1KOr11y2Yy/o+HfUD6TysXCxb/KiQc
XN26Al2bV4eKigrK9D8M1iLlQZb+Ci101UndaODQs5Af9FYJAm9uxjjz5lAn
da6i0hhv0n7MWCnJisTOdasxrEtTuj1VKo9C6B8wWZFwEzCnS11o6VXFhNWH
YW33CnfP7UCXFrWgpUrVkSau+HN/tZh/NAThL7Bk0mAYqKuS+tTH2nc5v1qk
fw3inCQ8OvIX9Omyq0DdsDqe+CUX+1yCz13U0GeeUVFRw/gNVxCXJfoXJC4E
Mj4cj2/EyG6mjDz6PeDzG3UJf6fbmDW6E3TVVaBZxRQ+8b+RcH8IkgNs0KKM
HvTLlEPF8mWhraEm1z0tbL3nBeXZmAT2J+ZDs0xtnHX6Ql8RpnhjdFtjlKs7
EO+jswr9hsfN9VCnbaryn1aD5Uj8RarNgsWPQHrgO7gmKfvAfM8v+e9zW2EU
vD9GlO4ZmRD+Ls9x/bET0niFzpy/G6KYR6j5g7ntV2S8O/EHcVsJPPZ0ozns
iANvIFYw4AJOHE4t6gMNUpb9dvG/TsQ/ENKcOFx3iIGSZgmiMKyCzk/jtqLY
13j7+cetb/xIyHgRGFheJ5enmi35G0UP5QLcnN1QPv8kf6q14Z706wd/bsB1
6P4G3FYm5eOdX5DSNYkgGt2M1Vlu+x2Q8YIxtVU9zDlwD35BoQgP/YwPr+9j
ZKuKtP7pGHeHR2aeccx6v4fMu9TRfrU9BAqdPMXrMioS/a7SfQ3i86urNA3L
ejTGihOXcfXq1by/azfhGJqN4lcyWLD4TSHJxIYx/XAsWHmhOvDqyv80t5WJ
MvFgRUesOev6q0XJhSTRGnV/Erfl+p2H6p/CbUWxmG1M1YM2NroW5EWClAAM
qGeI1Vf9f4FwfyqkeHNpJVpscFdeyxTGYUKVn8NtJbwkbB3YCNttftM5CCn7
JGNdVC5nxHBVnaZ48uXb/Isb+hCNKhhjZmtj+n5V1Wbwyfg1sQiK4If8DcNf
zW3JnN/3xjzM2HdP6bJEmADzmhosty01ZPC/OAtdph8FV6zMMFM+PUctfU16
7XDUzWiaf8qESbBsWYZcq4QjgfkMPOGvW9pok9/Usex2kAJflSHWeh3MzOeB
J2VZLIv/EGR8vFzdEWqqlf7vuK3n3+votbLlp1lu+9uBH4JeWoxvrMvC+xAV
MLsyRF2zwIIDdr9Cuj8QMqS5H0dNdVXUX+v2L3FbKV4dHA0dVRVs/c257ZKl
86Ev98UOWnwT3+p5t1cOh0mnRTg3tgXLbfMh4vVZaKipYvjOu0rXWW77nZDy
sWH8VFgnFLKnQJKOra3L0zrYcuVbUHfwo5xQSV8DKppNYM/J/4AMLrtb0ve3
G7Exdx1MJkzD7PZ1Ub/TRJx78h7ZYpbfsvjzIePH48TSIdCi4810YT7bEmvW
rMGlp960bVfktlxBOl5c2I3Zk8dj7KSZ2HjsAZIL2XeRnfgZZ3atxrSJYzFy
zEQs3XQY3lEFOlpBWUSZeG97B2sXzsab4Iz/sXcVYFE135vullBCUQwUO7G7
E8XEDlRU7MIu7PazO7BRERQExUQJARGku7t7d9//7L3LBiwL+vn9/l/s+zw8
j969d+7MmZlz3jlz5lyU5Sfhsv1azJgyGbMWLod7CG0bWSWJuHNiJ+aS8qfM
mIuTjz6jopppqSzJgYfDSWxctx4bVtlg8dLlOH3fE+UMur6symI8OrgERsq0
Les6bAbVbvvbXqC1CBPhX1ywd9N6BMTlI9bbEUvnTcPs1UeRRNF/BqL93HFw
0xI4fU6kX8oshNuNE9hEymGXtXHTZhz84zHSs+Nx6chu+vomO5x9HiI8/p8D
fm77Pi0Xb++ewrJ5VrCcMgOrd/+B0HQhZ31YFYh8dxcbVizEFMtJmDHHmmpv
WbXuEc1tWYj6/AxbVlhj7pxZRLazsW7nMXiF8+IPizJ+4PAOO7p95G/3cQdk
VVYi2PUmtm3eyL2+bd8ZxOTQ9SxLeo29WzaR63a4+ileRMurgZmPM4NUqf6R
UdHGwkOPkVWtQcyiWIRGplL/rswIwNlDu+k6bN5DZEf3ZHrUFxyz387pk61w
/5HMfb6iMB1vHl2E7dJdiCouhb/TRaxcOAuTJk3F8i1H4Z9YKCCfnLhAXDu2
A/P3e6MkPw63jm7DnOmWmGq1AHsvuCC7rCbHYZVlwe3mMSxbsACzZ87AzHmL
ceCiI1KKa95bnBmBUzvJmN28BVs2rcW+43/glsNLVJ9mOXF+OLLVFjOnWsJy
2ixsPngVUTki9sVZ5fh6fw9MtVUoeap3s8J6Io+dBy8hq5RVjdsWIjfiPfZt
WIopEydhvs1GPPqSVIPrlRem4vF5e6xdtwFrlllj8bL1uP4yEOWcG1mMQvyx
diLNt9jrk0nLqD646vGt9npy5Jwb+R6H7FZh7ty5mDzNCis27MJz73iBuBTy
AqRHeOPS4S3YfuAGeW8l3j84iQWzphEZW+PU/XeorA/l5HDbLVc9cdJCn6qr
SvPBiBN2LoyRitGtjbHjTRIeWInmtmVZkbhxbCcWkH6fOWM65i22xcUnn1C9
29kxv++eXse6pXPxMrIEJSl+2L9hGaZNnYal6/YjQGAMVrW9EtHv72HD8gWY
NXselqzYBg/n08K5LZFLuNcz7CLjyW7TGlgvXoxN+y8hIZenAPxeXufprY2b
sN3+BIKTOWucykw8OLOf+m3T9mP4nitEezHL8PHmDpjpK1EyMek7jrrf7sAD
5DBqctvwT4+xatEcTCY6bcUmewSlC+O7TAS9vou1i+dj8qRJsJq/DKcffBLk
XmQMZIR5UXPmmG8h8qM/YLvNXGKfrPEhqsrmEL325Sk2L1tE6cbpRDceuemO
3JqLZaHIiPyCw2Qsbti4HkutF8B28wF4RWZX648yBL5+gI1LFiIgvRQ/Xl3B
4plTsWz3Ze4ZbEZZHl7ePA6beTNhYUHm1bJNePQhAgyR1WAhL6dQ+DqLVYo7
w7Qpv+3E24mUHzb72xOoKUhBQqYl3ISY3O93Z0CO9I92t0lcOaYFOsBIRZob
X6uo3hA9BlvipKNfDb0jEiwmvrrdxvolZLxPm4I5xGYfuemKrGJBXl6RG0PN
izUbNmIFuXfpmq2UfhEYVWR8JwR64MDGFbjzoxg5wS7YsGgWZixahx8c+1eZ
F4Vz9luw0W4LNq9fiz2HT+LwZb864onE+K+AWRCLFw/Ow0yZvVehikV/PICj
oyM+fYun5koVt1UduB3HbEehhWkn9OrWGY3U5ajrE7c7Cext5EW5Y3zX9thw
zgnBP4Jw294a2goyUG85AF+zah91aaEvMcHcDCoyxFZIy8H+j0uYNaQz+o0Y
h35dW0KWvEu+1TR8/vYeU8zboeeg0Rg3xJysUeUhqdoUD0N5uoZJ+Pq28a0g
ozceX9PLKN7ntt8SspKqmH8rmNITzIoivHN9iqXDdal2jLO2p9r90jsGCUEv
MX94a3I/meuKDXHt+nH0MzGAmhyb/2thk+NTLBzVHgpStC7Ydz+EJ4HKPNyx
bg958pucnil8Emn7UB53E021mmDno4AaPLw6eNy2OZYunwgd/cZo1rQJtFTl
qfc16jYF4fl8+oLwlmcHFqBJ12lwfOePIC9nzOhsCCkJKfRYfhN5fC+sjdsy
Cdd3sp8KDb0OOP8uluIQWWGuGNxOD1JqxjjkGkZzFiJLzz1jqDhXCQk1OEdW
2SQGbtuNpfVjo7H4ns+vqVhwthsPjeZ9EZb9c87ivJCraK4qx9W7ZiNWICgu
o1bOUhj7DsbqbDlpwp7/vH9FKqZ1UYeEpAK2EZ3NtpvRjvth3pKzDy3bEbv2
WcPI2ASmrVqgoaYSJSftNiPwI6+CTZxxfrUlGqrIUvfLDziDRSO7ommLVmhp
0hgq8vTZjmErL6KEr26VhQmwGWQKk56zEZhKxgKzBF9ubkQT0pc6LUfjSzwv
1oKRF4yZ7XQw58InykfNrMjF+tHt0aavDQqqupvYj7gPF9DdtDOO3HuDkO++
OL16JFRkJWHYcSpi82uZY6wS+Ls6Yusw+iyhruUBPCLj/bnbRxRV8nNbJcy/
fB8925uic4/eMGvVGArSElDSM4N3Ao9jlWV8hVU7ZegM24ZkigMycdZ6ECQV
dXGKjB/qlZXZ8HC6hYmN6L6bsv0qrVtCk0T0OAO+D3YReWpj7aU3lG2tyPqO
JSNJvaXlseDYcxRTQ4sFh70z0UyP5lJmfWbi5JJBaN62M8w7mkJdgfSTvD5O
+9R9LozLbW/4IyXgOhopSFJxMBNuRlbjFEykPpsFo35rkM8sx8NauS0LhQkf
MdBUHz1nH0JaUSXp9nTc3DgCqmSctBqzGfH59P5YaQrRl+atKb82u6w1ZC3T
1agZunXviuZGOpAi11uNWYdSAU5fAZejCyGv3QJn3cPBIvwu+fM19DLRqHmW
jOiGT+fmQ12uAY68pvetU72vwYDoMuMJ+yneSTetCLeWdqTOEim2GIb0csGW
lyV6QldKGlsd/ISKkFVZgs8eLlhj1Y+qg7nVWqqvn7r6oZjF47YyOqa4c9oW
7Zq2RJ+B/dFSX4uOGe20Fol861ZmRQGcd49Fl6Fz8ML7OwI/PsXMXgaUPMZu
uk3Nj7LkL9g4awgZn/SZvpFX3mNi73bQVVek/r/s5GtCfcvgeXo+zHqMx+P3
gQjydsWyoU0hQ8oxn3cCJSKJJROJb46imaISpl0Oot5ZkhGMwS20oGk2Ckkc
bhz78RosuupT+kJSRhbHTu1Ec0NDKLLPe6l1hm8xO9dLAuxndsfwJfvxKTAE
n5+fR/fGqpBUaoi9LuEifR21oiIDK9toQFq9C97l0nXJ/+ECDeqMsxYOfa/p
Awl7bgslCbqPMzh9nBpwF0tnTUTPLmZo0kgbctxzahKw2u+E+rhxGSWZuLu2
H5p1nwrX4HQiOSYe7ZxOypBEz7nHUGWucolN6aoqhV5Lz9BrPGYhdkwl405B
E/d8ad9VScwr2IzrTuwXXYf5Fx4SfdcCmmyOIq2CYy9+EP0ThBEGyph3yIXm
H+Vp2GHZBlKdjqNA7HYWgwNWSQwGaihTMTq1xSRIKTbD7rufUciez2RN9d3Z
Htqy7PXfZBRx9ENFXgwmdNLDnOO8/X1WZQFOEp7JHuMNBhyHsCU/506ih7Jh
3U2VOs8xcNFhRKXlE73NnjfJ2N5RhlqfmvaZBp/oLHqtS+rhtm0sVXaLFS84
/lYWYu4up7iwbN9zqNpdZeV+QGd5onu0if3n0ismzi9uRrWPPyahvKQA2Rmh
GGZMOJWULDpP3Yew5DSEfryHPQcuIz4vF9mZ0VjSVaUGt6VAbPqC/qRcaUXM
vOhFuHYS1nfVhu15z1r3OfnB47YymLrlOuLTslCQn0Pefx+tNRUp+TQbdYwj
SxZSnNfCqP14RPDld2HkfkFvbdJv8lq48j6Ge104t2Uh7MlqaBC7a30lUGCt
UhTvjr4N2NxPG+de0+WwioIxRl+SqsdVLx53KCY6SZdto9V640u+gDHGhcXD
MGSbZ730pACI3f727BBaKPPO7SpqN8WCvQ9QKEyYZYkYq6dRk9sS7JrZiY/b
kvFalI+4dycpXc/OtzDnoCOSswtRXl6C+CAP9DbWpGLTGo2/ggIGAwW5GXBc
ak7XQ74dbr8NQX5JOUoLCYe7tIG+LqOO9S9SObFvadjVXx8yuoPxOYN/XjHh
9cd8atxqms5ASAG1aEDAqbmQ1jKDTxKPQ5bGOWPi8EVkfUILriwnGAObNsK2
VwncfmLnjVvQuzlpmyx67vqA2jOiVcJ5aV+qnrXHJEiiyaBl8I3JoteAZdlY
PJRdtiJs73/l3u7MsVvd9rlzr+X7nqDOMmmNvcCLX2JmY6Mp3W/1iUkoDDiD
Zmqy6LTRQ2CNUEb47TRDtnzVsPCMN1V3FuH58e7roUKNiRY48tQX+WUMQv/L
4LJ5BPVOpcEXUVjXmOPjtmwOOrtLY1rnqfUjnJUnJWZRFCx0ZbHh+meKM9bG
bcvTfNFfXxF6Q9Ygk8/xxa7XH/P7Uv1kOuMi6G5nERnHYm5jWkbdpmxBWGo+
2GGP+TFv0boB4e6yJnBMqyqfiSSnNdBRbIC1rokCPr/Qx9trcNvKFA+YsuN6
ZDrhU9UyilWIk/2IHpHUxPlg3hwpiPdCGz15SCm3hHOqoB2IeXUG0qqD8SNf
tAa7t5ceF7XFJEhKK2PU+quIy6I1c2GCJ/pr0PPvxHueLgl8shNqOsPhxzdv
soOfQ0eFlKHQBBciyojcCpGZHIzJjdWodut1noh3ocmICXiNbRu2wzs2Hyk+
Z2HYsB88k3gRdSWpgehoRNaucro46F/7fiKzNA3TOxsQG6CPu2lVgq6E+4oe
1B7nXA9aoGVk/mdEPERrefa5QimMXHceSekZ8H56DvtO3UMpk4ELy4aj9eCN
yOGuGVj4cXsZpYul1bvjQ/rP5zHMj3CHPllrj1p9hTuXGTnf0VVNkeqDzqs9
avhdw1+spfSdsukIZFVbv7CYlchJjcOHJ2fR35j2J0grNsQe77w6z5I52s+A
rFxbvIvn5WAoCH5Ix/hI6uBMCC3/S+uHUXZt5WVP7n2h93dRtmTADjpGm1Ga
hwwyFgdwdH7rkcvwIymL2L+nsLPbj4iMEvje3wYFKXk4/OD5+/PCX6JJt73I
/r1Hu8X4B6M+3FZ16FHwM4Wi5K9oS/S8lP5ApHKcaBFuO6FBbPvWO6/g6enJ
+XuDO2t7c2yAPj7UOKDJj3JsGKFDdIkcTrlE8l1nwHt7K6qMnvPuCcRdZrxc
R+tzs93I4UzVbJ/L6NOlIywPvOftTxQFoJ8Ke660glcWz04I47Y0SjCjC9GZ
ctq47iVsH70Cey0aCee2BCkfzqOJAtvOtMfqdfOh328zEoXsQQsDj9sa41UK
v85jIPyaFcUfZJT08CqigPRdEmabasF05AI+mbP/3DG+oyrFzUYceM7VTcK4
LasoDFMNCFeV64i3NeJ7Wbi9ZSj1jNkMe+764dZm+tq0vY94tzJzcbiLLPXO
iWeCuPqWxcjBhN6D4Zr260onM+Itllj2h5ZCVd4lCbQYtAhf4qvlsyE8ZUJD
4dx29+wuAtyWuj32MXQpv20XfBEoiomw6wsgT71LF+7xZdS1bwdH0XlxBt8T
jD+vyMSe7srUb60G7yZcGIj3PE/JyHT+8RprGlbxD0zSp/cBV1zwYV/Bmx2T
yNhXwbQDj5FZlXuDVYzX1y5y9g+Z8D85BLKq5rjhxt/XHtg2uiMn/8VMxNXq
Gq8Pt1XCBi/BPfA76yZStrKHvRv3WtADe3Tp0AXbn/PGfsmPS/SeuMlKcLv6
J7gtqyIbW/oQLiHdGA4pNcdhzJOFUCZrJ932Y5BaRL8gK/gstNh74P3mooBP
MeR/3EqtbyV0Ztadx5mP21L+/Ls23LjbTTe8ubeFvThG+G4P+GZUiOS2b84t
p+S14IRLjVcV/7gBfWl6z+OiT9VeUwG2mNHv2+2cyLu5Ig1zmutScSKrP9Fc
sDI/CmON1SDfyhLp1URUGu5A8Xx+bsss+IElA7rAfOwmxHPHRSmujaX54Prn
fH3CKMLp6V2p60Yz7/KtHZm4um4YeuwPFLFuolEXt5XRbYcAgXjbEhwbQfub
V1/mnAllpGNNdxVoDN8Ddz6d9ubFbbTVpP307ddzYseIbtnemfb9DjgZJjjP
yG8HBqhDrY8tXvHrRvdnGNSqIc2H57mituHBjpE7bj0enftMQWBR1dgitmgL
PYfaHeR7X+l3DNJi7znK4kFgrkA5lYU/0NNADr2XX8Mbvnp4PNgFbc442/44
ug7J1qgcHmwdDY0WI/A5mU8TkXH5cfdQKLH975pt4BiQwtX9hemRODa3A5Xf
o1Gf6SJ91sXp3zG7D73GkzS2RYqIOcTM+YR+OlJossxTUJaMAjhus8KUxXsR
VUy/6/XlzWjbtjuuveXlzYx12s8Zc6d446siGUsMadksuhtXg1u/vbKMmt+T
t9xCXpXDpCILJ3bcxW9LCS/GPx714bbVz5KVpn1HB0NiC3X6IpHa8yZzbRF7
LuhgmMUkTJrE/zcRFhYWmDhxKj7GCIkd46IcG4VyWxa+H+kglNvmv7ejbbrR
EiTx0WYmk0n5fNmoKIwjvKYPJ2dPU7xNq5pBormtVVei/xUb4XmgsH3NCuyb
WDu3ZZf99sQ4av7J6PdFeGn9HZYiz5KVhWOoDvlNWgmnXoajIMIDDdVk0LhV
92oyn0TkzZb7RCw54crVGcK4ba73afpao+mIFrL0CHU6Cll2/IXuSERwhkfq
p2uQIdfk2y5A1VKBWRiOwRzuadRuBtI5e4zF/tvRa+GJevmsRYLFRLjHeehL
8Hy4Ukpd8DqBb2T+NLd1pLmtHOEs1Y9QFX1FX1X6PX+8ZsfoEm57iOa2CiMf
1/iWSf7ruVAgv+mYDkUCIQaP7K0oOz9q+x0hjWHi3soW9JievZe6Uhh4DpoS
tO/HuMcMhHCVNGfsVKZhbTPyu1YbWFTr60kT6TlmMcWWPFfbGqI+3LbmWbLn
26ZRz7Td7sx3lQUmg8m1OexY56XDW3Pm4iKiE6qaWX9uW5rsg6a6pA4aPRAg
5OBqSaYv2quzuVsLeHBiObJCzgnltkW++2h/vLoFYuoKgxHgtgSMDCxuR8f/
NBi4FjQTY+DQzJbodTqcHse1clsm9s1oSvXhDmH798x02Lag5TFnX9VaoRBb
2wrhtpWZsDHTI9cVYP2Wbm+a70M0IHPMeNLGmvKr5SwZi+hCJovnd3Q+s4rD
ryWw8qHgur0i9g6aUPERyngaVlR1EZPadISfiLz/VaiL29Y8S1aBCzNoPbr8
j6+c192FAZt3dh8mRKdZUON84Q4n2q/PyMVODred+Ezw+wKVKa9gzI4rat+7
Ft1ogSmrHJAvYsnN3htg2xIaTIS+OosuevQZgJbbAnlzqDQYg9ncVkYOLtUG
XO6XjVS/tB5sUbMeFnR7zj0LqlO2/CgOuYwmRJYfkoWc+yRjc8/kLrR+lFZF
P4tZsBo/EDp6prCypHVO3+kH64jzJfJLfgpTWXpt/7ZWnxQLCbcmU2N03hvh
eXMFXkPGIYOrN1jIDnHB5O5NqTo1tDzK48aE2y7lcNv172qWm+Z3HxrsuGIy
z7TMLPE1uYBTvDggQQwefgu3ZRXAvrM04aWmeJ35qyzmT3Bbw8UC3JYd/+X7
7ByWLV4K+xOX8cnXBX2U/5fclsgo4zu6G5EyZLWw8HZEnT6PKojOk1CCJeak
TCkF7HMMQMqXe2ggL4ERK/6oV9nCuG2sI2cvU2us0O8ZZfo4QF6GcFaFDvjA
UTOskngsNCb9LamGTe4ZlK4KeLgbih3WYUxPI0irG+NFaBblz9zdTRVHnofW
LPgXUZwaiLXj23P5bW/rYzz9+Tu5LSsHS03p2LPjL+JQF7dlpd1BI8ILtFr2
QywxmBfX0jxywKbrQtvx7rwltfZpYbGGU0AFPjvsRGMVzn6gsiGmrT+FaI7x
ZceC9CScRNJkEVJ/yQX+i9x2+3Qh3JYdC1EAt+v2sLa2xZHzt/Hl5QGaW/0i
t80L84CBOhlTyh3xWYjJrihMRH8TRUjINMRN9tiCCG7r9ye4LcG7i8vpPPbS
Wtj2OgMlETfRrlUfhFXtvdTKbYuxpq8atce6+bqXsJfh3CQ6xn/i2huca/Xn
toHP7KFE1pSm07fWKLn2PAlMpAW/xjZba2zcdQhP3njhj1FqQrkt+0zUiXkd
KR0xcRebn7KQ6rIGXUauqlc80e/gtnnvt0GKlNFu14e618MiuG1hwHnKn9Fy
xe1fi2etKic1FCc2zMfy9Ttw/fErPF9p/hPcloW4q72JPCWx0DGlzr39+qAs
NxRT+g/ByZehqC1lF/u7eV9cH+KP44dgf/AILt95grCYAMwzZsf2yWHD4xjh
DwqgGJuGaFHxFy9ja5tEFXg+tx11z8K3wrltjbqV5+LhSTvMX7oep687wu3C
5p/mttS5hTvb0VKHXoPKajWF1bpjSC4WBySIwcPv4bb52NNBkoqlsX+XVfu7
RK6rfg+3ZRSl4fSSAVDS7ga3SM684MYk/O/8tj+cD8C0rQlU2efjpJrgVWTd
uSKo+ovktuVYNZTISEYZ592jkeTlAC05CRiNXlUrd2b7bUTFJCS77qNlKNkC
ruk1dUNe0GPIy5K+1eiHQC5dJDbv8RTqDEyzQTuRR3iO3YTO1PkFD/uZ1DgY
cewtsgLvQkGlD4Jr9SXWDm+3J/ha2wZTeQJsutAxALItJiOnqoG/k9siH7bt
ZSmecs2bPaZFc1tkP4YR4Z4G7SyRWsLCdbuR1L1NZhwUals/31xInVnuNG2b
wPWSOE9YDWgNZRlatzfuNg/xBRVgFQahG5tvybTGCyH9RIMlYo79Pm5bkhmG
jaNMoNVhLvfcPDcm4Re5bWH0OxhpsuWth4txNUczozgNg9uokjWWMZ5F0/u+
fxW3LUv5DFNlOmbEqPsSHJ7SAYMXnuFxk1q5bRk2s3UY4TJWh54IeVklbiyk
93qnb6/6vf7c1vfRdmrO6ZP5Xn0ECOW2jFJ8fbQDDdU1se5WAIcr8mISanBb
gvi3F6EoJQkpozEIyc/HgZFmWHzOv8Z9wvA7uG2upx2lo2S77ketqdVYHJ0m
gtsWfP2DKkem7Wpk1DpdmLXzTfYZPT8HmBuqovdGF9Bua15MQn25bczFHvQa
3MZJSB5Dzl319DeW5UVjt0UnHHv5o1738yP43maqb1TaLUVCPb+3fmQe2z4a
4mNabdalAk6zzKj2dbAPrnMNkRf3CVNMFdDKYgcyOUVWxST8FLflICvUA1O6
mUBFjp6rip0WIzTnH/IxeTH+cvyumIQ7s2gdNXLFNaH6gpnngyuO70XU5Ddw
W1YFHFazz/ErYPa9MF49/sfctjTWBX1M2+F1RAqOLehJ3ddu5uGafEgIRHPb
QszvqAQ5lcb4mFiKvFA36KlKQ0qtI14Ly4XLrMAj+z34yAkcEMZty+OdqT1A
Nh9d9zSxRhGpn25AXloS2kPWooS/YysSMLSpPOS0W8HFYRO6Dl1I5RwrT3gB
U8LxpPUtsW/rFPQ49L3ePmt+eJyyhdmyl6gtnMPj7EwqX4NU4wnI+Cu4bXkk
xuuxuWRn+FMHykVz29KArVAjv3WceYeq86fL9PkyaaNJiBGibl+fGEH5lWbs
ZHNGFsJfvUQEp8qVJXkIfHMd7QzIvJRSxKwHYexNVo6+l8K0475CfVoFgWdx
3SlYuMB+I7fdO6cHdb7wD75zin+W2zLyI9HXUINqX59joTXsZEVBLPo0loOS
SS9E59EC/V3cdkZDBcJteWfl2HrEe0836qy2lIwsFGUNcC2I7/shtXJbFi6v
H0xz4kn2QmI5S3B8hDr1+y7nBM61+nPbyNfnoEbWPNKNhiKyWuHCuG2i+wlo
ykpAZ+whvvhZ0dyWVZaKje3lKH0waPU1dGg1BF5Z9Vub/g5uWx55g56T0o3w
OFxIbjBWGd4dW4ogdpypCG5bkcjRa1I6OBcghB+RPv56fB48woXHyZWkfUNv
YxXq3FUm12n9s9yWLHnf21Lx2w07TkBykRA5sgpx+cIloXWoft+O2eOx90UY
yqtPfsLDkzJEfPeP6GrL9lqQUtLBhXf18dmyUYKNA8h8NF6N2j+7x0TYGVon
yjYYg4iCmlqJkR0AByd2LE8xNo1oDCk5ZTj4pHF//xVuG/39MzJKaKvCKC9A
oOt5dNOl99iWnRLnOxeDg9I4DKW4rSYOfBfclA65uoYaL9XPkpWkBaGDgTzh
tn0Qz8kxFfxkNVQJp5HTbYMrn+IEOGhuvA+se7XB08BMERWp7SwZj9uaz3UQ
yW1Z5fmY0bsxZaNXusZx72NkvUFH9jlWiSbw5ObBZuHSMjr+aMVpz2p14XFb
p4B0oXXda0GfR9h7rxqXYJVgm0VPWB6gcxjlR71GB+ossAZs7wTVubcnittW
pj5HW2VZdLVxpHKoMAtjMIGT+8do2HqEZ/L1ErMUfo8PwmL1ZS4nLf7G47YR
VSqYmY8LU40pO9592sEaevPDlTXU/uzqi+9q1PXEov6UDTRUU8Lq64Gc9pfi
6uym1D6cWlNz+FRLypKXHA4XFw+k5IkmHRGP90FaXk8gzwMPLDw/OIbihs3H
beQ7g5CKmU00qT2ypa6ZfH62EqwY0YTiCZsf+nBL4XJb2e7wKRQsP8frAOFN
8ui14yPnvDGP28oPfyTIbZklcF5oBAmV5rgSQtvjotg3aKHI7kcVrH+eKLje
IzI/OJLYZBVTPIsoot7nsXU21nJyLFTVIfiaNZXLrdcp9jfjK/FxR3eKz2s0
NscLKtcO797U7y8wrMtofEypTa4MuK2gczQ1sfUUXG+UJ2GqLn2WbH21s2TP
ttLxtmZbn3OuFGCcqSIk5Bvipg+Pi+V+PkrFG0sYLkBClS1k5WEr55zU1mcJ
EAnCWdy3DKTiNJSazkBMtUQYuWF30FhBAgOtL3G/JVrbWbJCnz3092frw22J
/huloYA15z8IXi8m3EZfnuJqjaecEczLQerqMK2K27bmrH1oxLw+S79bpROc
EwUJKDM/ACMIB1JpPR8R3PNJtZwlI9x2SWsOt/WkeUtxghdaaShQ18af+Czw
TdWi4Bv0exV7wY+zPHm0fQZVroHVWV6ua2YeDvemvzFsez9WqEgKfPehoRzh
0JJK6LrqQb3Xpg/tZ1HyGrXTQeA6m9sOMBR2lqwc56bSenTZGc6ak/CwhW3o
PF5dLLchiZ8Psirx7voW9Jp+BnnsSongtuz49E2cvZ3mA5Yigt+fR7ig/9Oj
aDdyH9JqSeKa6HMZOmRdoNZxPK/v2fnXbLrRZdr583Hb77Vy24o8P3TWkaFy
fMw48BS5fJ1WWZSB6xtGY/15T1FiJeu6ZBxbNAJ2V97U/JFZhu+E2+179EXo
s6XZ0dhh0RySCrqwsndB9W37yrIiVDCE5NqOegCzBg2x/X22yFiKyqRnaK8q
ScW+Tt95Bzl88izLCse2RYvwOIrYpaIv6KbCzt2jAscgXl8FO9AxcXoTD9fC
bWty9jc3t+GMv6DPKeDBLiov54ydd0XUVoz/FCrSsMCYjo/vu9ePcK9KOF0+
hoTiSnw9bUNdl+m8A/yrp6JEX5ix56tmVwRzznSzc4ANbNGAs78tif7TVuP6
/Uc4tXMRmigrYOKNmDr2LEqwso86xW2PO4fzXWfg8xaag3a1PCXgx0t/QfuV
JfRmIq6crfoKsWhAS9rmGE5FcC4DxWmBmNO3NbX/y7YJDsF5SAkKpOyCw9Ze
FNfrs/QEmKTdXhftcCOQPZeKMKWdErHfurjnIywfZwnsBtCc0u66D991JuJu
T4LB4HXg937lvl9N+VSUDNshME30d3n48yS48eVJYDHycWK0ERr2nst3FpRF
ZLCMk8eK6A3dTth4+Dwe37mMOUPaQknTFF8See/L/nSSlpf6MPCnPyxOC0BH
Q2JPVFrCJYnvB0Y6bLoqQ7bLVmIDatY18+1BOg9hk/lkjcO7Hud1kcoR12nS
5mpPlGLDcD3CByQxaMstkXLI879O96NmdzyNEvTBMnN8MLQB3eaDL3lrGDav
fjTFiF6P6Q/Ht7QSVOTHY++0zjBu0pzyCXaxvcq181xuS7jwXg+eL4HKfdWj
KXQ6TUAONz8wj9tKqAwViLPI/vaIyqlgsZP/W6MspLkupfq9kdkEARud7XUC
qpKqWP4wmHuvh914NO9tg1w+25DzbjukZBvh6jdaj5fn/kAPQzkOp5LCuKW7
cd/xIfYtGwdV+UY46ZuG2sGE794xdP2b2CCJCCHF/x7ufgxnbzRgsAqb70hj
7kvBvPQ3Vk+gnmm2/D53T3tyF9r32GisPeXTKohyxcjOtNwl5HvBN7cIX31S
yP0lOD6YzpVnafeY2gO+e/AgvGvbbGbmYFEvokOk5LHjAd8+OFkLnB+tAenm
07i+bTZSP++ifOVN+8xGPh+3zXK15dRlCCLq+KBiWeI7NFKQwfANl2v8dsp6
KKUDbnhX4+Xsb5T3a8HRdRqcPBockDH4cim9H9R2wjHwup0Fr+OzIKnaBI+C
+db4jDTYmHB82894flRWWRLGGTWg1o7TX3LO3hNu9XFLd3quy6li79Oq701X
4PCsXnR9iI5bes4NwYRDvjown3NND2e8yBqdUYhL6yZATYF+37QDXihLDeDm
neCrFOYPNCBt18MdX1H5iAXhdmoZVa72MDvCB8l6y/MYzjqGglEWh946ZMxq
tMbnBH5LUozDg2nbs+gIb+3s/2gblDn5w+WVW2Hjkct4cPscZvc1hJLpBF7u
i8osrDajv801/Ep8DQ7GzgGmJ0uXIylthBV7z+Lx/atYMtIM8kY98aOgdtae
+u0BDBTotencu9FgMEvx6domNG1A57hWHnkXBblxCMkkiq/YD71U6TwJT0Kq
+RkJjz49px+nHyRh3HEUTly9j5vn9mNgS1VoDDuEbJGLhwrcXtsX0tLqaKiv
D/1qf5oqSpDX1Mfb6Jr+Z1ZhOBb1ZX+PRBb7ngTWkE/h9xvQk5KCtH5P3P3C
+6YNsyQDi7s1xhCiK+sTLXFz02hu+zSb9MKW/cexzdYKekQeS8950jeVhWKI
Nr3vNGDVFVQQucS/u4y+JrQukeu4Clml+Qhgn48rj8cMHbrflj9LrfG+15eW
QKnrbvBvJ8S9uUzFce1//pM5J8T4F4OB6MfrYagsSeamDBq17I69d17B+cIB
DG3HsVcyurC02QW/rAoEvbkP63E9ocjWPZKK6DllFdwD2bqfhcwQN8wlnKrq
nA+V19a0Pw7dfi1y7Z8d9wUntsyGoSL9TLuhc3Hp4SuUlKTi3sntMOfsN6jo
mGLz/jP4npSND9cPwqJbY857NDBzjT1cIwoQ9eo0OunTMebSMkowG74ILv4R
ODLZhOKxSo3aw/5hIOX/jfd2QFNFOr6+YZOWWH7cCUHeT7Fu7mhoUTpRGi37
WuLgubtILaPzkCb7O+LQptlorMSJh2w/CDtOXEd6VjSOrZkBLUnC6cYshGc0
zW6ZxSm4ccgGunL0vDbsOhJHH74V0R15cDq5Hl2NtdDItCfmLLLBKtulmDJ2
FOZuOEZsVjUdxirHi/Ob0FJTmk/uMhhotQGe4bl0rtXSLNw7ewiTe7fi/K6E
Mdbbcd01mrPeYCI1yA02FuaQ022HubabYL9nKyxHDMCszWeRVFuMfnkSbDvq
YO2DAAEdWJEbhUHNdLDxQXi1B0qwaZgB1cdDNgvLH8BXRoonmsiqYuS4sehm
1hZDJ8yAzYoVWDh3GtoaqEOv7RCcdf5W49trFRlfMKtXc864lYO2UUfsf+iH
kysnQE67BabZbMEDj6/UOWEut5UxxtSZEzBu2lwsW7YE4wZ0whCr9fCK5s/n
w+O2sm1mw2LkaMxauBhLF1qhR6euWHHoAdKry4no7w/3jmFAG0O07jUG67bv
wa4NizFk8AQcdniHEq4Tn3DbLZOhZdgMgyYvwfEL13DzwhGM7tsfa08+4X1L
nnDDiHc3MbZLY25uc/aYMjG3wGUXvzq/w1We9AYjTOk1mZpOU0ywPY34iHfY
uXwKlDg58LVaD8fOCx4oyEvAH/vWoZ0Rfb9Ug3ZYfew+Je+PN7bBiMOPpBW0
0G/mZngFe2OeKZ2jSbtlX9zwYefIZSH05X5oK7G/A6oIA+P22OvwWeQaNy8h
ALsWj4Z2QxNMWrAS++33YJ7lSAybtw1+8Tx/j9fTkxjTWZu2i5pGWL33BPxj
chD2/Awsu3P0FlmzTF5hj6+ZNbUP22d2arsthnWj9YKUqgHGz7HB1U+8fYIc
/2vo3M1KYF3ief8k5kweTvghb761NB+JNfsuIJvzLTN2Xu97R1ehjaE2eo+d
ie179mKD9VQMnjAXDu/CuXs3lYR72NtMhAbn2w1mQ+bg4r13KMj4hkPr50Cd
8w7N9uNw4okfLbfKHFzbMYfyKbLnuY6BEQxNOmHH3pVQlZJBK/PR2HH8KnwS
ClGS7EP4oDG1vyEpJQ1N4144fPcdAh4spfbYpOQ1MX7dJaSW1Bw4L3dNh06L
UYjNr39EUV6EB3rrSVHzW12f9N/6C/jwwRmrpvejuaqkPLqMnIubbv6ozPuB
/Sunw0CebrtBm0E4fN2Tyn/ALMvDs+Or0VJXiStjSXl1DJtvh0+c7yQWRLzB
DsKfGsjJUL8rGvTGlgOn8SmS5+djMUrhcWUHWber8MqRlkefKSvhFpgkkrex
v0ewf0E/jk+EcFk9U6w4eAexn09Q+weUr8ViDR4/OAvrid05+QIl0XnkfJy+
/hjZJTy5sfXhiRUToCrHGzPS6k0xf8d5JOSLSrBVjlubLWl/vIi/JiOO035s
6plSBL1/iu3LZ6BLh86Ys/4wPoRnC41hKonzIHqalrGscgMMnTIPi63nw2r2
Qhx3eMPNq10XKvITcHEj4bKqstw6qTY0w8azLnx+aiaen7Dm+mHk1HQxccUh
sgZ2RgcVzhjoMA4PnlzHhoXjuPc1NBsJ++Pnic3n+WjeXFkBQ309DLC0Jrry
Bq6fOwCLIf2w6oRzvb83J8Z/B9nxwXByckVSXh2OjjrBRFaED54/d4FvaCIq
ajvM+ReirCANni7P4B3G8zmUF6TD7dlTBCcI7l0xCuLwyuUlghKLfss51t8H
FlIiA/Di2SO4vfNDdnUSVw1MRjF837ni+auPpA9/NZ6ehdK0ULg7P8MLzy/I
KanbrqWFvkZGQbWALFYlvr14gSQhwbIlmTF4/NiN6P46iBix4c/vvaG/X8Oq
QFzAG1w7fxrHz1yEm3dErecy6NcXI9z3Ld75hHK/AZCWnILqrxSItyVtSA7z
xcsXbghJLBAyFgTjbYtLcxHw0R2ub77w8tHWBmYFor59gtMzJ3z4GgUhn+ZF
aX4BFfvAIJzL7707nN/4Iru4lkA3Ul5MwAc8d3bF99iMn/omRkVRJl4/fwqf
8Lq/pSAKJdkxcHN2QVAszwdZkhcPF6cXiMrg1yEsFCV+w4sX7ogT+sEN4SjP
TcR7N2c4uXoiPkv0XsffFezvHwZ+8sAzJxd8jRLOL34VbO713s0Jzh6fUVDB
JGvoNPiHZ9XMpcwoQ7CXO9zeB6C8ShczyhHw/iXe+IbXetb+6PzBGLTt40/H
yrO/zfjO1QXeoSl/ur2Mkmx89niBFx5eSMn9dbvELCuA31tXuLi9R3xm8U/o
eRaSQr7gifNrpBXwdGrSj09wfOmF/J/6KC2b48bizQtnuHsFIb/0V04h1AUm
ou9txYadR+H01h8FZXW/g1Gej7dOd3Hm1Emcv3qb2Mxf1wvsOevp+hwvPX24
6zxBsFCYFEzp2LBU3pwuTQ+Cs8sbod8hF4ay0iIwyMAtKyC68oM7ZR+rf9tX
DDHEEOO/CtF5EqqjjjwJYojxbwEjCcO7DcNncSJ8McQQQwwxxPhH4Ve5rfwI
MbcV418ERjGCP3vik28wMrNS4bDKHMPXXP6b7WOJIYYYYoghhhh1gf2dUjUJ
OieFZ05dlpz97edBdDxZt0soEht+Mf4lSHO3F4zhlGyAF1H/zDgQMcQQQwwx
xPhPglWOIKdLsB7XlWPPZTFg5hqcu3IPSUK+LcoqTsLto1vRu4kG5/y9MVZs
P4KHrl9Fxv2KIcY/AUXR7hhkQp+30mreC+ffxv2pb3mJIYYYYoghhhj/Y7CY
yEmMQWRkpOBfVAwvJwH/7ZXFiIuKrHF/fFLNsztiiPFPBPvMWVJqrng8iyGG
GGKIIYYYYoghhhhiiCGGGGKIIYYYYoghhhhiiCGGGGKIIYYYYoghhhhiiCGG
GGKIIYYYYoghhhhiiCGGGGKIIYYYYoghhhhiiCGGGGKIIYYYYvyHwCjJQWhw
CMoZf79EoYzyQvh8eI/ItDo/WvWvRHlhoTh/628Cq7IQYT8ifilvKKuyAKH+
X+D+ygN+P+L/lX1Slp+Gr6Hpf78cVEwG8ksr/uevLc1LR1Jheb3vT4pLQP3v
FuNnUJGfjNC41P/vavyzwapE+NdP+Br9E3nmyDMpUT+QXlL5V9ZMDDF+K7Lj
/LBv2UToqspCt+0wJAvJmf//jaA70yEvIYEWw5ag/O9Xvb8QLOQnemPiFDvE
iz8u+6eQn/ANJ+0WoKmKAuRbTkDeTz6fF/sZo9ubYvIcK5jIS1P59fvb3kTZ
v2I8MpEW5ArbyX2hTNqlYXHzb/ct48r8eEzuPww3vFP/km/QMnO8McbUEPr6
+nx/jaCp3x6+KdXX1CykudjCxEBf8P6GWmgzeZv4ewu/EywGYryfYemEntSc
M1917v+7Rv9oFPnthDqRo5xyK/hmiOaqlUVpeH5pDwa10YGErD7uhuf8j2op
hhh/Hknh3nh6egZUyHj/u3LbH49soCojgXaTtvyHuC0Lry5uxrgFuxGWIf7u
5p9FTIgv7p5aDw05iZ/mtsz8IExr0whTrwYQFshCdsgTtNdXQpNes5Fb9i9w
3jJLEPTxNbZPor8P93fktmyUZYZj33IrbHUMh5BPe/w6WEy47LAU/N4t56/d
+D0oqvYyRkEMLFuqC71/x4Pg31gxMViVpQj0fge7mWJu+ztQ/O0EGisSHWg4
GEFZorltXnIk3J/fQXsjJTG3FeN/hsrc7zi0+zFKf0rHMxDvtAXvw/MFy0p3
hJHM35fbstfuKfEJKPynbQKzynDn7sOf36NkVSD86Qa06zkX8f/FDU4it2sO
T/G7d6Bzw17DWE3qJ7ktC8EXF0BCUhOn/FK4VwtSY5GU+7/fI/89YMH/3lk4
J1UIXPt6eMbfmtuyUZ7xDSMNdXD5fdxvK5NRkoqRXdrioHsIoqOj+f5ikVNS
0wsb7nYCumbz4BUWLXh/bMp/aO1dN8qSXOH44ttPPsWCt8sDhBcLCtL97ApI
/oe4LasyB45H9iLj5wx8vZCbnozseq7JWWW5mGTeSMxtxfif4frasWg56g8U
/4QuzQ93RTMVWdz1FxyjlRlP0fjvzG3/kWAi7qENmg9b/tPcNjv4OQxVpbHv
adhfUrO/N5iIuTsfzcds+O1xi7nhhNuqS/8ctyXrjKMz+hJuq4VzAf+OWD9G
YSgGmbTA1WhBbut/1Opvz22pOB2/fWjachz883+HrmIh0WkBzBeeQL3MPasQ
+8eZYf+7xL8kNuLfAmZRPKw76mLN2Q8/9VxF0kv0at4D/oWCawqPc7b/KW7r
fWU1mrYei6SS/197zCrPg6W5vpjbivFbwGJUIDOVrK0KSmv+VlEAjzOL0UhR
AiYj68ttWSiK/4zZvZsRGy1VD27LQkleBlIz80THm7OYKMxOR1JyGor/xCZh
RWkBkhJTUVwhOlKtrLRYiD1hoSwvh96jZDGQnZaGIn7nCaljXl4J97mCrDQk
p+egriNzxflZpE5JyC0W7ZurKC5EOaeswpxMjp+HieAXp9FUSQ4NBtj8HEdj
FuDQ9HaQ1JmKCJHrDBaK8zIRn5CE/BLRbygvLeX0IxkHOekoKKt/RGBZCe/Z
QvJsoRDHVEVxHpKTkpBTWLusGOUlKKrklETGd3oqGTM1/PBMBDw9CgNZaegM
X1+73FiVyElPQWJqFiqYojuyojSfGltl5N2/xG2ZZVg9soNIbsuqLENuKd22
SjKWU7OKhMwbWn4JiSkoLBO9F1haWMQdU8yKUqQkJiKvRh8zKBmkZhX+FMfK
jf2CuebahMM2rJvbsgiPzEpFek6RyHewWOy6JCMpLYvMq9ruZKG0gNYnLCbp
/+QUlArRGex5l0hkJFIXEH45ubMmOkw/jfw/GZzAKAjDVEMp6DVrj0lzluP4
xTv49D221vZmfDgKHRkldOg9FEvX78bNx66Izij8U3WgZEPanZySLlQm/PeV
FWQhNT1b5DlGRnkpOMMRZYU5yCoQXKkwGWVISyb6tvzXI4Mry4qQQuZ8kRBd
wixOwoklgyEjJYFVP8Ft8+O9MLWTHiTUOtSD2xK9npmGtLzSOsY/i7JR8Ump
KK34dZ5YWVqI1KREZNbxPvbYzibzki1zUfcxK4qRnpZe089P1tIR7qfRpqEi
9Fr9GrctIWMpNTMfolQjs6yg1nPjTEY5MpKTkEdsX324bXlxPpITEpBT9F/c
ZBSjPmBWFOH+QWsYNGiIPn3NYaCqgEbdreCdUHWWgYmne6dAUVaSskHSMorQ
0dWFSb/ZyBdB1gqTfGHepAGkJOmYMDUNbejqNcbyx9+p3/m5bUJuNv5YPhSS
kvQ7GpiOQkD1/ATEfpWk+mDR4DZQVFSEvKwMlLVb46RHJCrr4Bp8haAwPRhr
LbpCv2l7DOhuCiV5TYxecw3ZfAd0GBXlyEkIwNY5g9DYfBKXQzMry8nzP3DQ
ZjSkZHohLCcFB6e1gTSpc/vxdqgg+j3WzxkLhneAat+jyEoLwvLBzSFDxcVJ
o0mfRfBLKalRp/w4HywZ1h4aWg3RWL8BaZss+lhtQ1xhOVdXsRiVKM5NhIO9
NRpptodndgEc7YZBjpStrNsfD8+uhSaRCRWDJ60IXdJHuvodcDeqbm9YUcBR
aJLnWm31Fn4mhXD13ER/LBzeFmpa2jDWU4acnDr6z96JmCwe92eSOhblJOHq
zrkwMhmCLKJzr64eTtVJptV8RFdvOh+YhHsWZsXjwhYrGLQYg6zKYpy3GUA/
23oJYjlLLkZpFq5vmgh1VWUoyMuR8SiPiXa3kFelsJkMwucScXmXNUxIXY8H
ZSLV/ykGNVOkypLVNMbJj8mcOjMQdHMlNKrkRvgDJTeDTnCMLa8SPJICHmNI
a10y7hQgJyMF3dbD8TQ4u4YeZ5bl4eFe0nZ1VTRupg9V/U7Ye/46GqvVn9te
2jiS1EEHCrJSVJ2UtBpQdWpo1BLO/sQuER77zeUcBrbSx9gnWYj3PI3miuzx
JUPmQgK3v1J/vMbEHsbQ0GkIIx0l0l+aGLfyJLLYtqOqvmQ8Z8YH4bDtROjo
dMMXYtuzvjtiUEtNyqZLapji1Md00k4mEv2fY5ipGj1HZZQx46hHvXI2MHO/
YlwbNao8CQlJ0h5dqj02R11Rndvmpn+DzaBm3PliPHQDogqqjUhSl1ivexjU
WofSA3Iy0lBuNgBP/JK47WLP38KUQGyZ2Q+6TS2RlBuL1cObUXUYuPw8t6ii
lO9YNb4z1Ek5CnKykFQywsYrb1EbHTmxYAik1ZvC/U/6kn482gtpaSmOTKr+
pNFp9imkFVdrL1nn7LLoBikpScE4W1lD7HwY9AsxwISr5oRiy9SeUFZWhaam
GhSU1DB33wPkCKzPGUgNeAbLnq3QvGt/dG5hACVVPWxy8OW+k0XmWmlhNl5d
2YF2Rs1xP4uJT1dWQYmaS63gFF1KlfP1wV60NjDA0NEj0cbEGL1HW8D+Yf35
Z1FGBPbO7Y8mTVtjYJ9OUFeQQ78FB5FTyuCIKAfrhreBjDQtI0UVdTLG9NBx
4VWRa/yiaFf0biBHxjRbplLQ1GGPzUawOhtCrYf4uW1RWjAW9DPm3CuBjpN3
IbPGBGAhO+YLZvVrTtsoORkoNmyH4y6hP9VPzPJ8uB5dAENtVSgqyEOavLM/
aW9WNU7PKM/Bi1Mr0NSgKcz79IKuigKadJsOn4xyAY7LYpTi07U1MCbyGzJi
MAy19NC/bx/Yvsqlfg94vBtKCrL0nJeWRQMih4bN+8O3qO5Kl+dEYdekdmjZ
vhdGDOgG/eZdMcDCFllVbamsQEluHM7bzYK2ojrcqhsBViXCXp5B96aaaGDY
BFqqupiy/TZGdBUek1BZnI6r6ydBX12Rko2UpBLGrTmP/H/HAVsxfhMYBbGw
7tMUCk3HIpgTx5cb6QYTRVno91uJXGq4sJCTEotPBzpTc7pJ/90IjoxGbEKq
SP9qJVmjxUV5Y7w+0QXEHp5w8kd0dAzSObltqritur4JRg0YjFX25+H4+B4W
DTWlbKBOvx3gP1IZ6XkWrduNx8OPIcjKzUXMNw/M6KhKylbD6nOv69XeDF8H
tNGRQ7sl51BAO13hfXklJKTkYXncnaMPKuBx7ywWjWhJcdYG5hNpbssqg9/D
c1jUvynHvnTDkhULsXTFbGgpy0Cz8yi8vHUa4zoZU79LNRuFCcNHYNOB0zh1
yA59TFSo6zptxiO0mGuFEe20G60Mm2L51XfIKamk1uCxX50Il1KDnE5bXHgd
Tt0X5X4PG2cN5ry7Bez2LYfNuuUwM1CCjIo2Hn0KwweHQ9T5Nw3zmQil4vHi
UFAXASHtuj6vFylTDVt9hNtsn7u70aKRLuyuvkYepUOYiPhwG311JKDauCPO
ecRQ9wV6PsGm+UOhIEXqqNsTF9dOwBLr2WitwR4DzeGaXIvvkPAVP/dHWDdr
IOTYtqPRAJxdbQGbxbPQUp39bEu8Tq1ERUEkZvXpinVX3JGYkYP0hDBcWd2X
8HtJdJ68meK3lXkJcHI4h3aGbHkrY6atFSbMtMXNBw9xbpsVNNjyUzTG8/BC
qv/z05Pw5spOyJM6a/WzRhglt3hunLXLieVo338x3gfHITs7Ez+8HqGroQLk
1VvghncitwnM/DCsHtYGrcZuRGAibTNyE75h8zgTSEnU/yxZXmYSoiJCYNXH
hNRfFXZPvOi4yphYZEV/xuk9q6CjJEuNgz72ZzBv0TJY9m5OvWPZ6feUrXh9
ejmMGzfH8ef+KCJEjcUoQ5DbWXTWlISGSU888k2h2p4X9RW3jq4i/JBwAtkm
mG89Ayu3H8fjZ89x7/QaGBLOrGrQGXvXzMeclbvg6PQCT26fwiBDadInGtjv
mlhXc8Aqz0Xs95doQ41bbRx8G0a1h+2X5ee2yj0XYMrYCTh8+S4e3rmIiZ0a
UNdHrrvMV1gZ3h+bi0ETbOD9g/RHTia+uV+FsYocFLRb4sTnbLIELsF7h5Ow
6qRJPa+l3Q9z583FovkTIEu4j97wtWB7t7J9r2Fg34G4+zYQaVnZSAr7gvnd
jSApp4ZhOzxQImTa+JxcRNotiwl/fPhTsQH5aTHwdH+Jhw5XsWnhBOgr0P3J
3t9qNWItoor5SifcMPq7N1ydn+DWxcOYPKgDlxNLK2lh1vH39Ytr4CDZ9yq6
GJli++33yC9nj41iPFrfiRo/5nP2cHl9pNteNCTjbMpuN9rvXVkEx53DIEv0
7db7P6h7UgPe4MCmedBQYHNKXRy6uAbzlyzGQFMNSofvdUtGitta6DYbiU/J
9Bq4PC8eh8YZYf7pF/Wqb3mSO1mXakLJfBeS2ftT7LXNqz3QlJRD28WPqH5i
MSuRHB+FfTOMKLnM23WfGmNxafki+6myKAfh/m/QrokSJFRa43lQBPVcai5t
o6q4bashwzB24CgcvnQH92+exmB9SYoLD7J9xCd7FoIdD6Bn1+Fw+vwDmdnZ
iA16h5HtGkJGqQFW3Q+q35hhpGPT+D6YdcwJ0ckZyEqNxVN7CygSeRr0mI6w
7Cq2Xopd0zpAQbMZPKJozVKeHYLRrVWg2XoUuY+3P+J8aCF0jAbjWzrNKxkF
cVg4oDks79Jr/MKcFER82g8t0lbtZoPwKSQS0bGJdZ+rYeZhE1kztl3rQtsZ
th/A5wbatxiIeIqGMxD04hq2zO5N+WCkFVUFuS2zCM47J0CnxSDc844Ge4ut
vCAVTw5bQY29TqnGbRk5/pg3uA+23/RAXGoWMpMjcXZJX9IXsmgx2A4Jwiat
GP9J5AQ9hZqCFGSaT0d21cWKVMwmfElCpiVcsrleQyRe6U3pjfrHJBAw02DV
WEJkTIIsmZu3/Xn7ruXxj2Eszdbd+njGOdTELAjB1ObqsHkWLlCGt8NaKBAu
pNJhOnLqUacX9vMondtp80PutdLw21Bl5yfpshX5fFMj/fs9GMjzcVsOinz3
UPkdJCTkcdg5hF07pBId5hVE2/mQy8soOUmq9cWbeF6ugfz4T+hqoEz9Zrbh
A7X/W5zshy6NVNBk2FJUZ30Bd7dT9kbWZBK+F9CNK4t9Tukf9lyevPcl5TfL
SwjB8zch1D5T/NtrUJeV+KmYBGZpJiy7GEJCnvC9FCHxKEU/MNBYAQYdFyG9
mhH98XwL1Akv0uk0EVXHX/NjPqKFlgwkpNUw40oo1a781BC4+8bVmacoJ/QV
DNQIb5LWwPyb4dT9uUnf8eprIhiEszxd0RZNJh0Bfy1LMv3RSYc8o2AEh1DO
GGMUYcXAtpT9aTXrDNK5SroU9mN1qT5Yf9mXW0bUi9NQIGOuekwCI+sduugZ
4GSIoK/h5IJBVBna406hkCqahXubx0JazRjOoZkC96Z8fYBGipI/FZPA9rPY
DG1N3qGOoz7Jgj9WZmFVOx16ndRlMeILGWCUZMPt+SvK51cQ/xZmZP3WefwO
7h5xFV6fXQQZMl8Mh6xAHqOqjf5orcjmVoqwvhXC519iYfloE0qGnZbdEOB6
Xy5NhCx5/6hlV+rXnsLv6ESN29pjEmQa9IdHNG+fPdrzAjTIWFbrPgdV0s8K
cYG+qhKOefDJhIyL+1Mb0/LotJbrSyt4t4zwAVKusj4cfJMou5vg/RIBURlE
XumY3dUIo1ffF/C9p79cRdlgCYlGcI+vORfSXu2k3qMy8Ain338PKvPCsIWs
65Q4PsGRW1xE+MSZSPx8G8M66nM4rhZufc2s7WYBVGT6YXQjafSxeywwF9O+
3YGBkjQ02k5ALjUAyuEwW5+qy5wjPtz7Yj6chiaZJ0Pmn+BeY+RHo6+JFuV3
bml1BXmV7HzFKXjh7ociMg8v95aBTIu5SCznNag40Rl2F5zrUWMWIq8toOoh
1/csuDt5RV/RW4m0Xb4/QrgXmbiwuBl178/EJFTkRKIr2+8gIiZBta0F/LJ5
GrrIfwc0yVq4odkYJHOMIbM8FaPb6mD6hTA+nw8L7/dPo9ctupMQVlzHoGFV
4LP9MOj1toZAlhpGCiaYkDkqrYTdjoH0tZIAmGtIkDVdM/im8rTWpimmkFTU
g6N/GrcONiMNoddyqkCsQfi9bZh0MYq315F4Cbqknj8Tk8DKeA4TKWn0Ox/J
N55YOLtjHUL5FSmpax+Nmtw2xv0k5Mha0fqCp0C5jOI0DDVTF+S2zDJcse6D
loNtBHKIMDPd0UGOnjeHXGLqVW8x/v1g85qr25bg8J13vPlYkYYF7PwbEjo4
E1E1QP86bqtrNgxJ/DGeZZGw1KX3iP4IoH1r4deWQlpGHZPmLcWqVau4fwss
h9M+QplmeJZZd6UKYr2wznoJXoWkca+VRt6lcu9JGM1BAh/BzApzhrFSTW5b
+uMUGlA2pSt+CNmzibqzmtbFvY4K6idWJT7t6E/bcZUhiCTP+t5bAUVizyzW
3qwpurxv6CNP71VanftB6aCKlNcwot7dHK5ZNd/9K9y2Ijca5s2Jbldtiy/Z
1Z9iIvJ0X8p/3WP9hxr8uzwrFN2aqkJCSg2rP9O8pCjBG6105YguH4Dkn9wm
KojyhJEm4cUNRyCl2rMVSa/IeJGE6cDxAmNg5XJrNNaWpcbLgPPfaV3NLMa6
IR3JNSXYuAn6Fm9t6k7Zq0WHeLZVOLetxOc1ppBSaIb5tqsE3mlp3pq2V3Lm
8C1gUbZnmLE89FqPRmK1eOVfibcVyW0ZedjTQ496/wiH6rG4DHzY0ZFaE009
6l/DT1QU7QEdJSJfqQawD6BtDDPvOzoqkf6SMMT9VEHbbj+H7RNRgM09X4Hr
YW47qZy03SZvrV976sFtNSYIniXLC3uFRmoykDQajyrm9vLoOMhIqGLykpUC
/bFwKM3DFBo0g3cK3YMl/tupea1Nnk+qFpaTEXIfBgqS6DhukeBYsh5DtYuy
k08jarSj+NtZKLB/1xyLsJrU90+BWV6AV/uGUty6QbuhSC4UtRJkoSQrBAu6
0ntBkzbfqtc73h63hqS8Dm56JQiWxijDd6/X8AmtitVhkfW6E2xW7ERAKq+h
sR/PQovMk66Tt/DqXRSP4S11Kb/ttRoTvgR3hhNbIimPATbnKT8x/b5SRCTU
74xkZc4P7F+zAve/8uUYLgpAPxVaD77PqJLTX8dte1Q7S8Yq9IKZMuG8zbsi
MpfWirlvl0FFShHDF9gKjKklE7tw9trkcSFQdIw0IzcUvQxUYdS+j0AZq1at
RCdjRcov03njXVoOrHI8OmmHTWfdyRqCN9PtprUhnFALl99X8TwWVo1rCikZ
Fcw55ML1MzMKE+Adnv+nuC1yXqEN4ZUyZE1/6zMvh0haXCxy+UVZHokRutW5
LRO7Z5oR/aoOx8BsgWJZZTXjbcvzYtDXWAmN247BSn7ZrLRGW2V6zs7Yda9+
9RbjP4WS7Fg8u/kHdmy2hZmqLLV/eCK0yij8hdy2ep6EilhY6dNj9ZRfAcUJ
L8wfCEkVI+w5eRE3btyo+XfzPkLyfuaMAhNJIZ9w4ag9NiweQ/tqDGYijs/s
ZoW51MJtT3O4bS9ECLFvXG7b5xiqZ4gtCzsFbXa8gmxDvE8pwe0ltC6escOp
ZkGsIlwZRMeIdpt6ltJJPG5rirf5NR/5FW5bmhGCLobyxF53QXBBtXNZzDwc
6aJA1WHo0eCaMSiVOVhhbkL9brTyM8V9ixJ9aG7bcAg35qq+4HJbgzHIrvZb
/IvDFM8fvXir8DFw4yae+nHiZERw2zt2PSl7tfAgT+ZCuW1lGmyayEOyUX+c
F/o+8nfLEYlkMlREnoQuWWM1N1+J6sPwr+S2Y59UiyFhZGBzK3ruLLwRVYPb
skoTYKGnRP3ed28gJStR3Pbg3AFCuW34633U3kUHi/X1a099uG21PAkFkW+g
r84eC2ORQV0pxcHhmoSXm+LAZeH9ccvhEVI5Y7iK2+o2tkRqtWH9/c4UMuel
MGVXLfqE/PlH1fSFloZdo9fBUp3gU1Cvpv8UKglPHNRCBTINOyM4Q0RwelU7
nu2HEhm37WbvqVf5O626QFrdCB5hufWuE6uyGCGfnHHywC4smTmU2ifrbLmZ
+zuP2zbCfSETPi/oEpo3kKfmrlHXsTjz8ONPxVDwIy3qK26cOYgt6+ZBX5Y9
npribVrVivuv47bV8ySwiv3QQVUCKiadEZHDfn8FPOaTOSlpCLsLteiKG7fw
vcZZC0HkBL+Anoo0uo9aVOu4fPwhrIYeLs2Og4vDBezcsgnmplqEE2ri4tto
7u++d7ZTfma2bEz7T8dNt28ornZW5pe4LasUpxbROYAlFHQxftkefInJqRl7
IYzbVsZhrJE0ZFX18TFZ0FoJO0uWG/UIRvIS6GSxA9drkc0r3/DqbxbjPwx2
nuo3VzfDuFFrXH5L7CHXb/s34bbMcmwe1w0SSk3xIvLP5gNhoTQvCfvn9YXZ
QGuE5pTz/Lb/A26LvNdoTdosLdvo/9i7yrA4liWKBHd3JyFCAiHuIe7u7u7u
HuLuuXF3d1fiwT3B3XWBtfN6Z5YVFovn3Tvn+/jB7ExPT3d19enq6iq8jM/G
zk66tN1l7ukS6srBi9m0b69L+6VUm/8abhso5LZu8M0u9hSRhXGC38g7Gy18
K+tTwGdhbw9n2l+y2w2Km/wqbutDZFQwP/bfWoG9zJ/AbfmsMDRVFdifOyKk
nON4Gbd7Unv0lRvN+rPctiAc/fTpsTNwh4/sHMPNwKraWtTvzhOeUGuR/xtu
y0/DjCqCMuzxJLH8PJylc1s+XnnUpDnQpagK1b8I+cHHaF0hT7jtj4YpKAmk
32e0rwVFo9rwTSo/d0rOl4cw0KqEqoOXV6RwjG9nAgUtC9wNKD66SgCfh2wy
lse2qYUmE/cgJpsjstt+C7cVtPfXu5tho64iOodl1mY+vqRVPOJbYXY8Ds/u
BOcm/fAqmkWW/UV227+E2/JzcaAuLd+Hv3z/uf1Yz9MwUJZD87GbKnQ/j8OC
15U1qGJfB9tv+1L+NbTdVprbCvog6PoSWGori3y1W4zdjgyJs4PfxW0FJRck
YkufKlCppCC0T2tj6Zn30jGBSuK2WU9Qg3BVZSKPr+PL57aJnzZTZyXcx5/9
uTlUGPwrUZgWhsntasGgWie8Ffr642/jtnw2VvYma0N5NYy5HFTKi/goyC9/
vovxPIX6dvpoQMZ1itAZ8bdy27S7cFQQ7OG0QWguB2emOFL31h20ooTacvFq
Pm0TbTz6HOV/9yu4rSCvaFMnbchp1YBn8fmGl4Ud9Wm7rUP7rciRiR3DwoGe
ztReWc11gZQ94Vdx28DTy6h6mHRbj9KsH7yCfNp/8mfYbfMj0EGLfIe8ATb5
lMYzeGCzeci825ey/ZvX6IF41u/zSZC126ZiWXX6rLj72BOycwAvEx5uWlR/
dT7w5f/MbpuFBbUUKd+TDaWdYePzweHS7V+W3fbd9oaUDHSYcqrUuHxsrqw+
yfPeRe/x6Pcod73zXeAVYF4nN2g6NkZEZvk5OliRz2CorYQ2U3dXoHA+pnez
ofzgN9wNKPde/6sr4KCriv5rb4nWtN/HbWlkxvhgz4KBMFWj42VYN5laoRwx
OSG30NHZAkZtliI8U/jA38ZtiUY61VKJ+q5eu0rY3xKCyy67TxPeX4Shqjx0
G45C8YzLReAVFtIyy8vAisENoalXHXeDxA1fMrcFHTsl5C3WTOgMRQX6LJxz
59lIFOqr7+W2dNlseD04hf6N7Sn/NQV1Qww/Giy2hZTEbbOfo6aK4JoubgZI
a8aSuG2y714YkLWRY8vRpeZT4rC5TPxnBhReHZtJnUtvJzl2CbcdVQK3jT3y
ndzW5ge5LdEUtxd0o/3pas9EeLbsnBPjeRydplwv51wnF/N7OJHxoosDT8Xj
Pj/0DLR/E7fNer0UWkSn2Iy4RdXV6/JcaBCuq0E4UUpxoyg/D8faaZC208CC
+0nF/G1L4bbPv53b8tkZGNuEcOxKFjgXXZw18hBxqAM1n+vZNEVIejHdzMnA
jMaOkFexwlFh4/0qbpv2/jBlG5VTccIpP9l9r4K0EIztMBoBAv/Xb+a2u2W5
LeH1u5rSNs5q/fchq3hgKKLPfc/OwbJDH8CNPgxz8ryyUWU8D5fumN/KbYmM
v1nfmIqhZdN4sDguWlG5+THoZ64BeTUnXBbGrPg93NYfbj/MbTk4NK4K1Xct
x25DoYzDBQeBd7Zg5y0v6t+yuO3Xh4ugRfSeYa3OiChBn+QnvMUcj0My15Me
rqTqqt7i554lKwKPzOl9G5ihZueFyKmAcSqWrNV1VCph8UmvCpW/ZzIdj8+i
6yqZc6EC2Xl7/RTepXOJTHxEK21Bf9ngZqy4fb6Z2xIddmnKFERInKGK8DyJ
6vqKlP/polclKDFJ8PLhQeVk1sTcxxI+wqVx2wkOf4jb8hCwuS7l525ddyRi
c4vLFA/JXiewZH1J+3Ni5EW+hI2eMhXfbcvbJBmOzCtIw8oxU/EqjYuEq8Mp
329z951SNoeF/YtzWx6On78o5pl8LqIeb0c1Q1UoaFnhntCGz405JOa2FZzg
Bee4Dp3+KFG/dBye3oaa01QNeyOmaECXxG258ehtX4mKUbTozHupckvitjlx
L1FdVwGK+tVwM1hW/wvsx0vmrUbi94dPZvAvwtkljamxW3vEOrFPeVYQmmgL
bHX62OQnJm/JZ90pvWHXYjWKh5wsHekYaU9z22Ovk6R+4SRdgiXRk4Y12iBW
cnAWfkE/E5rbbn9H675c34OUn6pgT7rt+J1SvC0//CZaNeyCT+X622ZhQDXy
XYoaWH3NW3Q16dlmSifJmfbHV4mCU4Kuw0ZNDvr1e0idy8wPKOK2jRBSggGx
iNsqNdwkvfbmsXC4fw3I69fG81S6rvlJPqhnQZ/FmvokQ2q8ctM+wI3wVKNW
85Em/DRJbvu0BKIU++oUdJXloFV/tKzNuFRw8GhBW1Dn5B8lyfzKL4hEe0c1
yCvpY+ezMKnfCpIJZ7HWgFP7aaJz3ZLctmKnt8WQ5LYy02R+BIab0XJh4tIJ
fili2eQXxGFpr4ZYePer6CzZ7NalnCWbX5eS+dES3DbiwX6K2+o0mSrRbnyk
P55CcTgFJR1MPvBC4iwdH18ebkGVRlMRLpgH+Nno4apL5FwRbtPPSa2xknyu
wUJDHoo2nWX4emngc1kY27oytb+3/k2s9I+S3PaK7OohN/4tXEyUIa9uh8vh
0k6h2SH3YKCmiHojNom+hZdRHrdVwfgzP8ZtwQpGQ0pu9bDVT3LQ8PFx40Dq
W7S7HJWKf5EZ8pA6SyZn1hmJQvXge30tNEg/KShrY8COl1JxIHyvesChaneE
CmMZsj7R3NZIwG2LLfTyEr3gYq5CxfOyaLsC0RKcJiv8JZpYGOPEu0QUx8cd
gjP7Sui9/7VorKZ4X8fQHl2x8PArWb5dCgT5Vkoyy2YFHYWVpgMO+UhwPj4P
8QmpMuc4BZzlzPxmUK01FZEV5CJxjzZSdjU5eWW0mbAHBUVBIniF8DwyA11H
eFDxVlgBh6nYMXJyujjoK3a+8L40nYpd69JrnrgWIm5rirPFBzwZF7vq6+L8
Z8kfeAjc25joXDUse1O2Y4eA4/RrZEHKVkavEwGiNi+MvgQ7yn/UGo/jxQ15
ZLoTJUsTt96vUHsIwMkMR/0qRAerO+FZhrT83987hdIVdaftka5X7hvUJNxa
w742QoSxtthJd+GkLogPq4xmM09Q8SKKkOh/AzXtGuNBVDk+1OxULKxHj201
k+q4FZAsfif57eCYBhiz+4FgtwiPx9I83thlOpJFTZCPsS3J85V0sfdJka7m
YvKAAZDeeuJj+7i2UNC2xsOi2DLJZ2BKyjN0bI0ImQ26ksGLv4Dug4qdJ+Um
YKC9IlRNBiK2aNwVBKOtIc1t74YVzYp87BLGL1evPhShEusfLisZHVwNyLxo
hEMBtI4T8PqBDawp27imWWs8jxDrNsG5uHmt7DD3n1cVqjeDfz9eH58JZYGO
ULXAyEXrsH7tYowYPARdrJQpHtlg5BqsXX+UsnuwfNbAUFEQS74K1u8/hg1L
5+OwTznrbhRgWRdLSn5bDl2A44d3YtzM3YgnCjTlxQLKXqpm6YIPceKBx4q8
DWcVmsMsuCDM/8rPx8UlXSj+QeV2cGqIXv0Hokf7ptDRq4z1Fz+U8n5JcLCo
J32+XbNySyzfsBmr5o/B8BG9YSTQ45UsMXXtFqw9FUDu5CP86XrKRqFi2wzB
WUXKg4eIy5Pos9JEl9/7Kqubi7itnJIVFh26h0wy4fE5OXh5Zg1M9cwxa99D
ibt5iHq4HS6WmlAyaYnrXnT8eT4nC0cW9ISmYxvc9RfPsSkfjwrPceth0+sU
mbVrFuEDFppKkFOzxvRtR7Fv/Tys2v+oXP+kwqirqKUtB7NRt0o85+FzfSuq
6ylAu2Yv3POnzzdz8xJwZG4n2Lp1wZ1A8dmURK9LsNJSoOaKazHftnEb8+Yk
jNXIsxrOuFX8cLvg7Pab3XAwoH0k5LRt0aZbHwzu2w3VzEzQafou5Ahtq9z8
ZPSrZ0XxkC6HxXMieDlY2YWOAdZ5zj+i6+l+16GnTN6rZodZ249ir8dsrD/6
HDxy/5LetVAUL9+hjjsGDh2Cjk1rwdCmKa77ifvm49kVMKdi0RDeMHw+Tp6/
jJMHNqJ/q/pQF+Q9IeuXtsPn4J53+T6e3PxEdBHodlJW971vpXgNNycS/Rzo
2K3O0+5AZvtQEI/j6ELYa8tDt95IvP6aKnwuGhtGNYd144HwjBTLbW7EY5iq
CnJXGGCTt+QEyMWsbtUoPdBoyVUJGeLh5b7+lC3f2n10CZyrBHCSsbgm7bdd
q/d8nDiyG/OW70Quj4tzU9pS1xUcJiE8V8wtIp4dgL4KaTfN2ngs3NTgZEdj
bueq9FpUoRKq1GmBfgMHobN7bdhWbY5zfpnCM+QcBB/uQdVR06QOvJKKbbAQ
Lndn/UjR+RpDG2d06zMQfbq1gb2NDSYdfFfiONg6qiWU9R3wMFRsL1/c200o
H8qYd8qn3KbgJVyDE9FvCpUM0X/OVvjEZIPPZ8Pv8XF0rF0L6y9/lBjXfPjs
dqfs8AZVmmLd8QdIZXGp+PWXNk9E09Yj8D6h/DNnInCzcHp2W2hWouPQGDjU
RvuOHdCoVmXY1u+L58KYhbyMj2hnRPtPOjTojW07tmDG+FEYOKAvtS+k49AA
u3dvwt33X8BK+Aw3Kpa0OkZfj5H2ySfcdmdtedQesEIUC0ewT3RiuA2smkxG
VHnqgZePDQPqCcd7LcxZsxGrlszCsFFjUFePzlcyfP46bNpxjdpLvL21H5Xn
wLZhLxw9eQxzJs/C03J0EJ/oiiGUrlBG43EbcPTgVsyYvQ5JLDZOLOpMvdu0
41xkiASdj8xPW2BC2lDZ2AmvIoUci8jcwTld6LWD4Jkq9dB70FAyRzWGlakj
Nt0PLTvfphC5wRdQ35reL5LTMEOLjj0wuH9vuDlawa3PIkRSiyI+4q6Mhqa8
YJ2ngUHTV2CzxyIMGDAUzd0cqDWb+8j52Lb7KLLYbIxrY4Z6o/YhhSXsHX4e
ZnVxRuUOc0Q+CWB5o76hIhQ1DDBrwwHsWb8E04/4lTm+BdzWRssWG+9/Edk2
WNH30MjUECOOiX0S2DFXUJXIvLySOv55LtZ/GUH30NyG1gu2Dfti15EzuHD6
MOYM7QgzPTVKRq2a9sGOy4J40nxEPtiKqpTNXxATxRJtu/bBgL7dUdPBGq3G
7UFiuQF5GfxXwGMlYF3fGtDW0oSmlh4aDlhJzS9JtybCWFMT2sZ2+OdVUWwP
NlYOaAQtTQ1oaRti1j8vKuTbEvH8EAx0tKBByrOvOxChqfm4sX04jPX1oV/0
Z+2CHdcDkPx8BZztzEXXDSydMPFAID1GuHm4v20sbPW1oaEhqIMOnBoOhldi
xS2UWSEP0NpaB5rkG7SN7DB5/yvkc3NwsK8dNEmZ9g37ISY3BZsm94ajZP3M
nLH02FUcGNsGFsbi6xbV6mL8ol1Ik5gIRT4JjVZh1YgWVNsK7jWza4BTH+JK
rlfUO4xo7gAdbV3UqNcEzlbGcB/lIYoZK+D2d9eMQhVL8buNrezRc9h8+KdL
zCY8Fu4uaQ9dqj/10XX+2fLjb9MvwPnl7YmebAzfrJI1cE7cBwxp6ghtHWPU
buKOqnY2aDNmPRIl9t/ObRgHOwOJdjOwQ+9JmxBfnusgmReOrxop9ayhsSP6
Ttkmcw4o7s1ptKxiSMmhpqYWDEwdsP2uv9imE/cS3Rs4iOugb45esw8gKzsG
07rWkrhuhvajVtG6nZeHm/NaQEfQbkS2ey67Kmo3fmES9k/tAGOBDBMZ0dbR
RYvBqxBbPHgsQZTnEbjaGFPypUHqZt9kCB56PoaztQl6TtuEr2XGdaLx8NhS
tKtjIVFPfdRq2hnrbkUjyfMwmtW0lWhfYzRp3x/HXyXKjMWkwPvoVNMU2rpm
qNOkOewtrNBn3kGJ89Fc+J7ZgJZ1HUXlmVk6Y/zmB0gJfY0RPRrBRKIOzQct
QGxhATaOay1RNwPUaNULdz7Hl/tdeV8vEA6kQ9pQE0auA/AuOgqr+zaFuUSf
29fqgAcJhbi0YRLsDSVk3cINpz2Fe6ykr/ZN7wJdbS2qLG0dfdQh3ClMaK8V
8Oh1A5vASKJcK5dmmLP5TLF8Y3x8uLASFga61NjX1NKGcc2uuOGTXLzqwtuz
0MNFB7X674OkC9WdDSPIuNWGpkoldJywt9x2EPi6LOtbB1oa6lBTVYWauiYM
dPXQdOAifC3B/pob9RANHQ2hoa4GVXK/ho4O9I2tMXPP/QqO7eLvL8D9nZNg
oyvWo/X7L0FMlvQgjXn7D6pa6hFZ1qTsB/seBYGdGY4uLtaULrfqsh53jq6D
q52BhDwaoHXvSXhSNOD5OTjQyhquLlVhaV8bwydNQ6+WdeDQbhaZByq27uWk
fsKwRhZUH2lpm6HvsgvIZHNxcVl7aJNrhqTPPgiDm7PiPqG1YPwRuTCwqIqL
n2PLKZ2qJJKeb4OTnjYlT5Xdx5K6JWLR0GYwlJB/a7dueBudiRvbhsNI4rph
5YY4+kwo//wCPNgxHhaGOsL66qBq61F4V0Lc8LKQFvQIXZ2NiI7TpPSIrp4J
5h95Vowbs7F7Ylvh3K0N166zEU+4a8CFFdAW6EZtU6y6Gky+jov5w5qjoUsV
Mr6aYOSEyehR3xJtRm9GejF1dH55X1F5neccLjceOS/xKlrUqIVqVoao16Yv
pk4ahsoWtlh88rWwPXJxYclwuFiYiWXExBGD5+8T7YWyM4IwskU16r2C9te1
csOOh8EY3LoqarYbhTt+0jacWO+raEz6WEuoY3WNnbHhyucyc/0y+I+C8IqU
+BjEJKRJxW1PiYtCXIp03niBH2BCdCQS0vMqxGuLyirMSkJUdJyU3+r3QpCr
PCoiHAmpWd91XpJbmIOYqCikZIrtHYI829GRUchgVcgKVSYk/W1zeWykJ8Ui
KiaByg9VNvjISI5HREQEEr+pfWXLSU+MQVR8KpXnpaLIi/+EjhYqWHzqY+k3
8bnISIrD168RSM6s+JriZ4PHyUd8TCSi45LA+mmHZvlIS4hBNBkHsueLBPnh
ExFJZCQlK6/snOnsXMSRMRJJ+ryA1I3HKUDGn8p5TvorNSEW4eFRSMv5FYef
vg2szBRERsWSPvvR/Jh85KUnIkLQH5k/MlYEpsFMxERGIi4pvYzc3TxEXxgO
c+ee+JxWTEeQNs5Oj8fpYbUxcd/7kh8vXntuAeIjQuHn64uAoFAkZLDK/AZ2
Xjq+BAfAx8cPIV+jkVP4o+1H9GhuBiLDvyI+pbTcXXzkZ6ciOipGFJdWgMKs
ZERFxVXQ/4IPNquAPivAyqbGRXxK5jfzEC6bhbioCCRliL28eORaNNGVxeWa
z86m9Htabvln8STBIt8VHklk84fblo8C0m5RRKYEcxT3O4vjk3k5OT6a0iO5
haWwTDK/pCZES8/d5LnUWCLPqeK5m83hUPXKz8lALFlTJqbllHyGkshyOlVe
eqlnLKXv55Cy6TyVWWQ9ECWQFda3tXtROQLdGx4Rjaw8NuWHk5GZU7qdm6zP
EmOjEBlL9D+bcbBlwOB3oMw4CX85WGHn0KbjCHgl/nkexIDB34L00AdwNXLA
8VeRJfzKR7z3TbTrOhMhJeRyYcCAAQMGDP7fESaRl6y0OC5/MyKfHUC9ur0Q
UIHY8QwY/NvBSX6D/u7uuBiQUqItK+PzcXToORPByf9vK1kGDBgwYMCgYniy
bgh9DsBqNCL+L33b+UjwvoH5q44hldnuYfAfBjcvBTvWrsNjf9mYCUXgF+Yh
jxknDBgwYMDgXwhebjRWDG0PayM96OnRf9XqtsPkJSdkclUxYMCAAQMGDBgw
YPBXg89FTlYWsor/ZZd9ToQBAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIAB
AwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBgwIABAwYMGDBg8HvA
K8hGRGggvD57ISA0CrlF+QqpHHpR8Pf1gpePH77Gpn1Xftx/K/icXERGJ5ee
U7AccFjZyGV/X4OyM+KQkFNSUDJBjs10xMfHIyMnn4nt8CvB5yEzIQJJmUz+
t58PHpIighASm/lN4ys/KwnRaX9XthVBfvGwQD94eXkjODwWhcJktVQ+1phw
+Hp7wdvXHzFJmf+98SrI/x0XjtTsP5TP+meDl4/IINKXGfkl/pyflYKwr0ky
+UP4vELERXxFekHFJYCbn4HIuOS/Qmb4PDZiI2OQ/+NppBkw+CkIe34EbtWb
Yez4UWjkqAMNLR3UbDsOaQVJWNi3OVoMmI51y2eirq02tHUNMGj1pe/mcv8O
8JEV+Qk7l45HDVMjmLov/o68ZXwkfjyN5s7O2O1Xdt6w/PQQDGxdH7Vr1xb/
ubrAytYdT1OKcVteFo7N7wMzY1u0bNUC9mY2GLrqEnL+2x3280E4iefV/ejf
2g3GejpYev7Ln67Rvw75IUfhoK0JLd0aeBJXTm57wgvCPK9hzvCOMDY0RJdd
T39LHcsHBwGXV6OteztMmzYaVSwNoamtiypdVyI45A1Gt62FXmPnYdXCsTDR
04auvhmG7HqLwr+BrFDgI+rKfDRwqy2tf9zqYtvVYBSkvES3JnWkf6vthobu
g/E6Vax0Uj7tRot6buJ76jSFx9tUPL+wE71buMCIfPumWyXlQf5/Ax9hp6ZD
R1MDutUmIaaIrvMLEfDsAqYPbA0rQ33YNlsrjJXOR35yEA6tm4kGlU2gp22P
U1/K4/h8pH15hw2zBsGSzD9Og1bhT4Zd52VH4eTmOWhI6q9r3hE+TBpMBn8a
ZL0ceHk56jboiKBMDnWpIOMLJrS0gZycEmxttNBr6RkUmRXjPl9GTS05yOm2
hPd/WX65LLy+dw3Lx3Sk8papN5hbYW7LK8zB6+uHMb5nU1QS5DyT08bmMhuT
g9eb2kGFulfyTwH1p5+E5IzPzonFjM7VYFazOz7G02VmRrxEhyqGqN1nIVLZ
DMH9WeDlx+D6ya1oZED3x7wzoX+6Sv865Pruh7UaaV+tangQVbZdnJ0Zh6sX
TqNXAzvSH4povfXhb6plWeDB8/gsmLiNhX8qzVdYsW8wqK4J5InMaOlaoP/u
Nyjg0fcmvDkIZ2NlaBrXQUD635Qkho/wt2dRV5uWdQ0bV7wKS4PQ9IzCnETs
m9pCqM8qoe32d8iT2dzjIzPmHfraVoKyQ1fc8opGfnYErhzfhLp6dLke1yN+
94f9AvDhf2Qy1Mn3aDqNRLgwnyUnPYjI5xnMbWNFfath3RXIEHQxLx/v717H
8c3ToEW1nzGOhZUt63xuPjwfXMOiEa2hQJ4x77nkD3JbgY3mAfYsHkbPS1ot
4fVf5gYM/gpwyHqrbTVDNB/oIdJT9A8Z2DmpHcWfzvtmSj1TEPsKlx59/iv2
QP40Iu9s/2Zumx7th4efiV6PfQTLCnBbTrInGugYYf/NtwgKChL/BYchK58j
cScP7/Z1hzKZ16ecDpPoHzIvnR4FRXK96aaP+E73h38VuFk+uHD29TfJMC83
DId33i1mT8vF+iaqDLclYCW+xLMPET+93OzkGCTklGOzlcCRmT3+Gm7Lz3iP
ltryqL/jk9T1wuxYLG9mCHmzDggv9mlRXo9x8n7wX+j3xUPowbZQkpeDokE1
vI7Olvo168tT2OkqUWPBacrjku3OvBRMraqNGfck7bM5WFxf5Zdx29yEYJz/
8PWnl1s2+EiN+YrsQlnGmXyhizS3LULOZ9SuILctQsC1TVBS+P3cNj/2HZae
jZDau80PuwQ1htsy+EuQ5H8JlmrycB+ysZiPQQ5mNtIi48wCrxIrPq/81xB1
99u5rQi5vqhTAW77YNt42HTdiYxyJjtO8ivUJ/OonHZzvMuU7k1+9ke4C2wj
qvZ4HP3f9gvls7OwdXAD9Jl37Ru4LR+n5vdAnX6HkC/1UB42NFf7z3NbbvYX
TKprhs1X/f50VXBsVs+/hNuSNeXZKVCQk0eTfd5Sv7BTvOFsqA6teqOIBP3/
gJMTgiZWhIfKK6PHgffS44ebjb3d7KmxoKJXCx8TZffVC8JOoLJDQ4SkS+qg
XCxpqPpruC03HbuHuGHi2Q8/t9wfQPr1niVz2zxf1Jf/Nm4beH0LlH87t2Vj
18QWqLMuUJrbfrkMDYbbMvjl4CM/NwupKWnIK2HtWITQh0soeZThtixvtNAV
jDN7vCvmz8nncZCTmY7sglL2t/k85GalIzUzV8ZXvngdWdkZSE7NALvsG78D
POSRstOzWNL26GLvz8sVn7MqyMui7i+vJuz8HKSlZ5Fv4/8gt/VD3fK4LScZ
g+vpw8i1LaYs2YxrD14gODq9RD3mf2o+VRe1pquRI/MReVjUQpv6fcnJj99U
TR47H+lpacgtKFt78jj5yEhPR35ZHJzPFZ1RFJybyMzKlfHbLiBym/EDuY15
nEKkp6Ygr4Aj8xu/MBO3d4yBrrIcelSQ2wrOCr4/Ox8W6nJw6Vs+t+VzCkg7
pJF2KNv/g8tmUfXMyv2z52e4hXlET6QiJ7+sehB9kpOJrLxCmTbj5Sdhx8TW
kFNQxsbv4LYC+UpLywCn9IFK2pSFwtJ0BBmHeUTfZOTQY6g8bssVvC85GVms
H2h3ogOzM9KQmp5Zhu7i4d6cTqQustw23e8WjDQUodd0HIqzGIH8ZhP9WlCK
/xCfendq+WNEkDc8U1DHrHL08DeAz8GKvnUpeZe3Ho4vLOmCcz+thp6Anymq
Ys0VH5n63FrQGa7dViJPSpXIclt6DJE2KKfiPOFYY5XUVrw8nF3ej5SrgjFn
/gy35bByZezvv5bb8ql5Ly0rr4x5j74vP4fMvSnpKCxHT0mCV5CF2xsGQ5vU
360C3FYwV6amZYJbdmXAKRDooBSig2R1NgMGRWDFfcKMHo1gam4LWysT6BuY
oN/cfUiTGEe5H1fBtbIjrE00KL8vVS09ODg6wrHoz94UlahxpghzWwfRdXtb
KxgZGkJfTw/jrsTL6NaU0Mfo19gBxibGMNDTh7VbB5x4/lWGv+TEeWN8RxcY
6OtBR1cPls6tcPxVzE/wc+Ah/MVRuNesgnrNWsLZ0gj2dTrhSlCO1F1Rn+9g
Su/mMG20CpmcHNzdMAIOxnrQ0zNG42FbkFTCtMcvTMPZJQNgb2oCG3srmDp3
wcFtq34ht+Uj6eZoqMmLfWwVFJWgoaWLIR6XZdp03zR6r6vytDMlnvPbN7ka
9XvHBYcrVj9+AZ4dmIMqRIaMTUyJHBmh3ag1+JItXTovJwp7ZvWBfY16aNG4
NgyMTNBrwXHkSnUmH/E+9zC+cwO0OeCDzLDHaGVjQNrbCHPOhVL9zs2Owvph
jeHasBU6ujdE5brt0WPUamRUrLbgFmTixMrhqFa5Otq1bkRk2wQtRqxFQm6R
vuRi94Q2UFEU+gzqGFMy32DYRhl+IfF1uLx6AFSFzyir68OePOPWbSboHpPm
tpnBF+HubAM9XV0YGFpi8YnXJbRrPjwPzUI1GxPokvv09A3QY/Y+5FZgikn5
cA4Nq4nHac2Wo+CXXoh3+8ahZtXKouuuzQfgZQpdYPDjf+BcWXC9MgZueAvx
7MHF+fXjYGugT9VD38QeA1deQUYxpxV+fjSmda2PWk3bo12j6nBt1hF92o9F
bCHt0zSxiT21LyrgcPqmltR7Wi68h3J3e3j5eHNkNmo7u6Br905wquaKrv1G
4cJXCR8odgZu7F0IZzNTnPLLkSmiINEL07vXg7GpNWwsjOHabzVWju9WMrfl
5uPurpmoYWVAvleHtLs5eswievGbDnXzkfzuONrVcoCJtT0MDQ1g5VQPK858
hOTR9hfHlpF2cIChNi0bSvpWYt1K/mwsTKFAxrW8spaU3nWwNafK1DO2xWnP
6OINhphXJ9GxrgMMzIgeNjCAbZ1euBOQJFPL7ND7GNjcmehpXegSXW3r1g2P
QlO/4TtLR+TlWUJ9pIg1d2Ol2ibx6ggoCXWVVb8tUjLAK0hDz3rmmHkrrpie
l+a2iZ9PorGTlXAMWWHtJdm1OC83DkcWDUKVGm5o2awuDI2M0HnaHtF5WX5h
Mrb2qQzlSvKUXKobW1LtW62NB1JLo09EHq8Q/e5U1B9Ej4xdfweFhbGY17OR
uP8qV0Pn6acgUIOC9fm2qd3o61Ua4GYYrRU4GeE4sGQkLM2awytb+mt/FbfN
SQvF9C4u1NysS+belsM9kFTCIMxLCcL0HnWFc68uLKo3x8GnkeWfDefl4siU
5lBVkKdlWseKkt3mfWcjo5AvzW3JOvPBtgmoYirQLXowr9kRt0Jlxy+fnYlL
q0eiirlQBxlYYviqs+WuaRj818BF1IMtqGlrj9HbbiKNxSHr3zx8vr0LtSzU
oFOlLW75JVJ38nJj4evtjUube0FZsAZrPwmfvbzh7S38e30I9grCcfbkk+j6
u6fnUFed1l0jb6aIX83n4/7eWWQObYTjj/zAIrLJyQ5HR2c9KGmZYMWdIv9P
PkLv70brBu44ce89YhPi4fPsHBrZ6UNZxxLrHob/EL+9tmkUVFX0sf1uMFUO
Pz8eo1vYEt1WB68jsyA4lxV67zimdKVtD3LW/TBzTG+MnrMCGzyWoX11Xep6
jwVnpVs2MwBT2zvDocsieMdmUvaL6I830M3F6Jdy24zgFzhz9CA2rlmKgZ0a
w1C9iOeqotmIzYS3iZXjnF6OlH9083V3Snzd6WVtqHWMTb8V5detMAHzerih
/uAV8I7JJN3LRcyjxTAgHM/QpS8CU+j68vLC0KeWKazrDEOsgEOSdgl/6AEz
FQW0mXKcigXDTgvD3vWLUNVMg6q767LdmDykH3o3r0LNg01HnwSbl435narC
dfJ5ZArsuvxCBN32gJ1jF8RWYLONk+6HUQ0toeo0AgHptEL/+mgr9OQqofaY
w8jj0+0ZFeKLAxPsqHq0Gr4dXkSm/b/IrtEk+yD+ix/uLKlK+xG2WYH3ZJz4
hUQJnxFz21a9x6Jp60FYtXELlk8bAm1VRSjoVMP5KIkJhpuO9SPao8vcA/AO
i0FcuD8OziR8m8y/9m0mIzyzPEbIQ8itJTBQkkMl80b4UuSHSubYZ9sG0+cN
5V3xUWoC5yJ4ZwNYtJkumtfzkwMwqW0VjFt9DEFR8YgJ/YwVw5pR39F49A4U
LV8Kkz6jk50qxm69I7Q/cfBozxQoqTRCCFm88ApzEeTnhfHtjMl7lTBz6yVK
TwRGlxfHik/WTWOgbtsXnxLoXfnsyNfoV8sGGz4mUd/59dExzB7YjNJPgnod
8c6Wej6dcKBGDo4Ysu4yUvLYpC7ZeH1uDSpTPp/S3JaXG4FVQ1pj2OL98P4S
g8SoQGyZ2JY691Sj8xJE5lVA65C13pkVA6CmWROHHwdS7cHNjceRpQPItyui
Qb9liMijGy47JYa0wyes69OAlps5Z8S6lfw9PrUROspkfVWzJ96Jrnvh3fPL
aGJO6q+sT7itBG/kZuPamsGo2rQPLr8Jo+ywWWG3UF2FtI12FWy/HyFsbx4C
b6xB3dZDcPG5N5KSE+F5dRucNcm6WK869j758TgE/Bw/dDdVoL6r+dit4uuE
T86oZ4oqjs60jlKtiosRYiNBRvAZOFbthxBW8bYWc9vOfUeiRfuhWLtpKxZP
7AvVSgpQ1HfB1ViJcVEYhRENrGHg2B2hZF0nsAfHe+6ArZo86g3dh2xKDeUh
2Ncb07rVo85E915/mmpjn6C4sv2YiR5a3pu2AdSesk8kw+z0EEyopU5drz/q
AgoliCCfHYeJVTQx7pQXuLwcPD2xA4NbVhHq6Vr4kPXrua1Bg1boXs8Z3QaO
wpghPWGtTvNPs/pDEJgsnlvCnx5Ga7fGOHjDEzFk7g30vA53JyMoaRpj+fWA
cvYBChAZ8AEb3S2osqtOv4rPpE0DwqIoeRRxW3VXzJg+EH3Hz8WmLRswuWdt
Si+Z1x2EJJb4g3lZwZjdqzXGbzyLgIg4xIZ9xsoBdchYUoFb/y1I+IY4aAz+
3ciLfoXKmsqw6TZfxmbyZMsYiteo1JqMaAmZ8bs4FqrkerP+q6X3MLKeohpl
q7LE60SJeZKTjDm29Fwz5m666HJ+9FVU0VLBlCsStleicw5MaEetmy2GnINA
y3HzE9GpphEG7PGXWCfy8GARbXOUMx+BiO92B83D0LrakFczweVPiaKrx2f3
IuNFA6tvi/dL019tpN+naIItD8TnDGLfH4UxmXMMGvcXtyE3FwcH14SiSSME
FavbxxNLf61PQjGkh3sSLmlJ6TM5RQ0svVh0RoWDse5G1JzeeXvJe7GX1vak
ZECv5ayyX8LLw63x9lB2GoxoCUHi89LQuYoG5FVMceJzHHUt48UUSp85NZ6K
LKGYcPPj0NJKCfo1WiG2KPYu4bw7hzan2kpRvxlexhcS8SjA05vXEZxOHky+
CjsFRfS+mCChX3lYM3MGwirg7h11YyVVdiXXxcgqusgKQnsyp8upNMQHkcmA
h4fLq9Prlwr72/IRvs+NeqYsn4R6/ddIyEw2mQNs6GdWeAn3C7nw39MDBvWG
Q8qCwY1BVxtF0p/qWHfdt9zacLJj0aaGPvkuG8IdJErKD0JXM1KOnAYuBGSJ
r5P59lh7Xcw/4in6nosre0HRbioSJNo2O/Cq0Oamj42faWkOvbqB4m3bb4vj
m/HzIzDYsT78RD7dXCzta/mNPgkZmFtTEcpNtiNLgid8vLwJq17HS3xTADro
y3Jbdpo/WhuowrrLfBTfYvEY3kSG295fNxiGldshIltibk19idqV6LJnlesr
zUP83dnQImtH933F9qE4KVhVl+ZmzaZeFPMeov9OT2hD86St0nviCe8uQF9F
HtoNRhfzt2VhdCNdituefRMnuhp0eTnRa0Y4+TZG6t6jvc2oc/IdJh+j+EVB
zAO4aOhj/3PJs1M83FvqRo396p2n/wT/BB5urmxKvbeSVTtECmUoPegezPUs
cOLuORgo0O3aZu5dIZcsxL1pjmi76nIJ5Ym5bbPR2yXGUDpW1NGjOfQGP1Gb
531YQMUTMHMaKmGXzESPysrQtKyFAIl13frh7t/skxB4dR3VVtqNZ0GSlqa+
mAltwj2diP7MlNjb4CY/QRMnstZLE08O+UEHYfAbua2Cdi1cChfH0mXH3oKr
gRK1duu45RHddvwc9Ktvis6bfaR82p55DKTnQrOB+FJyOF4xCL8915P2qS7V
J4Fw0/EH3ovkjJ0TjZaOGoTzOuBupFAv8dk4P80dDi1GIUeyLRNvC3mHHLY9
KL5vweC/iqf/TKDOsA5bI6s/2EnP4aIskBllzLskXrt/D7edZ1eM2/Iysau1
LuTNe+FLsSHJSgrC2ePH8TGK3mdMfjYbOmQO7z1nFTw8PIR/a7FwaEPhOlcD
pwK/93QFD3cOLMWgSWsQlSme8U7N7UN99+jjnqJruZ9oP1k504EIl5gcsyLI
+kBXAaqVOyFT2B6Z4c/hZKCM6l1nynChyF/tb1vSV7KS4DGkMb2v3nipsJ4c
jGttTOmybjtK5raX1/eldLZu85lllp8VeAN6RF92X3ZK5rdgzzs4dv4u0oV+
UZzMAMwZNQzbr/uJdBk3Px6tbJWhblcPYWnCxiXz/Inx9DxfY9VLmf0vfsp1
OBKeoWnbHPcCxXusX3x8kVoBu21hsi8WjeqPdRc+ivV2fgi6UDGLbHAttkiG
fx23nXdakh9x8Wkl3Uf6Xa5QPg/crDC0s9OFTd12ErIv+FuDJpXVqTVgg0Xn
y68TmReuz2pN2egdp9yX4HY87JtQg3rniA3XxTWMeAJL9WrUeoJCQRA6WyhB
p+UUrJGox9pl02AotJE2mf2M8l0Ivb6Z+t+66Qi8iy8a3FxEPLyMZFFDfAe3
5Wdgfm1lwucNMPfIc9E35yVF4m2cxEhiR2GghSy3fXt6ETWnj996X6boozJx
ElgYXNcABg5dsWKtRLuvWYwmunTZ7cbuKbu6BYkY5WZBOKcDbqbK9lDax3UU
n9O0bYLQIo7zndx2TOPi3JaNGR1soWfZBuHFglTnJPjh5LEz8I2h2+b22mFQ
JNx2/LwVUjI2fTgdb1DJpg2SfsJ+b+yHszBWUyA8RhUDL8RS/fd0T38Yd9hB
1rjZONCZ5qRGtTojPpdDxXqpq6uDU29iSyhNzG3XXouQuM7Bu3m0PNsPvCXi
vLzcUCweNxwe5z5LxHzJQi8nFagYO+BdtLhFv4fbcjN80UKDyEUlU+zyE5fF
yQtFI1NFKBk5wzOmSBb58NwyBA2GHJTKV8COvgir38htTbsukrFnnZ3bjbYl
mA/AV1Ic6+Ni6CuqofvsVVKysWhkC+Hcq44DPuXMYhXhtpot4CUh1Hx2NoY1
syOyYoB9frRfDDsrEu6OWrCv0w9rpMbkAtTWosfksDWXKtQGDP7t4GDXcFtK
JqbsfCr7Mz8LG+or0/6WU8X+mD+D23KJ3rIXrHObLyznzC8b98eYERk3x5S1
m7BpU0l/W/Ex+sfzCfEKs+D/9hEObl6OVi50rN5hR16Jfi+N22ZHesJJXxHK
9h2RIWyPgNuLoSkvmP92yrznl58lK+3RkCswF/SPljt8hI0+o7sNNae32XSv
xGfOr+pCcVvz7ovLLPvdySXUN83+53nFKyTIzRUXivuXj2HR1KEwU1eAmk1d
hKSK5/kibltnx+cSnifzWw96319O3QrjPY4hNPn71jg5KZF4eussVs0eBlPK
LmeBSyK/gF/IbaVsfzwEbHanrmu3OQeBOSQj6D7MtBVRq0X/UmR/Mw7e8qrQ
eefCiPNwUhXYpF3hKYxjwsvyQk/CkZXl5aHfZAIyhIP8+T8z4DjhjsgflOW7
GXqERzuNWFlKPTbhxE1fyt4mOM/fpbIO9R1qeo5Ysu8aotKKy+r32G35eHlk
EtQrKVDco26fuXj4OVJ2v5hw20Ey3JaLfeNoWVlzUdbeKnOWLNcTNQlXMW00
ERtL+d6TN1/JlCMJVtxHVDEl/Eu7Dj6VYNti54SgoTH5FlVrXAkW+mr9LG6b
74OGhIOb1ZmP8kLeLu7vAhVdE8xZtaHE79yy6wSSfkIQQG52ODo46tO6r/IE
xGZGYGwNYyx7HEH9nvZxM4yVBPJpjgOfEuF9ajG0rLrha4kJZEqLk8CF72p6
3Nn0uiJjn6fy5yR8xaNrp7Bs1mjYaCpA2dAenlFiTfw93FYwl3p5NKTWAvWG
HxNyVj5i786ErY4q5Q826Ogn2ueN8PjhLRpgxydpX1J2zKXfym1LipOQ+mKj
MN6wFa7FsPB6ihWZe00xqYy59024rE+sFCrCbYvFSeBzcjCmZWXyjB52etNj
I+PrNdgQ/VW9/fRSddDFZ8XOIjL4j4KFle70OfixG2+X8DsbV8bSMaNbDtkq
srH9DG6bE3CO4kwajcrhd/wc7KkjT5V5OvLXxRXL+PIQHWpWwaj1F5CSmYtj
s3v/ELd9sbM1FAVrgvH7ZN71p7gtOEmYW5k8q9wAH4Qv3jia3vN3XljSvh9w
ZE59qp+aTS/bRnV5Ix2De8b+xxWrCy8HVz1GwK5eP9z8GIHszCi42yh/G7cl
KMwIxewWxnS/yCtAXcsG+x6HVawO1CsKcH/PVNR0aYmL7yORk+GPztp/D7eN
e3sOhipk/I3bXOFvKh0F2DzQmn7vUcG8zcXbdV3RuPdsTKlM6qNghB2Bgrdm
Y06bOrgjEY8p5dZo6rlqa3wrwKP5KMz6ir6u5sJ+UYSBU0vck8qj8D3clvaJ
fLa5PzSFtmIlVQ10X3ha+hxJidw2Fwsb0m3ucVU2F1xxbsuLPw4Tcm+Vbv9A
xtWzgsgMewY7vUqQU6uO5yVM/9yCVLSvpgk5RUMc/Cz0qfhJ3JYbdwJmgj14
lxlIK/MYOQ/j2plStsu3Mb86shgHL+fVp75NQVkTu9dPhI5dPZHNmpufgo4u
etRehHG/01gytCbqr/UuRd6+g9vycvFgxwRUrtsdF998QW5+Kno6qfwkbivY
Y/kENz05aJJvCiY6jM+KwGAzNWzZvQxGgm+2mwiBCzAr+jJcOy6RiUvzN3Bb
dvQ1WFB1MMSp0HQcbShYR5rhSPGAyt+Cn8RtEz9thS65t/WkS39hHGcGfxfY
2DGEnutaT99bwu8c3JhC23W7zL7yU+22rFChn56eOz7JBp+SQB4ONVGk9lKH
HQ0rlVdwOd8bB4SPG9smwURTF2sue4u+kfZJ+AFuu8Od8i2r13+pzBv/GLfl
Z2JdLfKs5RCRv9vjzWOpuhh02wFZ0xIb6/vQ/GT63qdlFn1r2zjqvhaz/imX
+3HSvTC8qR0s643Al4yieY32SfhWbisAj52De0fXwb2GGcXDFXVssexWdLln
eAsSvDClQ00Y1BqAt7HCeV3kk/B3cNuEDxdhpEr6p+kYlNbbfA67nNg9Yvhe
9aDiNzh2X4LcrCh0rumC/R/SkHhzLMUXaw46ijjPjWjQehx1trMI6Q8mUfKs
WHUJUkoZaoK88HyJegh8fC/smA9Xc/o8jYKaPU57Rgl//T5uK3wTQt9cwYQe
DaAhsLErqKHx2CPiOb8UbrugPs2F5hz0lCmxOLflJ5+DBZn/jZ26IqaUYBRc
LrdMWWDFvkdlE1Vqfl7tK8s7eIVp6OisBTl1O9wOSxN+2s/htvyUq7Ah9dc2
a4DA9LJ0Ix8TO1pCXsUIR15HlXIL76edQWdHX6D3Dgh/NdJQRe0+28Sxvfgc
nJvegdaxlUxhbOaCe8mlraS+jdvysgMwsU1V6FftDd/EotajfRJ+FrcV+P3M
61aT1F0Hi++GEg65Hpo1JiE6Nx1r2htC4Du341k4Lo9yxNzjsjL4N3BbTtxt
WFP7YI3xPjMPZ92Vqbm3177gUvVpuXPvT+K2yT57oC/wXW49EbmlkFsup+wx
yeC/g/t7RlB7EDqNxiG7uFDw87C3jSYVc3v5Q/E5q5/BbXmZPqinRF/rt8dL
5qwCrzATx1ZsRUQ+F+8IrxBwFqeWM5BeKON1iZzw61i+4eR3fT8/9R6qq8lB
z6q1lF/aj3Jb/5vzoUHGoVbN7iiWEuGPcVt+XhA668ij+sTjophOuYGnoS/o
M7MBMn7P4MRgkLWAO6jjYkB28eKk4H+ZPkshZ9YBn0qYS7OiPmP7oxBSCRYu
9zegvr//4S8iPfQ93JaXch8X7wSL/hecP1/Tw4nyHzeoPKrEWDaSOD2/F9XH
ww+9EF/8idw24idw29yIF7DWI/OLki0OB2XLvFswB2wZPwkPkysWk4qT4oVa
uiqQU6mCrWdWwGXQXnpNw4tHZ3tlaJpWweim1TFi+zupd7EjjsNSgfZtv+CT
JlMuLz8Re6YNQnhaIcJf3sWtJHF9+KwoTOtInwF3m3lI9K3LvsPf9vquf8Q+
ioQLeR6ZDj0Veape50OEq7NSfBL2jK5MXWs2cYfMPC3jk1AYhEYG8lDQNMe5
D3GQATcX+9csQlQZRmw+Kw79yXpL8E7HmS9l9sc5eVFoZqkEHacWiCiKdfGz
fBLYEWhrrkCu6WLr3SBZuWFn4OqpQ2ATBb5uRBOKv9SZdRqsEsQo7MFB9DwS
XvqHfhMKMLeDmdCer44lz6RliRV8FGbCc0GW7aeWERPuW7htAe6OpuOctN0p
ydFK4bYjvpPbEoSemkHt12k0WYmZ/Rtg8Tta/nyuLYMmGT9t+wyAvYYVXkSX
YEn4C7htjvc+qJN1h1nv/UQv8BC43oXS69Z1xiGBVfxuPnIj72Dxsv1lv1CK
2wZ8N7fNjnkKJy15VDJywcvoEjZCyDOrFqxC3N+UdprBH0NW2EPYqCuRudME
6z9Kyws31RP1Ce8zcl+ERAl/K5+zw6j4HE36rSyF25rhheRhasJt5wq57chb
wniJRN6fzKlGjRs1/arY81jMc/iFqTi2ZBjmnafPZmaHnaL8bBSUtdDb4wZy
JGQ3KfAumlZvhNuhtA5hp/rAY/YkLNp+o9ycXFSVn9A8Xdu8PgIkNu+2jHGn
eM+gg2Lek/OxtLNkr1FFT4Fw2w4ibpsd+QqVjVSouAS99/tL5awNvOxB76e6
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
hBBCCCGE/FD+B6Lq0QA=
    "], {{0, 270.6}, {417., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120, 120}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{417., 270.6},
  PlotRange->{{0, 417.}, {0, 270.6}}]], "Input",ExpressionUUID->"7541b4bb-\
ed82-4a61-b412-497f940f5b9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 2 : Matrix Algebra", "Section",
 CellChangeTimes->{{3.902212090346334*^9, 3.9022121014134884`*^9}, 
   3.903769019997009*^9, {3.903769131050271*^9, 
   3.903769135610148*^9}},ExpressionUUID->"c605c20a-b238-4a73-a480-\
b4d65497b721"],

Cell[CellGroupData[{

Cell[TextData[{
 "2.8 Subspaces of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]],
  ExpressionUUID->"61a1cf92-73a3-4121-8cc6-19b76bf67b68"]
}], "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.904190606836274*^9, 
  3.904190626941572*^9}, {3.904564891951187*^9, 
  3.9045649092356987`*^9}},ExpressionUUID->"df60851a-021f-4598-9fbd-\
4ce41d53c107"],

Cell[CellGroupData[{

Cell["Subspace", "Subsubsection",
 CellChangeTimes->{{3.9045654178817415`*^9, 3.9045654201809163`*^9}, {
  3.904565654572159*^9, 
  3.9045656558955383`*^9}},ExpressionUUID->"03ce4504-6bfa-4346-9fbb-\
e886f4fc7fb3"],

Cell[TextData[{
 "Definition\nA set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"f7266ad6-17ff-4966-b59c-4e5623777ea1"],
 " is a  ",
 StyleBox["subspace",
  FontVariations->{"Underline"->True}],
 " if \na) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[Element]", "H"}], TraditionalForm]],ExpressionUUID->
  "aa5076ab-d25b-4f34-bc6d-aacdf1c476be"],
 "\nb) If u and v are in H then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "+", "v"}], TraditionalForm]],ExpressionUUID->
  "d09ec513-079f-4f88-a28d-21348dd49546"],
 " is in H\nc) If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Element]", "H"}], TraditionalForm]],ExpressionUUID->
  "109105ab-726b-4cb5-849c-ce20c472303a"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", " ", "u"}], "\[Element]", "H"}], TraditionalForm]],
  ExpressionUUID->"b21da571-e0e4-43cf-aec8-65639ed02dda"],
 " for all scalars c "
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045649461188593`*^9, 
  3.9045651345221777`*^9}, {3.9045656586798544`*^9, 3.904565663888583*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b77b5cc1-9c65-4b3e-b2b4-3c3a13b4a925"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Column Space and Null Space", "Subsubsection",
 CellChangeTimes->{{3.904565440311039*^9, 
  3.9045654502350044`*^9}},ExpressionUUID->"dde465f1-2e2f-4a94-b2f2-\
fbf40c8baf36"],

Cell[TextData[{
 "Definition\nThe ",
 StyleBox["column space",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Col", "(", "A", ")"}], " "}], TraditionalForm]],ExpressionUUID->
  "fc716dc2-32ad-4a5d-9ae5-ef3e5f007b57"],
 "of a matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], ",", 
      SubscriptBox["a", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "72610e0a-7237-4046-b6e3-8b9da8c80d6c"],
 " is the span of the columns of A.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "ec351aff-f71c-44e8-ae4b-3b4475c1deb7"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Col", "(", "A", ")"}], "=", 
    RowBox[{"span", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["a", "1"], ",", 
       SubscriptBox["a", "2"], ",", "\[Ellipsis]", ",", 
       SubscriptBox["a", "n"]}], "}"}]}]}], TraditionalForm]],ExpressionUUID->
  "781c683c-7b7c-4a3a-83e6-cb0d4575e60a"],
 "\nis a subspace of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "m"], TraditionalForm]],
  ExpressionUUID->"d45afe80-8a8b-4d32-a966-684f3c973d1c"],
 "."
}], "Text",
 CellChangeTimes->{{3.904192042023505*^9, 3.9041921289847183`*^9}, {
  3.9045654576407876`*^9, 3.90456564249092*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"c7c76307-4fd2-4d7e-bf2d-c752316bd48b"],

Cell[TextData[{
 "Definition and Theorem 12\nThe ",
 StyleBox["null space",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Nul", "(", "A", ")"}], " "}], TraditionalForm]],ExpressionUUID->
  "588b3689-039d-4fec-8380-fbf2a96bee94"],
 "of a matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "1"], ",", 
      SubscriptBox["a", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["a", "n"]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "d011e749-c010-4eab-ad80-80945f0682cb"],
 " is the set of all solutions of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "=", "0."}], TraditionalForm]],
  ExpressionUUID->"8515efbd-386b-4ade-b49b-9e72a42b1766"],
 "  If A.  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "15408dd4-972b-4dfe-a266-ebd3bbfcd201"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Nul", "(", "A", ")"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", ":", " ", 
       RowBox[{"A", " ", "x"}]}], " ", "=", "0"}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"c6a914f8-a692-47f7-a88b-3de75c8a4664"],
 "\nis a subspace of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]],
  ExpressionUUID->"fcdb7cb5-cb35-4c17-a681-da7aaa46663b"],
 "."
}], "Text",
 CellChangeTimes->{{3.904192042023505*^9, 3.9041921289847183`*^9}, {
  3.9045654576407876`*^9, 3.90456564249092*^9}, {3.9045656844255567`*^9, 
  3.9045657930998435`*^9}, {3.9048098654524403`*^9, 3.9048098734261837`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f589ae70-d5b0-4947-b91e-f01991c548ff"],

Cell[TextData[{
 "Definition \nA ",
 StyleBox["basis",
  FontVariations->{"Underline"->True}],
 " for a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"b7d197a4-5a9c-4866-a78d-98768a06e50a"],
 " is any linearly independent set in ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]],ExpressionUUID->
  "a0cd443c-b561-43d7-8f2a-237f840cee41"],
 " that spans ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]],ExpressionUUID->
  "eb8e0b13-41bb-4db8-8e36-663c767836eb"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.904192042023505*^9, 3.9041921289847183`*^9}, {
  3.9045654576407876`*^9, 3.90456564249092*^9}, {3.9045656844255567`*^9, 
  3.904565886759968*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"9109473f-45b8-4c07-9474-5d69aca080ae"],

Cell[TextData[{
 "Theorem 13\nThe pivot columns of A are a basis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Col", "(", "A", ")"}], TraditionalForm]],ExpressionUUID->
  "4ee27651-f089-4e4d-acee-2bccd48d090e"],
 ". "
}], "Text",
 CellChangeTimes->{{3.904192042023505*^9, 3.9041921289847183`*^9}, {
  3.904192225537801*^9, 3.90419238216352*^9}, {3.9045659086881638`*^9, 
  3.904565943851269*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"f2ee2526-edd7-4081-9834-690a95153ea9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.9 Dimension and Rank", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.904190606836274*^9, 
  3.904190626941572*^9}, {3.9045660093513994`*^9, 3.9045660181093884`*^9}, {
  3.9049135978146534`*^9, 
  3.904913644408086*^9}},ExpressionUUID->"25560671-48b4-4fe5-aa59-\
ee8742de24c6"],

Cell[TextData[{
 "Definition\nIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalB]", "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["b", "1"], ",", 
      SubscriptBox["b", "2"], ",", 
      SubscriptBox["\[Ellipsis]b", "p"]}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"bbe3d5f0-aa30-424a-b1c2-13f245cf7200"],
 " is a ",
 StyleBox["basis",
  FontVariations->{"Underline"->True}],
 " for a subspace ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]],ExpressionUUID->
  "9432722c-7666-4ebe-9db3-90a2c32afd72"],
 " and \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["b", "1"]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      SubscriptBox["c", "p"], 
      SubscriptBox["b", "p"]}]}]}], TraditionalForm]],ExpressionUUID->
  "19c52a67-eab8-4abd-b352-3b8bea2056ba"],
 "\nthen ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], ",", "\[Ellipsis]", ",", 
    SubscriptBox["c", "p"]}], TraditionalForm]],ExpressionUUID->
  "6b2fd46d-0f0b-4a9b-8975-25d352e2d601"],
 " are the ",
 StyleBox["coordinates",
  FontVariations->{"Underline"->True}],
 " of x relative to \[ScriptCapitalB] and\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"[", "x", "]"}], "\[ScriptCapitalB]"], "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["c", "1"]},
        {
         SubscriptBox["c", "2"]},
        {"\[VerticalEllipsis]"},
        {
         SubscriptBox["c", "p"]}
       }], ")"}], "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "p"]}]}], TraditionalForm]],
  ExpressionUUID->"47697cc6-84dc-4152-b737-6aaad0888f01"],
 "\nis the ",
 StyleBox["coordinate vector",
  FontVariations->{"Underline"->True}],
 " of x relative to \[ScriptCapitalB]."
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"663194cc-88d3-4b7d-a2ed-6622dd093e8f"],

Cell[TextData[{
 "Definition\nThe ",
 StyleBox["dimension",
  FontVariations->{"Underline"->True}],
 " D",
 Cell[BoxData[
  FormBox[
   RowBox[{"im", "(", "H", ")"}], TraditionalForm]],ExpressionUUID->
  "4b8c0960-6402-4e4f-b093-1b1544a90345"],
 " of a subspace ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]],ExpressionUUID->
  "759eb1df-fdc4-4bfb-9210-434ae7466bb3"],
 " is the number of elements in any basis for ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]],ExpressionUUID->
  "8439a104-9778-4cdd-b13e-ce9f3b99e6ac"],
 "."
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}, {3.9045664002667804`*^9, 3.9045665260516276`*^9}, {
  3.9045666429685974`*^9, 3.9045666568737273`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"97a1badd-9b84-4b49-a934-f16fed8f4999"],

Cell[TextData[{
 "Definition\nThe ",
 StyleBox["rank",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Rank", "(", "A", ")"}], TraditionalForm]],ExpressionUUID->
  "8efb06c6-b2fa-4ada-b82b-f347a8dbf7f5"],
 " of a matrix A is the dimension of  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Col", "(", "A", ")"}], TraditionalForm]],ExpressionUUID->
  "ae53de6c-af74-4800-9131-2d5e6de479b5"],
 ". "
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}, {3.9045664002667804`*^9, 3.90456657699519*^9}, {
  3.904566661737461*^9, 3.9045666828992214`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d7be8742-8d95-43f3-a19d-4137951b9091"],

Cell[TextData[{
 "Theorem 15\nIf a matrix has ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a2c5bc4e-3a75-47c7-a2ce-52c6a35fd8c1"],
 " columns then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Rank", "(", "A", ")"}], "+", 
     RowBox[{"Dim", "(", 
      RowBox[{"Nul", "(", "A", ")"}], ")"}]}], "=", "n"}], TraditionalForm]],
  ExpressionUUID->"2cd47c4d-0d28-474b-ae1b-630def943ea9"],
 " "
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}, {3.9045664002667804`*^9, 3.90456657699519*^9}, {
  3.9045666086397676`*^9, 3.904566631629478*^9}, {3.9045666948212852`*^9, 
  3.904566715261048*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"286fbbac-bd3f-45ef-9ace-8d7cb3380286"],

Cell[TextData[{
 "Theorem 16\nIf H is a p dimensional subspace of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]],
  ExpressionUUID->"515e0c74-7a07-45f0-925c-f4bab297e044"],
 " then any linearly independent set of p elements of H is automatically a \
basis of H. "
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}, {3.9045664002667804`*^9, 3.90456657699519*^9}, {
  3.9045666086397676`*^9, 3.904566631629478*^9}, {3.9045666948212852`*^9, 
  3.904566821167815*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"8525b4ec-69fa-4e7f-936a-b01fdae19718"],

Cell[TextData[{
 "Invertible Matrix Theorem (cont)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "e2d0588f-9b4b-43f9-add0-f97a8d1e5667"],
 "\nm) The columns of A span ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]],
  ExpressionUUID->"7971744d-c3aa-4d2a-823f-a67ec7707157"],
 "\nn) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Col", "(", "A", ")"}], "=", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"d03f4cd9-d000-4f26-80ac-4d1995db2010"],
 "\n0) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Rank", "(", "A", ")"}], "=", "n"}], TraditionalForm]],
  ExpressionUUID->"c71f81bf-d1d9-4165-9771-d765994b1d32"],
 "\np) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Dim", "(", 
     RowBox[{"Nul", "(", "A", ")"}], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"3ff9e8c6-104c-4848-bd26-c307074681a4"],
 "\nq) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Nul", "(", "A", ")"}], "=", 
    RowBox[{"{", "0", "}"}]}], TraditionalForm]],ExpressionUUID->
  "5426329b-d0ad-46bf-8ab8-eaf367e0c46d"]
}], "Text",
 CellChangeTimes->{{3.9037703190921535`*^9, 3.903770339531974*^9}, {
  3.9037709214609504`*^9, 3.903771168227668*^9}, {3.904189600175859*^9, 
  3.9041898142740383`*^9}, {3.904189851941903*^9, 3.904190100228673*^9}, {
  3.9041901560266523`*^9, 3.904190164690833*^9}, {3.904190655356998*^9, 
  3.904190743207735*^9}, {3.904190776668426*^9, 3.904190915718313*^9}, {
  3.904190970649001*^9, 3.904191166818666*^9}, {3.904191241275675*^9, 
  3.904191288390267*^9}, {3.904191343774735*^9, 3.904191485303191*^9}, {
  3.904191688169541*^9, 3.90419181959833*^9}, {3.9045660497652836`*^9, 
  3.9045663636827497`*^9}, {3.9045664002667804`*^9, 3.90456657699519*^9}, {
  3.9045666086397676`*^9, 3.904566631629478*^9}, {3.9045666948212852`*^9, 
  3.904567003071273*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"46367202-a900-42a4-9554-1873cb444557"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 3 : Determinants", "Section",
 CellChangeTimes->{{3.902212090346334*^9, 3.9022121014134884`*^9}, 
   3.903769019997009*^9, {3.903769131050271*^9, 3.903769135610148*^9}, {
   3.90584117835112*^9, 
   3.9058411843358283`*^9}},ExpressionUUID->"124a94b1-5c4b-4bd3-9429-\
d3d515e88560"],

Cell[CellGroupData[{

Cell["3.1 Intro", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.904190606836274*^9, 
  3.904190626941572*^9}, {3.904564891951187*^9, 3.9045649092356987`*^9}, {
  3.9058412072888966`*^9, 
  3.9058412162703347`*^9}},ExpressionUUID->"df3861a8-67e3-4d73-9619-\
5c53beb7e949"],

Cell[TextData[{
 "Starting slow we want to understand where the scalar\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", " ", "d"}], " ", "-", " ", 
    RowBox[{"b", " ", "c"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "378915ac-6425-4470-b590-ea6865c313aa"],
 "\ncomes from in the expression \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], ")"}], 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"a", " ", "d"}], "-", 
       RowBox[{"b", " ", "c"}]}]], 
     RowBox[{"(", GridBox[{
        {"d", 
         RowBox[{"-", "b"}]},
        {
         RowBox[{"-", "c"}], "a"}
       }], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f9db821-3969-4f46-ad0a-af52c42d64ca"],
 "\nIt turns up if we just multiply"
}], "Text",
 CellChangeTimes->{{3.905841232662465*^9, 3.9058413587266617`*^9}, {
  3.9058414513191996`*^9, 3.9058414882897205`*^9}, {3.9058415445909324`*^9, 
  3.9058415445909324`*^9}, {3.90584638441019*^9, 
  3.905846393001525*^9}},ExpressionUUID->"e06f1caf-ad3a-468f-810b-\
4a177e5d1e8c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"a", "b"},
       {"c", "d"}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {"d", 
        RowBox[{"-", "b"}]},
       {
        RowBox[{"-", "c"}], "a"}
      }], ")"}]}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.905841382725989*^9, 3.9058414328231955`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"958277eb-aa35-4b58-a88d-27fe64e02920"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c"}], "+", 
       RowBox[{"a", " ", "d"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.905841400740165*^9, 3.9058414458964376`*^9}},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"3ba6d529-56b1-4816-8adf-\
0ed7fc6cfddc"]
}, Open  ]],

Cell[TextData[{
 "This determinant was useful because the matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "05c257bd-07ad-488c-87fa-7350d171c6e6"],
 " was invertible iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "d"}], "-", " ", 
     RowBox[{"b", " ", "c"}]}], "\[NotEqual]", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5217179e-a661-4c0f-b574-378e161d9531"],
 ". \nFor a three by three we can row reduce and get "
}], "Text",
 CellChangeTimes->{{3.9058415123212395`*^9, 3.9058415942012634`*^9}, {
  3.9058416500080643`*^9, 3.9058416969420433`*^9}, {3.9058421640300894`*^9, 
  3.90584217652498*^9}},ExpressionUUID->"ac5b9127-38ea-4a4b-af8b-\
0921091690b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"i", ",", "j"}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"REF", "=", "A"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "REF", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "1"}]]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowAdd", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}]}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9058417014406233`*^9, 3.905841827048665*^9}, {
  3.905841864855466*^9, 3.905841878633116*^9}, {3.9058419147951174`*^9, 
  3.905842002899754*^9}, {3.9058420723239565`*^9, 3.905842146224084*^9}, {
  3.9058423267610207`*^9, 3.9058423527735195`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"0a8b6b6b-b223-4576-b9a9-8c3f3d929a3e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["a", 
       RowBox[{"1", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"2", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "3"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9058417073923473`*^9, 3.9058417147491903`*^9}, {
   3.905841769075408*^9, 3.9058418276891365`*^9}, {3.9058418719529886`*^9, 
   3.9058418792889013`*^9}, {3.905841944717828*^9, 3.905841955237821*^9}, {
   3.9058419921426916`*^9, 3.9058420191280885`*^9}, 3.905842085554878*^9, {
   3.9058421200532875`*^9, 3.9058421468333073`*^9}, 3.905842354163453*^9, 
   3.905842642718196*^9, {3.9058427427082086`*^9, 3.9058427874174356`*^9}, 
   3.905842857448779*^9, 3.905842889112296*^9, 3.905843104451559*^9, 
   3.90584702287602*^9},
 CellLabel->
  "Out[182]//MatrixForm=",ExpressionUUID->"fc0dba58-e05f-4d16-a0aa-\
1430e5275577"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}]},
       {
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*SubscriptBox[\\\"a\\\
\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"1\\\"}]]\\))\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 2, 
          Subscript[$CellContext`a, 1, 1], 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
      Subscript[$CellContext`a, 3, 1], 
      Subscript[$CellContext`a, 3, 2], 
      Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2, 
      Subscript[$CellContext`a, 1, 1], 2], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.905847022883219*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"2d2cab1a-8b6a-4781-b897-34ac799d5fab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}]},
       {
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "1"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "2"}]]}], 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         SubscriptBox["a", 
          RowBox[{"3", ",", "3"}]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*SubscriptBox[\\\"a\\\
\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"1\\\"}]]\\))\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 3, 
          Subscript[$CellContext`a, 1, 1], 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 1], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 3, 
      Subscript[$CellContext`a, 1, 1], 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.9058470228959312`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"a39be0ad-6b59-452a-86a3-c9072837281d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"3", ",", "3"}]]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}]]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, -Subscript[$CellContext`a, 2, 1], 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"1\\\"}]]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, -Subscript[$CellContext`a, 3, 1], 1],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 3, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3]}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 2, 2, -Subscript[$CellContext`a, 2, 1], 1], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, -Subscript[$CellContext`a, 3, 1], 1]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9058418719686103`*^9, 3.9058418792889013`*^9}, {
   3.9058419447959285`*^9, 3.905841955237821*^9}, {3.9058419921426916`*^9, 
   3.90584203145958*^9}, 3.905842085554878*^9, {3.9058421200532875`*^9, 
   3.9058421468333073`*^9}, 3.905842354163453*^9, 3.905842642718196*^9, {
   3.9058427427082086`*^9, 3.9058427874174356`*^9}, 3.905842857448779*^9, 
   3.905842889112296*^9, 3.905843104451559*^9, 3.9058470229148865`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"3207e7dc-11b6-4edd-bf99-ca51be820040"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "We can continue row reducing if our next pivot (in the 2,2 slot) \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["a", 
        RowBox[{"1", ",", "2"}]]}], " ", 
      SubscriptBox["a", 
       RowBox[{"2", ",", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"1", ",", "1"}]], " ", 
      SubscriptBox["a", 
       RowBox[{"2", ",", "2"}]]}]}], " ", "\[NotEqual]", "0"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cc7529a5-ba66-4594-9652-29869e9af2df"]
}], "Text",
 CellChangeTimes->{{3.9058421940826635`*^9, 3.905842307513376*^9}, {
  3.905842416040587*^9, 3.905842421663718*^9}, {3.905842586412838*^9, 
  3.9058425867252674`*^9}},ExpressionUUID->"46aacde4-1076-41d4-87e3-\
8926e43a7659"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowScale", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", 
       RowBox[{"REF", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"REF", "=", 
   RowBox[{"RowAdd", "[", 
    RowBox[{"REF", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"3", ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SubscriptBox["a", 
                RowBox[{"1", ",", "2"}]]}], " ", 
              SubscriptBox["a", 
               RowBox[{"3", ",", "1"}]]}], "+", 
             RowBox[{
              SubscriptBox["a", 
               RowBox[{"1", ",", "1"}]], " ", 
              SubscriptBox["a", 
               RowBox[{"3", ",", "2"}]]}]}], ")"}]}]}], "}"}], "}"}], ",", 
       "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"REF", "\[LeftDoubleBracket]", 
  RowBox[{"3", ",", "3"}], 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.905841643253229*^9, 3.905841644190132*^9}, {
   3.9058423146080446`*^9, 3.9058423172484355`*^9}, {3.9058423629918437`*^9, 
   3.9058423899509716`*^9}, {3.905842425350308*^9, 3.905842474390275*^9}, {
   3.9058425338307924`*^9, 3.9058425397866435`*^9}, {3.9058425776772113`*^9, 
   3.9058426136747155`*^9}, {3.9058426629052095`*^9, 3.90584272629865*^9}, {
   3.9058427687344017`*^9, 3.9058427840025883`*^9}, {3.9058428646060667`*^9, 
   3.9058428853919964`*^9}, 3.905843096516762*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"be23a372-819d-4589-b392-9c2a9beb67ca"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "2"}]]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "2"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"2", ",", "2"}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["a", 
              RowBox[{"1", ",", "3"}]]}], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "1"}]]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            SubscriptBox["a", 
             RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule](\\!\\(\\*RowBox[{RowBox[{\
RowBox[{\\\"-\\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\"}]]}], \\\" \\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\
\", \\\"1\\\"}]]}], \\\"+\\\", RowBox[{SubscriptBox[\\\"a\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}]], \\\" \\\", \
SubscriptBox[\\\"a\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]]}]}]\\))\\!\
\\(\\*SubscriptBox[\\(row\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\
\(row\), \(``\)]\)", 
          3, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
          Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 3],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, (-Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2]) (-
        Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2]), (-
        Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2]) (-
        Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 3, 1] + 
       Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 3])}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)", 
      3, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], 3]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9058429740024347`*^9, {3.905843010977914*^9, 3.9058430496007404`*^9}, 
   3.9058431173735647`*^9, 3.9058470289806423`*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"864489e4-769e-454d-9937-f4f084570462"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", 
         RowBox[{"1", ",", "1"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "2"}]], 
        SubscriptBox["a", 
         RowBox[{"1", ",", "3"}]]},
       {"0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "2"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "2"}]]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", 
            RowBox[{"1", ",", "3"}]]}], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "1"}]]}], "+", 
         RowBox[{
          SubscriptBox["a", 
           RowBox[{"1", ",", "1"}]], " ", 
          SubscriptBox["a", 
           RowBox[{"2", ",", "3"}]]}]}]},
       {"0", "0", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "3"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["a", 
                 RowBox[{"2", ",", "2"}]]}], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "1"}]]}], "+", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "1"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "3"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "1"}]]}], "-", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "1"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
           RowBox[{
            SubscriptBox["a", 
             RowBox[{"1", ",", "1"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SubscriptBox["a", 
                 RowBox[{"2", ",", "3"}]]}], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "2"}]]}], "+", 
              RowBox[{
               SubscriptBox["a", 
                RowBox[{"2", ",", "2"}]], " ", 
               SubscriptBox["a", 
                RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\)\"\>",
         StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2],
         Editable->False]},
       {
        InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(row\\), \
\\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)\[Rule] \\!\\(\\*SubscriptBox[\\(row\
\\), \\(\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\\)]\\)+(\\!\\(\\*SubscriptBox[\\(\\!\\\
(\\*RowBox[{RowBox[{SubscriptBox[\\\"a\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\"}]], \\\" \\\", SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \
\\\",\\\", \\\"1\\\"}]]}], \\\"-\\\", RowBox[{SubscriptBox[\\\"a\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}]], \\\" \\\", \
SubscriptBox[\\\"a\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"2\\\"}]]}]}]\\)row\\), \\(\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\\)]\\))\"\>",
         StringForm[
         "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 
          Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] - 
          Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 2],
         Editable->False]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{
      Subscript[$CellContext`a, 1, 1], 
      Subscript[$CellContext`a, 1, 2], 
      Subscript[$CellContext`a, 1, 3]}, {
     0, -Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 2], -
       Subscript[$CellContext`a, 1, 3] Subscript[$CellContext`a, 2, 1] + 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 2, 3]}, {
     0, 0, 
      Subscript[$CellContext`a, 1, 1] (
       Subscript[$CellContext`a, 1, 3] (-Subscript[$CellContext`a, 2, 2] 
          Subscript[$CellContext`a, 3, 1] + 
         Subscript[$CellContext`a, 2, 1] Subscript[$CellContext`a, 3, 2]) + 
       Subscript[$CellContext`a, 1, 2] (
         Subscript[$CellContext`a, 2, 3] Subscript[$CellContext`a, 3, 1] - 
         Subscript[$CellContext`a, 2, 1] Subscript[$CellContext`a, 3, 3]) + 
       Subscript[$CellContext`a, 1, 1] (-Subscript[$CellContext`a, 2, 3] 
          Subscript[$CellContext`a, 3, 2] + 
         Subscript[$CellContext`a, 2, 2] Subscript[$CellContext`a, 3, 3]))}}], 
   TableForm[{
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 1], 
     StringForm["\!\(\*SubscriptBox[\(row\), \(``\)]\)", 2], 
     StringForm[
     "\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))", 3, 3, 
      Subscript[$CellContext`a, 1, 2] Subscript[$CellContext`a, 3, 1] - 
      Subscript[$CellContext`a, 1, 1] Subscript[$CellContext`a, 3, 2], 2]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9058429740024347`*^9, {3.905843010977914*^9, 3.9058430496007404`*^9}, 
   3.9058431173735647`*^9, 3.9058470290155582`*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"596e4819-dc42-402f-88ba-5448bff44d18"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a", 
   RowBox[{"1", ",", "1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "3"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "-", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "2"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9058430496163597`*^9, 3.9058431174204288`*^9, 
  3.9058470290435977`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"78ee2011-c904-472a-9316-5ea79090f8c0"]
}, Open  ]],

Cell[TextData[{
 "This is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "11"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "13604221-f76d-43b1-b85b-ef34d8e13b53"],
 " times the determinant of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2c48ad0d-4ab7-4c3b-95aa-03e138fd6985"],
 " matrix. We need to look at this carefully to see how to compute it.  We \
also need to work out how to define and compute a determinant for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "\[Times]", "4"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3d3d3fe3-019c-4dc4-a199-8ee32a2edd19"],
 " matrices and larger. "
}], "Text",
 CellChangeTimes->{{3.9058431458709736`*^9, 
  3.9058432892257166`*^9}},ExpressionUUID->"017e868d-ebc0-4702-a115-\
0decfd25cf22"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["a", 
   RowBox[{"1", ",", "1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "3"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "1"}]]}], "-", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "1"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]]}], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "2"}]]}], "+", 
       RowBox[{
        SubscriptBox["a", 
         RowBox[{"2", ",", "2"}]], " ", 
        SubscriptBox["a", 
         RowBox[{"3", ",", "3"}]]}]}], ")"}]}]}], ")"}]}]],
 CellChangeTimes->{3.9058430496163597`*^9, 3.9058431174204288`*^9, 
  3.9058470290435977`*^9},ExpressionUUID->"5c65401a-e57d-4a4e-8b1b-\
f66cb36fa9a6"]], "Text",
 CellChangeTimes->{
  3.9058470931756363`*^9},ExpressionUUID->"193d6fa3-f718-4c67-8a80-\
a00eb4a36b82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Row Op Code", "Section",
 CellChangeTimes->{{3.9028328951014414`*^9, 
  3.9028328990687666`*^9}},ExpressionUUID->"5c26734a-889b-46d3-a44c-\
43d529158be1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"RowScale", ",", "RowSwitch", ",", "RowAdd"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowScale", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", " ", "\[Alpha]_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"ANew", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule](``)\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "i", ",",
         "\[Alpha]", ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowSwitch", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "i", ",", 
        "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \
\(``\)]\)\[Rule]\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "j", ",", 
        "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", "All"}], 
       "\[RightDoubleBracket]"}], "=", 
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", "i"}], "}"}], ",", "All"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowAdd", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "\[Alpha]_", ",", "p_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))\>\"", ",", "i", ",", "i", ",", "\[Alpha]", ",", " ", "p"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ANew", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{
       RowBox[{"ANew", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "+", " ", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{"ANew", "\[LeftDoubleBracket]", 
         RowBox[{"p", ",", "All"}], "\[RightDoubleBracket]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "RowAdd", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowAdd", "[", 
   RowBox[{"A_", ",", 
    RowBox[{"{", 
     RowBox[{"i\[Alpha]s_", ",", "p_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ANew", "=", "A"}], ",", "s", ",", "i", ",", "\[Alpha]"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\>\"", ",", "k"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", 
          RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "\[Alpha]"}], "}"}], "=", 
         RowBox[{
         "i\[Alpha]s", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(row\), \(``\)]\)\[Rule] \
\!\(\*SubscriptBox[\(row\), \(``\)]\)+(\!\(\*SubscriptBox[\(``row\), \
\(``\)]\))\>\"", ",", "i", ",", "i", ",", "\[Alpha]", ",", " ", "p"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ANew", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{
          RowBox[{"ANew", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All"}], "\[RightDoubleBracket]"}], "+", " ", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"ANew", "\[LeftDoubleBracket]", 
            RowBox[{"p", ",", "All"}], "\[RightDoubleBracket]"}]}]}]}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "i\[Alpha]s", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ANew", "=", 
      RowBox[{"Simplify", "[", "ANew", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"MatrixForm", "[", "ANew", "]"}], ",", 
       RowBox[{"TableForm", "[", "s", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "ANew"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9025222040548058`*^9, 3.902522688811363*^9}, {
   3.902522809234256*^9, 3.902522862117859*^9}, 3.902522893587943*^9, {
   3.90252293637116*^9, 3.9025229409044313`*^9}, {3.9025229746671543`*^9, 
   3.902522990191957*^9}, {3.902523031737338*^9, 3.902523078896566*^9}, {
   3.902523113357407*^9, 3.9025231207529497`*^9}, {3.9025232328286953`*^9, 
   3.902523261689928*^9}, {3.9025233017719088`*^9, 3.902523321902813*^9}, {
   3.9025253198585176`*^9, 3.902525343090293*^9}, {3.902765773336645*^9, 
   3.90276578680836*^9}, {3.902765935450306*^9, 3.9027660084078593`*^9}, {
   3.9027660385751886`*^9, 3.902766135385269*^9}, {3.9027661852743845`*^9, 
   3.90276618751116*^9}, {3.9027668190669928`*^9, 3.9027668208664913`*^9}, {
   3.902766890078801*^9, 3.902766895037586*^9}, {3.9027669983831015`*^9, 
   3.9027669986731668`*^9}, 3.9028299789115953`*^9, {3.9028302036985703`*^9, 
   3.902830244413587*^9}, {3.902830293858634*^9, 3.9028306483338337`*^9}, {
   3.9028306830992174`*^9, 3.9028308887606993`*^9}, {3.902830955253166*^9, 
   3.902830981572176*^9}, {3.9028312934755526`*^9, 3.9028312942718534`*^9}, {
   3.902831486049415*^9, 3.90283156141187*^9}, {3.9028316365910025`*^9, 
   3.9028316607707396`*^9}, {3.902831703711198*^9, 3.9028317767985153`*^9}, {
   3.902831815669244*^9, 3.9028319009527917`*^9}, {3.9028319732226763`*^9, 
   3.9028319799112015`*^9}, {3.9058426318115125`*^9, 3.905842633514278*^9}, {
   3.9058429984165397`*^9, 3.905843003755211*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"3608da8d-2ee3-4e7d-a9a8-137ab8c6e9cf"]
}, Closed]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1141.2, 483.},
WindowMargins->{{0, Automatic}, {Automatic, 9}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification->1.5,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"15f18056-bc3f-4ce6-bc6a-23d461b3e7ba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 204, 4, 146, "Title",ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-fddd9660e667"],
Cell[CellGroupData[{
Cell[809, 30, 172, 3, 100, "Section",ExpressionUUID->"99389cae-f115-492e-9dbf-1a26fe254d70"],
Cell[984, 35, 179740, 2951, 425, "Input",ExpressionUUID->"7541b4bb-ed82-4a61-b412-497f940f5b9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180761, 2991, 246, 4, 100, "Section",ExpressionUUID->"c605c20a-b238-4a73-a480-b4d65497b721"],
Cell[CellGroupData[{
Cell[181032, 2999, 635, 13, 81, "Subsection",ExpressionUUID->"df60851a-021f-4598-9fbd-4ce41d53c107"],
Cell[CellGroupData[{
Cell[181692, 3016, 214, 4, 67, "Subsubsection",ExpressionUUID->"03ce4504-6bfa-4346-9fbb-e886f4fc7fb3"],
Cell[181909, 3022, 1747, 43, 214, "Text",ExpressionUUID->"b77b5cc1-9c65-4b3e-b2b4-3c3a13b4a925"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183693, 3070, 180, 3, 67, "Subsubsection",ExpressionUUID->"dde465f1-2e2f-4a94-b2f2-fbf40c8baf36"],
Cell[183876, 3075, 1615, 49, 180, "Text",ExpressionUUID->"c7c76307-4fd2-4d7e-bf2d-c752316bd48b"],
Cell[185494, 3126, 1834, 54, 214, "Text",ExpressionUUID->"f589ae70-d5b0-4947-b91e-f01991c548ff"],
Cell[187331, 3182, 861, 24, 111, "Text",ExpressionUUID->"9109473f-45b8-4c07-9474-5d69aca080ae"],
Cell[188195, 3208, 494, 12, 111, "Text",ExpressionUUID->"f2ee2526-edd7-4081-9834-690a95153ea9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[188738, 3226, 523, 8, 55, "Subsection",ExpressionUUID->"25560671-48b4-4fe5-aa59-ee8742de24c6"],
Cell[189264, 3236, 2535, 73, 340, "Text",ExpressionUUID->"663194cc-88d3-4b7d-a2ed-6622dd093e8f"],
Cell[191802, 3311, 1352, 30, 111, "Text",ExpressionUUID->"97a1badd-9b84-4b49-a934-f16fed8f4999"],
Cell[193157, 3343, 1239, 27, 111, "Text",ExpressionUUID->"d7be8742-8d95-43f3-a19d-4137951b9091"],
Cell[194399, 3372, 1302, 28, 111, "Text",ExpressionUUID->"286fbbac-bd3f-45ef-9ace-8d7cb3380286"],
Cell[195704, 3402, 1178, 21, 145, "Text",ExpressionUUID->"8525b4ec-69fa-4e7f-936a-b01fdae19718"],
Cell[196885, 3425, 2129, 53, 277, "Text",ExpressionUUID->"46367202-a900-42a4-9554-1873cb444557"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199063, 3484, 295, 5, 100, "Section",ExpressionUUID->"124a94b1-5c4b-4bd3-9429-d3d515e88560"],
Cell[CellGroupData[{
Cell[199383, 3493, 510, 8, 81, "Subsection",ExpressionUUID->"df3861a8-67e3-4d73-9619-5c53beb7e949"],
Cell[199896, 3503, 1216, 38, 214, "Text",ExpressionUUID->"e06f1caf-ad3a-468f-810b-4a177e5d1e8c"],
Cell[CellGroupData[{
Cell[201137, 3545, 464, 15, 67, "Input",ExpressionUUID->"958277eb-aa35-4b58-a88d-27fe64e02920"],
Cell[201604, 3562, 859, 27, 89, "Output",ExpressionUUID->"3ba6d529-56b1-4816-8adf-0ed7fc6cfddc"]
}, Open  ]],
Cell[202478, 3592, 856, 24, 110, "Text",ExpressionUUID->"ac5b9127-38ea-4a4b-af8b-0921091690b3"],
Cell[CellGroupData[{
Cell[203359, 3620, 1841, 55, 222, "Input",ExpressionUUID->"0a8b6b6b-b223-4576-b9a9-8c3f3d929a3e"],
Cell[205203, 3677, 1642, 45, 166, "Output",ExpressionUUID->"fc0dba58-e05f-4d16-a0aa-1430e5275577"],
Cell[CellGroupData[{
Cell[206870, 3726, 4114, 108, 85, "Print",ExpressionUUID->"2d2cab1a-8b6a-4781-b897-34ac799d5fab"],
Cell[210987, 3836, 4484, 117, 85, "Print",ExpressionUUID->"a39be0ad-6b59-452a-86a3-c9072837281d"],
Cell[215474, 3955, 5921, 146, 85, "Print",ExpressionUUID->"3207e7dc-11b6-4edd-bf99-ca51be820040"]
}, Open  ]]
}, Open  ]],
Cell[221422, 4105, 824, 24, 87, "Text",ExpressionUUID->"46aacde4-1076-41d4-87e3-8926e43a7659"],
Cell[CellGroupData[{
Cell[222271, 4133, 1771, 45, 130, "Input",ExpressionUUID->"be23a372-819d-4589-b392-9c2a9beb67ca"],
Cell[CellGroupData[{
Cell[224067, 4182, 6737, 173, 170, "Print",ExpressionUUID->"864489e4-769e-454d-9937-f4f084570462"],
Cell[230807, 4357, 6977, 177, 85, "Print",ExpressionUUID->"596e4819-dc42-402f-88ba-5448bff44d18"]
}, Open  ]],
Cell[237799, 4537, 1637, 56, 67, "Output",ExpressionUUID->"78ee2011-c904-472a-9316-5ea79090f8c0"]
}, Open  ]],
Cell[239451, 4596, 880, 24, 121, "Text",ExpressionUUID->"017e868d-ebc0-4702-a115-0decfd25cf22"],
Cell[240334, 4622, 1729, 58, 51, "Text",ExpressionUUID->"193d6fa3-f718-4c67-8a80-a00eb4a36b82"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242112, 4686, 160, 3, 100, "Section",ExpressionUUID->"5c26734a-889b-46d3-a44c-43d529158be1"],
Cell[242275, 4691, 9441, 230, 924, "Input",ExpressionUUID->"3608da8d-2ee3-4e7d-a9a8-137ab8c6e9cf",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}
]
*)

