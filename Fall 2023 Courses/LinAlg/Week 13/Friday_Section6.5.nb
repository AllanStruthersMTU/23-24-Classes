(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    441406,       8793]
NotebookOptionsPosition[    429605,       8623]
NotebookOutlinePosition[    430115,       8642]
CellTagsIndexPosition[    430072,       8639]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MA2330", "Title",
 CellChangeTimes->{{3.9022119421591744`*^9, 3.9022119446720896`*^9}, {
  3.902212079422366*^9, 
  3.9022120841135693`*^9}},ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-\
fddd9660e667"],

Cell[CellGroupData[{

Cell["Chapter 6 : Orthogonality and Least Squares", "Section",
 CellChangeTimes->{{3.902212090346334*^9, 3.9022121014134884`*^9}, 
   3.903769019997009*^9, {3.903769131050271*^9, 3.903769135610148*^9}, {
   3.9094840300048733`*^9, 
   3.9094840545824013`*^9}},ExpressionUUID->"c605c20a-b238-4a73-a480-\
b4d65497b721"],

Cell[TextData[{
 "At the start of the course we considered linear systems described by \
matrices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "6585b46c-941e-42f1-9d37-4f2ade511698"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[LessEqual]", "n"}], TraditionalForm]],ExpressionUUID->
  "834b762e-bd6c-4371-a393-5c7acf16e29b"],
 ": remember ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "24a7921f-05b0-43d4-a5eb-81aa5e940b2e"],
 " is the number of equations and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "3678c236-3b46-456a-b83a-411c8ef0c9cb"],
 " is the number of unknowns.   When ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", "n"}], TraditionalForm]],ExpressionUUID->
  "d50dd1fc-ba5e-45d2-92da-412abbf4d55c"],
 " we had a square system and had a unique solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SuperscriptBox["A", 
      RowBox[{"-", "1"}]], "b"}]}], TraditionalForm]],ExpressionUUID->
  "feab6494-14ef-4d34-980a-34ed7bd1a6f5"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "b"}], TraditionalForm]],ExpressionUUID->
  "5ad910fd-292b-4f01-9e91-45926a93b5e7"],
 " provided the columns of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "ca94c4cd-c76f-4b03-937d-3edc9d8dc728"],
 " were LI.  When ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "<", "n"}], TraditionalForm]],ExpressionUUID->
  "96aab533-8ffb-4dc4-b923-cc2a41759c05"],
 " we had fewer equations than unknowns and we could write down all the \
solutions by identifying free variables from the RREF. "
}], "Text",
 CellChangeTimes->{{3.909649877686178*^9, 
  3.90965031860753*^9}},ExpressionUUID->"dfb0c51f-3967-4d5b-8853-\
a8b8422fb9d6"],

Cell[TextData[{
 "The topic of this chapter is the remaining case ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", ">", "n"}], TraditionalForm]],ExpressionUUID->
  "3ba7d43b-6e1f-4d17-b336-46b8c1e4ce7b"],
 " when we have more equations than unknowns and the system ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "b"}], TraditionalForm]],ExpressionUUID->
  "65f1c59c-b502-4c2b-a1ef-c7c347cad64d"],
 " is almost always inconsistent!  Since we can not solve the system we try \
to make the ",
 StyleBox["residual",
  FontVariations->{"Underline"->True}],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "-", 
    RowBox[{"A", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "649fab32-1cb3-48c6-806d-f1563b050a51"],
 "\nas small as possible. To make it small we need to decide how to measure \
it.  We also need to set up some definitions and tools. "
}], "Text",
 CellChangeTimes->{{3.909649877686178*^9, 
  3.9096505164246798`*^9}},ExpressionUUID->"2abe7bc2-dc64-436e-ad63-\
790066d625c6"],

Cell["\<\
Think about trying to run a polynomial through some noisy data. I want the \
best polynomial (of some degree) that fits the data below.  \
\>", "Text",
 CellChangeTimes->{{3.910343485077057*^9, 3.910343531835285*^9}, 
   3.910343755018757*^9},ExpressionUUID->"086a5a1b-d712-4673-b0f7-\
5845ae5c758f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "+", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";", " ", 
  RowBox[{"SampleSize", "=", "3230"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AASData", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "+", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}]}], "}"}]}], ",", 
     RowBox[{"{", "SampleSize", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"AASData", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9103432746396384`*^9, 3.910343475272153*^9}, {
  3.9104291244168158`*^9, 3.9104291471511555`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a6ccb9eb-9a08-4fa5-8d77-a95d3aea0036"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$8380#1"]& ]}, {}}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.003666666666666667], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
XQo0vbKkZRTL8WDOckfLbSqccS92sKIf749Lx11tnwC/SqhpflMBhqZKWG6v
Ef5Wbiez05DgmAlnrXXRKXCfPVLIRzuDpc13S013dSHH6knob44hnMryHs4/
Ng6ViJrIpsfDmJ2sfZfePwqlkb1T5LoWtNF5t3F5keEfsC0l5EMbLnJeeiL1
gAqatT4mn/fueFVm2jHvOI2cJLfzKnfLse40cbXWggznpnZynvAMuoYPWaiX
dYHf5Kg4g0YVpGK+Y5roEd1Ph1iETrSiZ0ugTowkFfJxJyzjvYbx7Nm7YxEu
Y9ATP5RxY888xu0YmQXmC2Er8aFblJEE8xOrzt8IvjqUeIRTM2AKWRZavH1l
Q8imDJTcCV/CCcnR2KWaApCv5AcWm89AQeGKlXVTJ3Kcbu9ZtohEFH7fV7Ej
46BfeX+q8ixOOfNnUom55P/IRzmxfRmFxwv0RHZmQ6onnP/wMhl/zgdVDAZ0
Q3PrpRunYmYgSEdnODvRCr6P4tYHTswhafhyaZtBI8Ktbv67pruM2eQCwSfH
yqBuozM0kNADweNSQ3L2FBSMRd48kbiOhs986UevBEGF86PBDa4ZsLxINVOv
aYfJgXfC0wdr8S5A4PTg1xlw1iwLcEQ1YqfcYZFxIzJkZKPHdiQs4WDCXqbl
oRTEtN6TLdv9/+f3RR/q3l0CS+W85G9LG3jYvv/EYRl/knNEdUpD8iiCf5rO
5BqOIuLRb+5/b4ZxdIpFoWR2DHWk5GC2ETKGP2pJRu1rx0BvUR7pExm5ZTwM
hwt6ELO6OUpg5xTMLDz7/sz2oWZvZk0u4YniHLVnTqwQfHrn1Keer7Xo1Gsb
6OUnzkP6sRzZGEe0LWjEGzhNQtW31Wie4P9xvUfOwQt5sDU74DRtSPiWi7KT
qWUO0qjJ0o5fKFisvszw4X43jOu8n98wIno34qckybcPti9XYg0nSLCh2t83
uvL//2c7DGjFLkGzi+Wk7I90yETu2Sni3IhHEVbLgW/IqPH8B8WqCaQONm+7
4DoCpXyD8Zivv3E32mOLyolpyIPRN/jHJBRO2X55U9ILRjU3ZxeRGZDct6bu
KO+Ahq3LY2u3ZVTsHdxR8ScEBVl6yZyh87hzsG7FwbIO8xbOFWX5C+hY9jQl
L+ZAwsPgtaBmI1gu2F9fmqPArMmm2Dl0CD8YWuNbCb/3fMkgK8zSgTwR7WY2
DSosA1Q70/oWYKEqm5U2RJy3ybWNx63T8Eg7vF0gtQs0BQGrlwdL8XazZsIT
UQr4mR6Vi53Nh1SWUc9NPcKPzblV66zb8OePA1nWnAryiDTPno5cxFvcDnW8
RcVb50bOKoJv5meGGrOOdYFF/55usAgZNr6Cr2N/92JIw0/fiWYDk5rxm5v+
BpEGvm1/cfg8wZPO/z0Umf5Daiv78YFPmbi+S6TXihH56InvfzHvn4hAKv/m
rfkU9B0VqthhsIrgwfuS1JkfJFcdTiuFgAVEfpCcXZ4vAqvRTbdc1VWIXrWu
k6r3Q9qF04xpQkuYP1jeaEKqRhTfoE50whrcd1V6f9KIhF59Aush+xlsmxv8
NzzQChqu86OvHFzgLLk7rit1CpZ3xrLbmMdx03CMJo91DC2nbz1onhzH0JtQ
i8MvR0F7+w59n+Uy3PU749uFssGtJ8Jzw2YevQVVD8J5SuHvGVTPVzoMWstC
WrqjY2jI+Su5iWEDNG9Mvm3ifgTGrgNlD3yn0T5Tv2cjdhB3496OZagt4kWi
+p+jyIWtptagmW0bJLpE2g37KfA3fdO1j5jLA9VqqyLi9djm2P65YesyNjUJ
bTp/rgJNcbKO6aKz6InwuvTn/7/nKhHM3Z45jdkQR5n91gPICdnuPe4/jRFl
SbLr/h7IFTsnZJwk+JzpSvuiVSUyBIX+08ptg7DZjzti2lScPpk3bl61ALPL
1zeKtepRVMVpfstqGTGuenp+guUIFct6eOdUPYpHkux1TP7/e0tODbKS0Rhg
8qFv1Sf8663Q+I2SAZxX0Cv5QfCr5lc/tnnlAix/2ny9zJ/o35TP1K5nnZg7
IKB91IbIF7tz8VESq7gkOMETfTQaFdcXrFOsp1FN46fH1kh839u9zyfn1qCn
bipcuyUY2jeNC7fEr4Da7Ir0P964vTC31ZtlFQqfXIZo9qSAOp25mtO4jldb
3x1hEowg0XzoeTuyzRt71zbcBqKJXLG3MtpC9KD0KUFN1+pekKOVN6scb8ZJ
Ce33u7TIUPHY2i84NQi2drHIvxujSLNa/GR5ZhFmakcNXJMLQJP/vfwt7yKG
2ayKFGoJv1Mz0duevgy6SJ20NEEn/LLsYX4sTAVtyne9tOhm5KgNu0b+y4Vn
jfRJl0LCV6iPhP3ZhsGUwRde7jmO7BssZ4IVFiFWqaj1paEI1ie9H9KzUyE6
VMQq59sLUQ2lj8oHx3Gc8m5lSG0Mt7sFLibs7gFPl49lKC8ZCX/Xntecn0fl
VrP7RrGV6JEb4zs6MAfX3V0ftaNqYVuyM4K36AdyX5+9uo/g0oTMfSJ6SV1g
enHf4sfLafC/+sVCW9SBVwfp1Y1CiLza0nUqtmwcXEfsXIzuDWH9w+AB80IK
7nqZCO9R7sNE/tAp5vQB9LS6atokToHHt3tA4WYfvFK4dtgnTsDeR4O/48EK
nHmkLg6XuCCBnTFzZmADngsQyVB1R9BZuzdJFStgu/jwm39sBvTilNh/aq3A
yb+97OPdUDztbhM77U/FLVpOf5ODbYgrueTLITOPKkOHIYvntaCG2k5k/56F
xwPzi57kZrydmdsSRpmD4EDIxujvBsh7q9/ePToKxbuH7oj8GoP8tNLg4E4q
WN1/Kfgk9oJZ52a21LVuZGzrkFpgp2DsGt1R0bfL4Ny3v2/4WziUXgceIFnV
44lB9tbr4cR60UbRLb4h+q5CuJvjbg4US1sP/yezCltDVg5KuR/JiNszPz6T
jAiF12rZAn3Q3Ed+a71ehH9/JZgLWqiQsBb/9ObaEsbSf8s8uVsAswPRal/O
ruBDayu7AncuDC8HSlv/mkOBG7tSZV4tQik/R0YJTrL85TV05DgZzPU/QHd5
DDWbczNXZIYRemH85+7kVijKXXrmvESBhmKLyFmPZRR1pWZ8VyyAonBV1LYh
CiTd5JTa3rTAOE3svzDqKujfu8UmR+XAV7NKTjuHgiWV9gcPi3vwO9dp/2O7
DeSM7/Ftk/NAzeJNVc2BMbgHWefb643hyyezxY6ng/hPImsj23scy182MS1O
zEHf/leC0nARNjem/QmwoMDJ5QlLi0AvZFxrz50UWMUP9RSVEOcoRPCcOygV
SPj1t8D0Gd1SXN0kgSqnUci3GBzeRRmC0ZXdn9e21cEyI1PpJN8MaFrURRK1
32CxXvZFkB0FX04elGv5tIR+plbGv7sz0VPheV24txuVcvu6ep8QeVJ9g/9N
aglEU7iWFQivoekI/35ijYwoem4kvuiB7VPqWo1WGZqOhwR/vEYFHVfVh5Bv
y0gVcSzeQU2F0QVeC8HcFUSpTlRtb/VGziuryXt7ZyCZLccbx9OKlMpShdPC
k8gMVZV/qzSEnBVlBwPmZBh2UWh77xM8+DBaJyV4Dg8PpnANetQhh2XA0qG5
AS6BPWN2pygIavUXf8I9hATWY3uNgkdRZGhQ+sSDislt5lYXCF+W9ycJkizG
8Er43+Ta3UF86f4+Rv1vCXKRnsWp2YWYYp46f7h0BiG/DdJtn9Zjgun9nwrd
RUC0YuzKvmqY6UTIUoVGwSoXoVjdNA66fJMrrClLUF+RePk2vAjBR3L0bymu
gHwjokL67V/4Xwut+fykG/xydB8kzMlYfPHp4FpZPd50FgccfjoDvQW6l/uY
0/An3SKf5wIVtneiuD0bp6EttadNZ8cgLENYng7lLCAqiHt/7f/5+AalR//W
VzTGR50e+28Kth8tRUf416EzmtF5lTaJxN4b2bg0sAZb3XPPu9K+owS062q0
tWjWE3zOcYHYr+v3tCdMm8FOmn4iRvCUdfehzPzOWRTdcHx72agaEz6Xf7K8
78XZtKVV6SIy5vU8XRb3zaLMYtKV9m09hHjZvYS0lmFoKtTBYeMHmcZ9s7w3
W3GuySFHh5g/dZVOM3N5MlyOm1hWX+yD9Di6mkeJ3kliuKWk3QulhI5rhbdL
4OvyilE9meDJbkc17bBcmIwH8hofm8G62LimbTYVX68qFjyZawR7Z5wQP+Gx
jifpxhQetIA/7WOW86MirInF7m2UmEGJcSDDnpMzkGjQuiPQWQ9twd9JKrZz
EPKNdH9IaYbn94XnztpkREr9rJQL6kOBmtpBTt1xWArbGZHaRiFxrWXW/kEF
mjs0aBtVCX9Gt/3ozzJ05wwV8hJe0eP2vGaKMwXaxWrN1dmE32V9Xt5uMglZ
tS3yS0IDKDGqWpC/1omDvmEeUzNksNNvLo59uoT3Ihym+x2rQc6z4rzDVAH7
QLG/1kwziLvfaPDhCxVeDPS74uV7wMxGozexuoG4xISkSZ9/JAenl639onM4
Lru9855/CxKO3FufuzUKrY1nbp8mhhB63d5GPnMKd6T66TIV+iB6S01GZfsQ
3l2/Z6fVRfjcAZtTKpIb8GnadJIhJ4EUmvL61/EdfVBMn5p59GsKzqWvyo7I
DqNByvR4gPkkyEyv6PZvNMI5M9fJ5BEVMR/Dv4p3zCC18m/bjEzd/5+38OgI
M5Gfrxu0Qwz+g8e6II3/51nkv7JfkbnbDH3BjikvFzKif30S3mjuRajyaXU7
8SVUdtk8VwwsA2O1iMXqi1XoKYV1a/zzh+hNlkp6/Xn8995NjyWnDDTj9waW
42ah5cb4xFS0FYZGu9P0LcfAWkOz1eTGCFgd79CwTlMRpxi/t9S3E6qfU00S
KwhujjMLrbPvxPq9sYEu3nl0LWSl7LvSgJgBORen4Br0Mvp+XQ4kg9bljlTO
p0UcNInTDXiZhp47zYzc91MgKCH+73sMFRm7zYNnbAbx2Wjry9TrY1A6Fvml
8Ow/4u9JIjHOhM/Zi9EK/upF/xnVRy/vT4FmLn4x1t4fSV2Oj+erKfhko7TW
828SnRe+xuZ3DqLjmSrHT6E5yNh7/uyrqoE8p6lwxMEBtOSRsz67jCNo7Jbl
ad5xOHQ7uC3Qj0Km8PkJ945R2M3KKwe0D8KZYX4XR88QOO7S8RzOHYeny5Ez
Nw5VQsL52LuCWiquin2LXVuew0GxJ+9si5rQk6l8v+BeJbpa94c86yde31aY
IWA9hR0vuF1kQvpAk1vH/fp2Es6nUkXHFyk4721BlS1cRF/qvx2RJSVo0b7o
sM2vHX6n2/kfahF8mSe/7PGnBJLl2S1nzYg+tGPU3DY/g1+zrtNfcmpBt9N8
/IdTFyyk7c+M0FJh7hElsf//z0kp8ItMLeiDUjS3q2B4Gpx3bNe3JdZHN/uI
Rq/eLDpecs2mh7WDZs86I+dgP1SThyk/n02AmZUkIfZ1FHTvll5EuY9DL6Hj
81//eoQolHa7zVMwck3+GENYM6qmc95tI/arTvJh8dMjVCTvMFGUB5En6xKj
oQZNkHGplm9bIvKT8U6xokY1Yv6c1PZpIHyJ/VRblMs6QoXYLdQMImBrZfC1
5y3B3YwcKl+du9GjMl6x72o9NFg9Txa7UPE+315amnMBTlLpza1edfAwmGvK
3bEEz2jDh89QDQnZzng+5WXMC/d9H96ZjEyZj/t01pag7OF1IdE3H9IL/SrP
ZtfRs+vxtxs3vyBhgqNjuKUIN+RPKaYR/ZUR9OUK/6kJLA9VRnXmD4Nls5eF
/o8N9HwLbWcOjiLR3LaVULzUA8moT9+EiT5LuEzv2taYg6a6ihsg1rMkNO2a
wtUesLbFKu0l+FGltqbcQKAfuQquNU+NyeC3Nw36uTAPzpeYPcpfiKf+JIaR
y4OwG83cT+86hZG/3U9kFrqRIOYjP6BCeAvHCb7lvwO4/YdNrLljEtveioeY
kSjgLnSyHuXuhbZMrLr81CqsN5//r50pHXpaD8JPjJcDIXHBj4m+uj2ZseW6
2QRimi+sBEaMgCxfs/XLUhsent5dbXiHghSJuxVb6ggfvf1Re74+mtQi0+2h
/GMW1zf77q+OqcPs0swJ8qZR7PluEGTCNoSIngm9ohqCXx0UWb60h0JT9+l9
Ua9chFgGkCmVVChtBM74fs5DucH/Krr3b6gTMAzggy6kVuy0x4pSdE5WW9ap
dat9FGuHTbSRpUzFalUTldrTiWhcMlYXI8YtmdxKxwrtFoYdaVvtkEtkh3EZ
Y0yTxlxM0zDD2m//wvue9zyf95f3deBz4gnvJY91mSX0Yt2D8fsMsQriMpeE
6CEF4ubDB3o+HwepkE8+MZeGQgFNiJ+UCJPfEyz3n4F/Frv7Gn0YifcVztrd
xL7oI30aJDqC7H/aO3gpC3iuyKpV5zega+nSTK++RYjzimqdLpWCsr4zcXZC
j0ID3gFhcCVY527FFVMWMWXK4+0ZquNeSbUeY2ybB6ut67cWajVIEbGuC+xc
xOuveS+cIuZkSUg7LS4SWindotRFhcdz96gBblqwV5HPerl0wJ4ZcI4dJwf7
1XuZM30SN3iZcFw3j5M5pHZ1TgVSsy/tWXJZDg8bieUPxpNwzSs9XHR3BPoc
55qpG0pYulMPptInwLHz3NoknkbXft8IXcAiCrWb81dZs+CZ8i75g60MA5sK
PBqeS3E+xpBfbz2DrKsTKdOZ47ii+N5cGTSA2LWicpFGifN1qjDjs/N4meCf
J5qsQifDy8nPV4atW27vsFr7Bq3kndLmBDHsm9Q+MUYK5FPNFnYSbuA7Vuq2
9wpQmmfVMtagh2eoWe9+5mFQrtGDb2fo8Nle9xcbTThg3xqvGqWPgcEJz+AT
e7prYVJjSLQKDgo562ztMHomDY4abiH6Oxw6yvFUY8Cn6GJJ7Aykf5nOdmwY
hLQ25o2SNg7TpBFm7wMlGHc41S+EH++sD7aVpEtw1HL/CSfCyXsNQz3WRE/D
VsHl95F6YPjEr43sNoPU3aSyfte3+HrkUPV3x96iM+X0ouEOIQbiWn3m/FUg
mRaseMqZQsbvUTbnsgiPPkkbnVv1DF3H/A5FlRP1SW6pGcqVwV3GooSvlBA5
tP6u369KyHpuDi+RCPHJCiskhc9D6GZybNvGEq73p7nfRv4ixuqMmiZv3hQ2
B0akzy+bxmJbyo3idBGGK44++cpaCSNdk1NumQiXqj3eGzNnMJhxQZObJkBM
8Yio890skqmSO34Gz2CcWDbjEahFpkVyVDzhIk/uyRGNnRRS8zU2Zfw3iOA6
nAq+rsH2x3R9cNhLeKYZUKxPNsDX32hWXq9EdDQ5j3dcjdSYYEqzWx+2R7qI
jz+UQ/4H48KRi2JQY18rux0+QD3reMSioQO1uqRHGqoAG9I7p0qOEznsznxU
l92HM5bW+/IS1Vi5/MCYvlmJLx92NwpzJlBrE1LgGCHB3J5dcUPkKdhy7Rtj
tIS3+i8ECvpU6GFwzNtD1HC8WbDj3oFhtK5bzY6sF4F2XUHq36RCaymz3/CL
cgSYC2gW+4j8jfjmA71KBJOSHlaglQr5BRWyyvevIKGt+VtgQng6+LRR/Md/
3aHdZl72zTi/THZ19xnCSwnNg+lSIep/vOJDf66HnWB6tPzfx8he+3OVTrcI
DZX23zvZn9wgg4PZu16rcfnOEKvfTYD/Adz85gU=
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-0.0638431213855466, 1.1263512428029165`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9103433009400606`*^9, {3.910343416245141*^9, 3.910343476271535*^9}, {
   3.910429131426136*^9, 3.9104291480418544`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"74ff1721-15ed-433d-9f1d-38e0fa120ab5"]
}, Open  ]],

Cell["\<\
There is a built in fit command in Mathematica. We want to understand what \
this command does.  \
\>", "Text",
 CellChangeTimes->{{3.9103457128652*^9, 3.9103457200712423`*^9}, {
  3.9104255421184177`*^9, 3.9104256197863803`*^9}, {3.91042620269915*^9, 
  3.9104262041609783`*^9}, {3.936691576700435*^9, 
  3.9366915862765713`*^9}},ExpressionUUID->"d54c28ad-2bd8-4c3e-be2a-\
672d5a332de8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"p4", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910429314708931*^9, 3.91042934047243*^9}, {
  3.910429370550886*^9, 3.910429385406766*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"bf9af711-1ec9-4080-bf33-edee503744ac"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11189#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
E6UM2nNpvsnFReJEl8fNuhm0/wNnq/Hj
       "]]},
     Annotation[#, "Charting`Private`Tag$11189#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-0.0638431213855466, 1.1307171686305808`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.910429342353471*^9, {3.910429373736145*^9, 3.910429386259782*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"bb8a8b00-61c9-425c-a744-88535e87c23d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "[", "x_", "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"AASData", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "[", "x_", "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"AASData", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}], ",", 
      SuperscriptBox["x", "3"]}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "[", "x_", "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"AASData", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}], ",", 
      SuperscriptBox["x", "3"], ",", 
      SuperscriptBox["x", "4"]}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Fit", "[", 
  RowBox[{"AASData", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["x", "i"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", "x"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.910343543502756*^9, 3.9103437018367987`*^9}, {
  3.910343745332755*^9, 3.9103437456455336`*^9}, {3.91042930059346*^9, 
  3.9104293071107216`*^9}, {3.9104293611705427`*^9, 3.9104293628162317`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"76daf3ea-0a5a-45c2-90fd-80b767ac2562"],

Cell[BoxData[
 RowBox[{"1.2313534730611986`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.5582750749008661`", " ", "x"}], "-", 
  RowBox[{"0.06763340502236782`", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.9103435587827415`*^9, 3.910343702462943*^9}, 
   3.9103437474259777`*^9, 3.9104292550324845`*^9, 3.9104293081547966`*^9, 
   3.910429363855904*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"1cb2c31f-0500-419b-bf48-bce9cfd01237"],

Cell[BoxData[
 RowBox[{"1.0692841021419663`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.4392260907701522`", " ", "x"}], "-", 
  RowBox[{"1.3249929015512878`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"0.4211773849679802`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{{3.9103435587827415`*^9, 3.910343702462943*^9}, 
   3.9103437474259777`*^9, 3.9104292550324845`*^9, 3.9104293081547966`*^9, 
   3.9104293638629313`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"a35ef4b3-86d3-43cb-97e9-eacc60c9adb8"],

Cell[BoxData[
 RowBox[{"0.9947208802993066`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.1999396601657901`", " ", "x"}], "-", 
  RowBox[{"3.0436041839391788`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"1.7618371179946521`", " ", 
   SuperscriptBox["x", "3"]}], "-", 
  RowBox[{"0.3361557371661333`", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{{3.9103435587827415`*^9, 3.910343702462943*^9}, 
   3.9103437474259777`*^9, 3.9104292550324845`*^9, 3.9104293081547966`*^9, 
   3.91042936386808*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7517b789-8192-465a-8813-f31469f7cda0"],

Cell[BoxData[
 RowBox[{"0.9947208802993066`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.1999396601657901`", " ", "x"}], "-", 
  RowBox[{"3.0436041839391788`", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"1.7618371179946521`", " ", 
   SuperscriptBox["x", "3"]}], "-", 
  RowBox[{"0.3361557371661333`", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{{3.9103435587827415`*^9, 3.910343702462943*^9}, 
   3.9103437474259777`*^9, 3.9104292550324845`*^9, 3.9104293081547966`*^9, 
   3.910429363872686*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"c6016498-f263-490c-a298-c96f14648e81"]
}, Open  ]],

Cell["\<\
There is nothing special about Mathematica. Julia, Python, Matlab, \
\[Ellipsis]all have a linear fitting command. All run similar Linear Algebra \
bases algorithms. \
\>", "Text",
 CellChangeTimes->{{3.9104262093514853`*^9, 3.9104262906817007`*^9}, {
  3.9366916151789455`*^9, 
  3.936691624186028*^9}},ExpressionUUID->"ec01fa67-d252-4004-a2f7-\
25bd6d5fa165"],

Cell[TextData[{
 "Important property of transpose and inner product.\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", 
     RowBox[{"(", 
      RowBox[{"A", " ", "v"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "\[Transpose]"}], "u"}], ")"}], ".", "v"}]}], 
   TraditionalForm]],ExpressionUUID->"fa465ea0-b045-484d-b709-8ec8ced60ca7"]
}], "Text",
 CellChangeTimes->{{3.9104266300439262`*^9, 3.910426695058872*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"572576a9-6c77-4ae5-92a8-ca3c46a80eb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "m"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "m"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"u", ".", 
  RowBox[{"(", 
   RowBox[{"A", ".", "v"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], ".", "u"}], ")"}], ".", "v"}]}], "Input",
 CellChangeTimes->{{3.9104267197487993`*^9, 3.9104267700543633`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"dbd4703f-7cc8-4416-8ce1-bc628c5e72e5"],

Cell[BoxData["0.35904145501795665`"], "Output",
 CellChangeTimes->{{3.9104267348284464`*^9, 3.910426771281389*^9}, 
   3.910429467125016*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"24dee2f9-e95c-4abf-a422-0a18f7aceb0f"],

Cell[BoxData["0.35904145501795676`"], "Output",
 CellChangeTimes->{{3.9104267348284464`*^9, 3.910426771281389*^9}, 
   3.9104294671302557`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"94b2a32b-a8ff-4393-820f-7ef49c6095f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.1 Inner Product, Length and Orthogonality", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
   3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
   3.9032571816654167`*^9}, {3.9033481088363304`*^9, 
   3.9033481177150135`*^9}, {3.903769157829028*^9, 3.903769170909472*^9}, {
   3.909484073129572*^9, 3.909484084627141*^9}, 
   3.909485796050621*^9},ExpressionUUID->"1787b355-af8d-4074-bad5-\
55f6aa7b743e"],

Cell["Much of this is a review from calculus. ", "Text",
 CellChangeTimes->{{3.909484088566098*^9, 
  3.9094841034633856`*^9}},ExpressionUUID->"23f82b05-ad13-4359-90ee-\
d293eac5017a"],

Cell[TextData[{
 "Definition: For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", ",", " ", 
    RowBox[{"v", " ", "\[Element]", " ", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]],
  ExpressionUUID->"dc4c1803-6401-44df-bcf0-f29d07afcfbd"],
 " the ",
 StyleBox["inner product ",
  FontVariations->{"Underline"->True}],
 "or ",
 StyleBox["dot product",
  FontVariations->{"Underline"->True}],
 " is  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "v"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["u", "i"], 
       SubscriptBox["v", "i"]}]}], "=", 
     RowBox[{
      RowBox[{"u", "\[Transpose]"}], "v"}]}]}], TraditionalForm]],
  ExpressionUUID->"ab561610-8fbc-4e5d-8eab-e2d42966cd89"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"eb74f0e9-5507-4a99-affe-783e9ede3b2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "v", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"6", ",", "7", ",", "5"}], "}"}], ".", 
  RowBox[{"Array", "[", 
   RowBox[{"v", ",", "3"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.910077065956032*^9, 3.9100771062430463`*^9}, {
  3.9100772398702154`*^9, 3.9100772436322064`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e8d753bc-d05d-423f-a21c-ff38e1da2b6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   RowBox[{"v", "[", "1", "]"}]}], "+", 
  RowBox[{"7", " ", 
   RowBox[{"v", "[", "2", "]"}]}], "+", 
  RowBox[{"5", " ", 
   RowBox[{"v", "[", "3", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.910077075020343*^9, 3.9100771081812572`*^9}, 
   3.910082893971467*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f93c9433-5826-410f-a4a7-96a4fb31fda7"]
}, Open  ]],

Cell[TextData[{
 "Definition: For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Element]", " ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"6e6fd2cf-fc7a-4e13-a543-2b9039469c0d"],
 " the ",
 StyleBox["length",
  FontVariations->{"Underline"->True}],
 " or ",
 StyleBox["norm",
  FontVariations->{"Underline"->True}],
 " of ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],ExpressionUUID->
  "4f78239d-b452-4e75-bc91-1e0554758cb2"],
 " is",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", "u", "||"}], "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"u", ".", "u"}]], "=", 
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SubsuperscriptBox["u", "i", "2"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"d3b0aaa6-539a-476e-a5e6-23ad9b5eac09"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"7965ec10-1a9e-4eb3-9b48-5d7f023ae1d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "v", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{"Array", "[", 
   RowBox[{"v", ",", "4"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9100771168897066`*^9, 3.9100771327786674`*^9}, {
  3.9100772465619445`*^9, 
  3.9100772481856766`*^9}},ExpressionUUID->"06895035-73d6-45ab-9370-\
5fccf9688eb8"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"v", "[", "1", "]"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"v", "[", "2", "]"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"v", "[", "3", "]"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"v", "[", "4", "]"}], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.910077133246869*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6ae9be72-a6b7-40c0-838e-a12219d15447"]
}, Open  ]],

Cell[TextData[{
 "Theorem 1: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "v"}], "=", 
    RowBox[{"v", ".", "u"}]}], TraditionalForm]],ExpressionUUID->
  "52fa72b1-b757-4f9b-9119-9ea0be3385b2"],
 ";  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u", "+", "v"}], ")"}], ".", "w"}], "=", 
    RowBox[{
     RowBox[{"u", ".", "w"}], "+", 
     RowBox[{"v", ".", "w"}]}]}], TraditionalForm]],ExpressionUUID->
  "bbd1d600-1946-4eb1-a666-bb4871f0d2b8"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c", " ", "u"}], ")"}], ".", "v"}], "=", 
    RowBox[{
     RowBox[{"c", " ", 
      RowBox[{"u", ".", "v"}]}], " ", "=", " ", 
     RowBox[{"u", ".", 
      RowBox[{"(", 
       RowBox[{"c", " ", "v"}], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "f7dca971-1231-40ea-b1ed-84347775ea20"],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "u"}], "\[GreaterEqual]", "0"}], TraditionalForm]],
  ExpressionUUID->"e01ceda4-4c18-4ac7-8c54-4c08d335a9ff"],
 "; and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "u"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "184e12bf-3cd2-4acc-90d2-410420557329"],
 " iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "f6ef5b59-6a42-403b-a484-7a6771a3b7c3"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"dd1d0410-e4a9-4bf0-bab2-5554fc02da32"],

Cell[TextData[{
 "Definition: The ",
 StyleBox["distance between u and ",
  FontVariations->{"Underline"->True}],
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FontVariations->{"Underline"->True},ExpressionUUID->
  "b568883b-b497-47ae-b9e4-cb07b993000d"],
 " in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]],
  ExpressionUUID->"ddbb2d71-b048-40ee-887a-2d1174dfc89d"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"dist", "(", 
     RowBox[{"u", ",", "v"}], ")"}], "=", 
    RowBox[{"||", 
     RowBox[{"u", "-", "v"}], "||"}]}], TraditionalForm]],ExpressionUUID->
  "051ec6ac-6573-4bad-a2a6-fe6403300a12"],
 " "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"00c9ef9f-0f44-4021-a965-8a8b77437b2b"],

Cell["This is just the distance formula! ", "Text",
 CellChangeTimes->{{3.910077144570835*^9, 
  3.9100771573403993`*^9}},ExpressionUUID->"1f77d205-0d47-448f-98a6-\
691eb92bc00f"],

Cell[TextData[{
 "Definition: The ",
 StyleBox["angle between",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", ",", 
    RowBox[{"v", "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]],
  ExpressionUUID->"73e8ccc0-bc6c-42a5-8023-4d8210fafe48"],
 " is defined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "v"}], "=", 
    RowBox[{"||", "u", "||", "||", "v", "||", 
     RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"b89bb4e2-b7ac-4109-937d-dcdee0c7d9f2"],
 ". They are ",
 StyleBox["orthogonal",
  FontVariations->{"Underline"->True}],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", ".", "v"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "541cc54a-de4c-44d2-b743-342a709e7f2b"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
   3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
   3.909484424879016*^9}, {3.909484613582157*^9, 3.909484817332931*^9}, 
   3.909484862832632*^9},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"382ea729-d71a-4a0d-b692-c3767e07f476"],

Cell["Again straight from Calculus.", "Text",
 CellChangeTimes->{{3.910077144570835*^9, 
  3.910077179379331*^9}},ExpressionUUID->"2a7fe0b6-7c69-4145-a1c5-\
f1450467d6bc"],

Cell[TextData[{
 "Theorem 2: Pythagorean\nVectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", ",", 
    RowBox[{"v", "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]],
  ExpressionUUID->"6b73854b-b2e7-4b9d-ba89-d828a7bc4f9a"],
 " are orthogonal iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"u", "+", "v"}], 
     SuperscriptBox["||", "2"]}], "=", 
    RowBox[{"||", "u", 
     SuperscriptBox["||", "2"], 
     RowBox[{"+", 
      RowBox[{"||", "v", 
       SuperscriptBox["||", "2"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "e3d3cf7e-ae2b-403c-a384-503fb4c99ffb"],
 " "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.909484897285681*^9, 3.909484976472904*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"943cfe63-8292-42fc-a7f4-9b105359bb55"],

Cell["It really is just the Pythagorean theorem. ", "Text",
 CellChangeTimes->{{3.910077144570835*^9, 
  3.910077223120666*^9}},ExpressionUUID->"2376b502-8612-4adf-bbee-\
8b8692319787"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"v", "-", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"v", ".", "u"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"u", ".", "u"}], ")"}]}], " ", "u"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", " ", 
   RowBox[{"Thick", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "u"}], "}"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", " ", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "v"}], "}"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"u", "+", "v"}]}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"LightPink", ",", " ", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{"u", "+", "v"}]}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"LightBlue", ",", " ", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{"v", ",", 
         RowBox[{"u", "+", "v"}]}], "}"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9100772285808887`*^9, 3.9100774135480485`*^9}, {
  3.910077447688213*^9, 3.9100776241876974`*^9}, {3.9100832388924017`*^9, 
  3.9100832460104494`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"577ed621-6cbc-4257-92c7-f1cecb13363d"],

Cell[BoxData[
 Graphics3DBox[
  {Thickness[Large], 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{0, 0, 0}, {-0.03653544950062271, -0.029131227220270617`, 
      0.26636351833138194`}}]}, 
   {RGBColor[0, 0, 1], 
    Arrow3DBox[{{0, 0, 0}, {-0.9514015176547517, 
      0.8298475554068678, -0.03974044371638816}}]}, 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[{{0, 0, 0}, {-0.9879369671553744, 0.8007163281865972, 
      0.22662307461499379`}}]}, 
   {RGBColor[1, 0.925, 0.925], 
    Arrow3DBox[{{-0.03653544950062271, -0.029131227220270617`, 
     0.26636351833138194`}, {-0.9879369671553744, 0.8007163281865972, 
     0.22662307461499379`}}]}, 
   {RGBColor[0.87, 0.94, 1], 
    Arrow3DBox[{{-0.9514015176547517, 
     0.8298475554068678, -0.03974044371638816}, {-0.9879369671553744, 
     0.8007163281865972, 0.22662307461499379`}}]}},
  ImageSize->{339.86087545903183`, 136.8129885090024},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.4685791839358986`, -2.9897162721363695`, 0.5957111654427678},
  ViewVertical->{0.06975151496863352, -0.15230850757123135`, 
   0.9858685737363804}]], "Output",
 CellChangeTimes->{3.9100832009201345`*^9, 3.910083246832*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"02984770-0b45-4b70-a43f-9471e96b0fd1"]
}, Open  ]],

Cell["Orthogonality extends to subspaces. ", "Text",
 CellChangeTimes->{{3.9094850025506306`*^9, 
  3.90948504084778*^9}},ExpressionUUID->"63732a28-40b7-437b-9e81-\
d4f7593b720c"],

Cell[TextData[{
 "Definition: A subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"cfec76ac-f67a-4c0f-ae54-4d99cae1c186"],
 " is ",
 StyleBox["orthogonal to a vector",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"aef7f039-4b06-4c9f-8143-bbe89bddcaad"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", ".", "z"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "bcf06685-5cd8-44f4-8a04-3e2ab5bca9e5"],
 " for all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "\[Element]", "W"}], TraditionalForm]],ExpressionUUID->
  "ce92a491-00d4-4a1d-bb38-25a12eae690a"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
   3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
   3.909484424879016*^9}, {3.909484613582157*^9, 3.909484817332931*^9}, 
   3.909484862832632*^9, {3.909485061004411*^9, 3.9094851571014166`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"a1fc2136-9b2e-46eb-895a-d93854c921b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"Normalize", "[", 
     RowBox[{"v", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"v", ".", "u"}], ")"}], "u"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"2", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "n"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zu", ",", "zv"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", ".", "u"}], ")"}], "u"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", ".", "v"}], ")"}], "v"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zPerp", "=", 
   RowBox[{"z", "-", "zu", " ", "-", " ", "zv"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"u", " ", "t"}], " ", "+", " ", 
      RowBox[{"v", " ", "s"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", " ", 
     RowBox[{"Thick", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "u"}], "}"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "v"}], "}"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", " ", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "z"}], "}"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"zu", "+", "zv"}], ",", "z"}], "}"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"2", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9100772285808887`*^9, 3.9100774135480485`*^9}, {
  3.910077447688213*^9, 3.9100776241876974`*^9}, {3.910077658540254*^9, 
  3.9100779275171814`*^9}, {3.91007796112617*^9, 3.910078148857728*^9}, {
  3.9100835779260907`*^9, 3.9100835953848505`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"f4e11e64-0629-4cfd-891f-c8868648a833"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
MfgLH0OB8DSUxGg8DR2Fp8FC+BuqCH/DIuFvULwO9YXX4bbwOjQQvgcD4XtY
J3wPbYUHwkR4IE4JD0Rv4YcIFn4IW+GHMBTeiEbCG6F4IyYJn8QF4ZPMFD6J
OcIzYS08kzWFZ0LxTyj+ScU/DTb7e694sDqaw4esTSlj6IfZMevMq1YrYYmP
6b2ZJ0vrfsSWjmeHBCFz25XnTSf95syoodl/6H/jnYhp1wY1LuCzQxWvPXH7
iEb1jS0yPb5xXlTj1XMbFbLBk24ezb55Y7Z8HurzuCWfZxP5PBbI51FHPs+t
8jxQz0MzeR4kdTwxxC80FsPtnOPuOXvz8utOJ87X/41kuU4DuQ51nVZVWoW8
X1XEuzqu1qdfFfDCzmt2x2KdoK7jjlzHQbnO8r7a90Vf+b7Mlu+LfPcrnyxr
x9DxR7P91377YeQ/82+E9PpNkxOvO4c0L2KF7MxKxckFzD8e0N/5iTvUdajr
UNep7gN1H6r7oN+ZI4NdtkeX5lfrdim/AnA8uWjovIDfXNe2c8ubDkXcV+Z2
5Xb6hSzfuTjgyD5XqOtQ16GuU90H6j5U90HXPAu7eqNi6fh8+J48J1/EV2J3
PYff7HP//RqHxUWMz/66+uiSQvb5vvPPCq6eUNehrkNdp7oP1H2o7oMx1/8O
NXSNoK5b2M40N1/0rTdzlW31nzz7Z2rxkbcJ3LzHrlFS2zf4sz/Wpif/oMPR
ldMGJUXTfW3Tm37nP8Jxnw98/b7TJqdTwh2XJOrcfa6bP38JX997ZljT9ju/
GD0aOi09ltF2JUetR9nD4NvI2vmXvvHNo6Vf331MYXLE2+ntHzhySNPO9Xps
+sbI8hld1uXE0/rHOlMPg+t0W+IYW39eAb2W3nsV7pHGcZW2HTo32oOuR68l
TB5SwBznrg2OFSbSIMhhXd/hLhwT2vNZv055jGmXcvObTwZ9T1TL82gRQKOS
ei/XV8hj+e0rdGx+JNNj0/2kZs28+XXs3X3Ts7OZH9PxeJ2gLJb8M/26V6Nw
eq4+fPCsR/b/eL7SB95SPL+h/sNUF500Fu0pOtuiQRBttuo/LlyVofhSBtsq
Lv1Uceka3Yx73srOYZfQ4pIlFRP4+Haqid3zZA552oVFVbPYccKY77r7YvnG
oFb+9iPxbFhtw52eebk0jG4VuHRPMh0OBnwvGBZPmxfP/asczOYQ47Xetcsm
0rVN8bl3jaOpl3KmKQvyaJpo9GiZTjp3B1nqr78VRTurgNHnD+fQeMaFu3V2
pvByjc/rq04KYueP9ifHFeVzVfrqvcu3Z/HcFZOdxc6BdFxX4NT2WC6XmXFH
3Z/pNLuL9W1CPNjntl+F0OICGm750q3v9tL7fTQ9XO7NF7pNqt/H7kQeDXrn
dT48KJu6iwN/zW/7goP35G1d/KuQ43/OvvhiYB6z71Tu2jbZnl7d/7yH0/kc
92L/uao/cjipzO2AX773MXJu3ez8399oujO3fL/ifJ7cZbBl+9gnCK7+VwtP
qwKa6Dcpe+RVHns8e5tiu80dJyfOO3OzoT8bRgw68o97EN7OzRx07tt3vvgY
szikVTDTvDPDL3p5w9Bvfk0Hp28Mx9xBtbqGc8ehobN63HuPj8NDokL2FbDM
zDUHWzeN5gXXs2Wf+d/BuBcTnv4Yl8d6jWzXDdaL5YIJGS8fbreldwfX3c3r
5bCDf9ZM03bxPMTTDiG9PvBBr/U2O15kcMDJP0at75zInOXnD6+q68tn9WeP
dRmewvGKnzdX/NxJ8fO5lZ80vdcnle1cLuY5lCtdT2G9T42eG80NrpkVXPXT
OdDd+fMryzje3D54SZOoIB6w7J4dOSSTk72Srr/+lcgVB9rPHPbNk+Nb9Mv4
2Sqbi/1rbnmzNZUdO9z6etPMgSY/TeYdbptDi9A/Jzl+y6Duriq9dsy4A7NQ
86CGHXI5Zs3jM7NfZ1PPP1Dn1KyPWOZwbtzt0nXzV97Q35Gbc1ly8+yAoaf9
8fCHz4XKga5sUXDl3Ngv4Rj+xLKaRew3FqV5D92Q6sHc5InJo30C4K5XGH7l
XgFbZy4uWL3Tl0dfldtw8rEnJpxe/phr8mi0KOnT7UOBXGL4tXuTjYRvuZid
Mf1yuCpy0dWwM6F0Pubw8J8lR/E49eGNiiUZtDJJXFf7aiQLW1wfljfDgQ6e
50eMOZrCWUl2N9sYx9D/7ooSi1af6WK7O/lYkwSuUfy8geLnXxQ/3zun1+bp
sxNouMI37F35MN7PsJ3ZeVUwzzddN2/D/CT2H6TrNvd3NLcurjFifv2vvB/0
dNyJJSmcYNjv8jyLeBokrb0ed/k1357J6Xt/ZRoXGM1eP/97EqN1Vh0vibkO
74k9W7mty+CWCfvGLDBPo25+VsO1+IC4amurRW/K4knjh60W5mWysHfrkT3L
+ePH/OCt252yOfXR0p+9+ucwfuU4nfuJ4bDcU/DI2uMAT+//7f0rMRqff9YJ
netZwMqnHBcvb23PIp2ned/9QjFx1cEHe6zy6N0/Yub12+/okT9vRFGIH/yj
flnc/juHzTQ/9olDNT/2CbaaH8vkM023vemr6fZLvNZ0O4Whmt76c42mt6fo
qultAstoOhnMj5pOOtNL08lodlD8XE/x8yeKn9/VdCmagzRdCqSLpkvefK3p
SSyXaHoSTlNNTxzpqelAPMdoOhDDNZoOXEK05s8Taab58wRW1Py5G/LuPNu+
8XIyzV38h1cvSGbW+8eTW23wQ8X5+YtPXk/lMfcfTWusS2fEr+Bql6aFo3HL
PlMe3EnnTa/WeTWyspj4T5n5h67EYsDYuns2hL/DuTq2gX8ticOkMbdtRjnk
Mfx5x2e1T9rjd6M6v+8FRiHwTZOtS3fmUO++SW0//SPwq+46ySY8GM9n6J1v
cCyTNlqOu1fqT/7NcT5w0nJcKjO1deHIQm1duKl1kcBhWv1/oIVW/09U/cfw
pFbnXkzW6tyGL7U6D1Fc1491FT//rPi5lVa3Qeyr1a03zbW6JV9r9RnGeVp9
lvofrT5PIVqrwyge1+owkkVaHbqivJbrYzhLy/WxlFzviwYl/ULbfYjjur5t
8Wx9Iv2PLWx42D0MnV9vcjX4ksDDg8Y2eJ6dwpi4j0vKmMRikPnLx397J9Ha
cF3G85UZDNaJcHv7MREm33YfDLnki4tXzcIfpSQg6Hy/Td1u5nBuScUlo1p5
Ys8F/QqPVsTCoc6MU1f9M1m/ZmWGVXdDaNt2M02jIuBSMLxP7LxUntb4zys8
1vhPIL5o/CeB2dp83US5xv/O11cEaPMVQ0ttXi7yoTYv79S8hFJfG/8XvKCN
/zU1/j5cqvh5NcXPPyl+/kIbzy+crY3nR+qU+Xc8d6GMNm4+nKmNmy9TtHFz
QQdtfAJ4UBufEMZq4+OLCRoPDOEMjQdG00vjgWHYcN985cOoCK6+v15/Zm4c
I7ocX7WlZizG1/6hl5Mfzf22l3RnrU6iv9HNL39aJsLMc0C16sWxvPziXdKs
9FR+WejQMTcnFbqjLb5uHhWOy51rx1ZYnow3n88cad8si6neP4sNBwdjf9vU
qhUy4+H2aEf3ZfdT6Wq6vX2N3v5Y0+J97/JrY/D15FKfR/0TeVXjxt54pnHj
MARr3DiGmdp93HFQu4+/uk8ob2ifd8Yr7fNfFLf34QPtui2oXX+j7vOOG+P8
L+e1sxtkZT7c5Y9TDweNW7KziUmdw4MOyOd5Uz6vePU7nJT7877cn6Fyf4TL
83CXPA8/yvPASp6fj+T51edj8Fq+L1fI96W3fF9Ey/hwj4yPuk8qKsp48qKM
J51kPLFAxh/XZPzxScafk2W+cEjmC34yX7SQ+cV6mV+o+aWJ1ANmST3AQ+qB
PaR+cFzqB9FSP6wq9Yb5Um9Iknqju9QnVkh9wltb77u4TfHzjoqfeyp+Pkvq
H22l/ukn9Q/dhtp6wVVZL4pHhcJG1hcLNT38StHDGKyS9ci7sh4pvz8moJys
X/rK+qVav5go652Wst75StY7Jog+8JzoA4NFHzBU9AQ3RE8QKHrC7qI/OCr6
o8Ynlk1Fr2AuegWlV6ws+gYz0Tckir4xVfQQVqKHyBc9pKvoJ5aKfkL6+yle
Eb3FINFbWIjeYpPi53qKn3sofn5D9Bx6LTU9h/iWEPwl+o/hov9U+o866Vq/
QIr0C36SfoFs6S+wlv5C2beQCp17Wj+ih/Qjqn4EB+lfLJb+peYrBx2l3/GM
9DtOkX6HFtIfcUf6I+KkP7Kq9FOclH6KUOmnLJL+i63Sf5Ep/Zfx0q+xQPo1
dKRf00f6OyZIf4eB9Hc6iR/AGvEDkHzhiAfiHzBM/APcxD+gh+Ln3RQ/t1P8
vKr4EwSIP4HkuGjEi59BtPgZfBA/AyfxP3AQ/0PJrSnoLn4JfcQvUfY7ZSJW
/BXcxF9R+St0FT+GPPFjnCR+DNZ7Nf+Gk+Lf+EX8G36J34Ox+D3Eit9jkvhD
nBZ/COUP6S9+EhbiJ1FP/CTfif/EIvGfqj6v87H4VUwSvwrlV/GP+FsMFH+L
zeJvcVD8MEaLH8Y98cPYqPh5c8XPlX/GXPHbiBG/jXfit3FZ/Dl0tTp3UHWe
AnPx89ARP0/l5zFJ/H/pc2r+X9V/DjpLXsAOyQscL3kBlbV14YEMyRdU+QKO
kkfQWPIIVR7BCskvMJH8gp+SXzhP8g7GSt6Byjs0lXwES8lH0JN8xImSp7BM
8hRUnsIRyV8wlvwFlb+wWfIahkheww3Ja1go+Q4dJd9B5TtMUfy8reLnKg9i
iORHFEl+hMqP6CJ5E+ckb+K+5E00knxaWidaPoXKp6ggeRZLJM9S5VnES/7F
Gsm//CD5F06Sl5EoeZkqL+OC5GvUkXxNJ8nXCJU8DlPJ4+gqeZzekusxXnI9
VK7nB+EDMBQ+gMrCB/BWOANWCWdQOuABe+EVMBVeAcUrcF+4BwyFe0BxDwwV
foKuwk/wWvgJuit+3kXxc8Vh0ES4DUqE2+CucBtUEi4EX+FCSk+ykS98CeOE
L0HxJcQIp4K3cCooTgUv4V1wFd5FxbvwRrgZnISbKf35jknC31BN+Bv7CX/D
KOEhUDwE1sJDOES4CiYIV0G0cBUoPgPFZ2AkfAaK82C1cB6cFs6DVsKLMF14
EXYIL4LiThgm3AnPhTuhpvArdBN+hYfCr/7Hz9V+V9xQ/LxAeBrKXtZ4GjyE
pyFWuBwChMthlHA5fBW+hynC9+AifA+OwgmRL5wQihPinvDG0n6o8UY4CG/E
OeGWWCPckn2EW2L3lwHvA79HstaN1TvOtvPF/s+Hnk2d+JPZL8YZeDeLpUvC
sivbGrhhRm5Xj0bTi9my8s8Wzx3jad089FuPA3fRvYl3XMS8Ik6Y/uDXxZlJ
TH70w/DDbTuWNVz/48aKQu64PyN8x88Ujvsz1/L0AXcGLW1Qd4l5Ph/9qPJm
/uV0+o/una0X6ceHp1517maZy9Bxry4aDcqizpaMa5s3h3Hnq5mGuYey/7ev
tYPih/aKH84a+Y+9y+0s3p+jUzwwIJYzHy2zdNVNoNvYdp/8WufQYFOEz+Ib
iSz/y/bJhLYxnJlv0f/DulwGHX9978zqVJpezHz7dHUo8y/733VwyeOqO+d3
cVBpju2/rdmHc748OqJrwwd1Clh2zuuHBeVzmP2kVuGzbW5sk7ln/5V5hfRK
tblwJC2XBq9veph3uEv3LUMt+o0PYIPX3odGdAxC9UbN9ugPKGb7Ztb6ZY6F
0rt+t2dhTb8iBrxUMqyIe51KCj97RDF91dp7pl7E88Xz7N6PL+Ra2+4zxuyP
pUGbIzZXJ5rj0IkKnw9Oy6d1mcj+f7RPoGVVM/8F5d9y9kubmPFzc+k95VjD
eh+SeHH+rU8xLzzZK2rs9zrLs/nr5qDCooWp/G521Mp9YyCr14xsZZuSTvV7
JfUUf3NW/M3ySgvd9V9TeddvYn7c1GguNTrR/GRp336U6Zk5bXUGB6d19ajV
Kp6tejy42Cc/hJnXnBZdrZRN/7JVbw3MTOK6r/2KjJr6cr9Rg8CT03K4rEnS
tsVv0rg34uCj13td2SJn5Yg9d3Op08t16pmDWbRec/D+sbE3+eyi27ON3/Lo
ccv7bNT9HG4ec8g26e1zjDNs3nbJqAKe78FdG0/l8fKiLk2/nPyMZpNOLusx
9COb+fY8W9A5HGcWPp7csl0RV3y+kzs32ptZNzYlXDnpj8XHJi+N717Izysq
2HbRC+TepK3Lj6Z/wqDn+Zb3+uezY60FKwvmhHFSnRqNXq9+Dt2I8xdWGeaW
5sG5Z6MmRtPd+OX40XnXGV9+oG3vcdnMu6e7wTUrlsd6x9rtevqea6c7nsh5
kE69H5xy70QC84y6HGq03oeN7pXlNiZT/f7Oxoq/eSr+diP/+oo23xM48sSQ
iIa3w5j6YfHGl5tD6DNi8tjKF5M5YI7Fh5fXYjhwUb7fl2s+1Dmv0zmjfxq9
zadfjVuRwEbVyi50PvaefyQ/qewbnMHFx/ua1xqQQufxobqjo67y8eUn6/8e
VDr/t+tOGFgpg0ZZ54aGP3iJkSMqxY0/msPPs4tO916Wzcr6dvPdDnxBZMbs
KQbhuTyXmrjj06Rc9tk+bqrX5QAYLMyIP45rrLNxtLfvuWg0tjfQq6BbSPfY
54+rfnVk4evg7PFnQpAZGtfvc+N86vVt5NsoyZ3uR1oMLSzygUvZAxNPtMnl
Ku13Oh91TsFVnVPIptecT3Et8wK5ZvnkGv1a30HArUu/eq1KZ+eyHa+n9Apn
cUWD/sNM7bk9P7rr213JHD5l2JPpr6IZPNfqh3e0O9sP7zBz1Nl4pQ8RbK/4
2zPF30QHYpQOBCod8GGett7juFJb75FqvbuodZ1IT21dx3KStq7Pc4r2u22K
OheQyLba77avYHkydtjiG2ksbjzfKG5fKtdV03/IHR54EnOq9TjDTJ7qaaBX
a2omlyWe2DS2USBWX7S2bLQ2m1a3alo0181hk1HlGvfLiYBVxr15F2OdUL9M
cUDnRnGl+cYvM7U4j/3dZ4fGf7iJn776P3+djcSGjuYVbcvn0mHMOd2l/e7w
682d4+78CITRpMYtNtbMpuyfd+Zw7fd9L+hrv++ns4OmP5/pq+kPEavpTzLX
aTrjS2dNZxbhsKYz8UpPgnhO05O3Sk+iVT37qXp25VfF36Rug1Xd+hBa3b5j
d60+I7hIq88QRmv1eZxShzGqDqNZXqvDN2q/R7zarx7PSG2/hyduJS20buiR
yMJjdoZHyifz2kS/f9zPBMK3f/2dP5en8PjtE01e+qRxsu3Iwc9WRKLMYddZ
MdXS2fbtitzYq1m0rDwr62vrOLTwvHltxEIfNDp2P2z3xQS0n7DwrXdCDi3/
Ouz6bYw7dm30LDfNIwaFabr3u0RlcX+rS2fcz71BwJvoaSYlYbg2cFrI89w0
9tf2BV1S+7r9MVLbF5TMYG1dPFTr4hOytHURz7Va/b/jAK3+n+GCVv/R7KrV
uQeLtDq/yZ1anQdzg+JvDRV/81P8rYc2np5qPD/RbMK/47mDMm7+atz8GayN
21v4aeMTwmPa+IRxnDY+XmqfWKTaRx3DQG2fWBA+Dkn5+bEghnllyg7uvSeB
exsfntszORKFJy6EPSxdZ4cbR9WbMymFTd/u2HXcLA5tY0a9PvVnElv1dEw/
3DyDG1b2n1J+fBKCWlxJjK8dhqaN/44JbZKMGf2yGq68nsUtFkM6NfUNwL4y
O6o8GR+Pcgf+HPXtWRqbhkYtn3zaG5kp1j33WEbjYeA2813uSdyq7Sf8gMfa
fsIQyH7COG7R5stBzZcPvmvzFUXZr3UY97R5ccUYbV6CuV4b/6dq/G/hkjb+
3jTqHTTJxP6UY4ur240Hv907qHtM1jHjbraOW7V9oc9op+0LdaKtti+U2Kxd
d+Uz7boXX2rXv6K3V781r3d85YFj3WtV+lraZ1vPiHc5HKQ+768+H8k32uej
4N8lxC57SCizN07uF1Ymjs/XWtcdfzUOvbT7RKn7JLKmdp8kGPX/0sBwTixb
3K6W1OtyKhf51n3ef1Paf9ehrmOJXKe6Dw7KfaAr96H6u8iRv4tX8ndpLs+p
9sFGwkWek3/I91L3CURd+V6UfcuueCHjAHcZB66TccNLGTd4y7ip36Heo5ni
b+8Vf1su84IeMi88LfMCM5lH3pV55FCZR+yWeaelzDtzZN7VvvQPat9pCCdJ
naCZ1BUzpK5oI3WFzVKH3Ct1SB2pQwRK3bKJ1C2nS93+V+doLXWOjVLnVOsC
R2RdoLmsC36QdYR8WUc4JuuIat2p/ZkxCJd1R29ZpxAdC8Pfsk65XtY15sm6
xk9Z1+wsOoAlogMwG6fpANT5AjRR/O2j4m8dRWegU0nTGZiLzmCl6BL6iC7x
jOgSXEXHkC86xjTRMZiK7ql58ecw0T0cFp2kn+gkL4lOYqfoKpWuMk90Fc1F
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
uyXvq9wXo+pzC64LH/iPJyBbeAKdhSfgoHAJDBAugaPCJVhLOAYUx4ClcAyc
E+6Bw8I9sES4B1oIJ4HiJHgmnAS3havgmnAV/CFcBUvEz0D5GViJn4G5cBso
bgNf4TbYJ5wHPYTzoLJwHlgJF4KDcCEoLoQbwpHgLRyJI4Uj/cedYCTciYuE
O/23DxBqHyAeqv1+/q0ixlbcHcMPXYZZd5j2AdUG/d63sUExkyKa9W11II7h
7SccMPpgi5OPNkw7H/GNxRdn6g06mkCbuv7zLYbdYb2WqR1f3SpgDZPLVaed
SqJh81MbY/e+56WTc4pDl+dRr054/tpzKfS41CBlnaM3W5QN+PKzVw57ezWN
OvpPGr/fWXB+w4sgjkyyGjA4vzRPK351T/GrGYpf9d2V4bUqIJtc2MFn0JRE
Ljj5V5vK16JpMKfG8J9BOQxYPsFm8NcUhiZaHj0/o9QvDO726lBoLtPWbtw5
pDSnh09/dGtwphenNh3fvWFEHnUGTXhwbUE2K3s8Nbsw4TVnfl9x81ZUPqsz
poFem1ya9cusdXbHDYyzalmz3/lIbv51clpwh3dY9LTPCr1qhdTfP3Hti0kx
1Ol0N+ju1YtIbX1/sKFvHscZnvjb5684rlk04f1My+dcY9Wy1oKLOZxT4jUi
fUYCT4wd5tTzmTtTqnV+V+1dJte9rtmjklkS85+uPtbE2I+5mfUWTJyY+j9+
NUjxq5aKX/F+jZB1G7I4JWfqTd2rSexVaBn1RteHS+3vxHxwzOaSb1u31m6a
xqObH43ZP8OZ6059MDFmDnf8uj65zoVMOj9bfcnuw35YrE78EvMul593LbA6
VDWHHVf/uDKz93vsH19x6GrXPAaWL/pd5VMud+d0qNJhuy+y4/funds5lKZX
3zavk/MSzu2XTfnyO4cNZpWffr5PJJ1P+4fdenmCh3twVOixLF5NfXduUcsY
VnxvZ/wjkrSqez+1ebM0Pr1TZteutqV1taWg4q44T14ttDo2937i/4dr6Squ
VXuqQb3KQzKYaGG5Mb7UX1uuD6mateIo29ayLGk9LIs/dt8dl7Aondbhd/a0
1nHG5YQ5+S1uZbPOIa82iXFZHGLz68ehOG/cfr9z6cM7ObT6uHX7etscdo3t
8KLsxxBYaefcA9T7OR+gr3bOPY2vtfPyIYzXzss/pIF2Xj5JvQ8zQr0P041j
tHP3cf/jXfMV7+qheNf8H+smXqmUxs2VH41y+DOV2W/vRISc8YL5Szt9h+oZ
PFnTv8Uru9Lvd+GXzcJuwTi0PreNX+0sTj38qzj8/P+r4+pjsr7OKNWKtrOt
QavW0IGaqdu6D3FbsNEcahvUzrYJtpmaWg3RRl1r7UZXujLARi0go1S0fmCj
K1QmZB0VdM62PFZRoej4hhf5enl5QVFE/MAxat3YPQf/2NL/SV5+z733ec45
99zTa+u6Mma+luTF426/VVqo22/J6Hb7rd1Wun1Va2luXx21y25ftdzVwYbe
P+6XDnYk6+OUsEHe9MD2hkdSN162tORvXnjizVaUrOiIeabukk3dE3At9U6P
FbWNHbX8R34UuTqUmtfVYa/Nc3Wot2/Tx0Yt8pw6M8iP9ocEdq84121B5zNa
nq66gPuVr7VH+VrKgzK/8rU2KV+rRPlaRcrXWq98rSrla+1SvtanytdqVL5W
u/K1Nitf6yvla+1UvlaB8rValK+1Q/lahcrX8ilf60PlaH2iHK1K5WhlKkcr
XzlatcrRuqAcrU3K0TqhHK09ytHKV45WvXK0jitHS99l55Sj1akcrc3K0SpW
jta36Wajla+VqXwt5ZVhVtzWx6Yv82LkPv9DYSEXEHP4zq/iRlywiMSdmybm
NuHari/CZ37UjvhdXQOW4ZPPwSOfgxcPOJ9Dk3BsDbi+DZjs1rda98gVWOHu
kauwzt0jF9uzbv+XYrXb/6eR6Pb/buP9aSw+dvenJy3e3Z82IHXklK/z5/zF
4n/SF5C3tcJ+8ZxdmTLglX+gyHKdf6DeHnP+gQ7ERZ9OHx57xurmv7/8k4QW
m5LclZPZ3IWSqFOzX0stt2G5V0d4BvnsxAN37l3yXA9SJke//mpFtU3MH9/s
md1pSW33zUxZeQ1t1UuuvZ/uQ8zYo3Nfqu5AVET1guzmZn2XV/fjPt2P1xjP
aTN4TpsH6/ffc1qi894gHFuHVe57D9r3XU5IDTa4nJByvONyQo5g3p76gZq5
BbgeE9Dzp6gSS5mP4jH7/Ihw9UlSfaot0dWnC95nFkQVTM+1iqi9i59/9Lz9
buPa+OR3riDJ1e0LS3B186puvRhz871pxYdO246fB3vyRvntUPPC4Htm3UCa
uyf1g35mP2LdPWmZve36vw9lrv+3IcL1/wJb4+aIF+vcHGnEBjdH8pHr5lEz
eJ9SgyA3j0pR5+4TTwDuPvGc1bj7xG6Me/Op8sUlhfhqec7CgWO11vF5TO5n
Gb3oXTqp79oftqF/bd8/vy5sspW//Ldn99nrCN++/uDhoBwL+mxydXx9mzU1
JI+MHdGHOS6npVM5Le0ocTktWWCd/apzK1JcnU9jvMtd8Sl3xYNDLnelBqkp
dVkRUWU4teYQ9i+ptIf+Xrgj7OXriHDrchI33Lp4bKtbl5u4uPjTrKqoIwjZ
+OzerEWtFlhXer2n/hYunT+OqlldOLYh7IzvahteQV73ktxBPvXdjS/87ccX
sKB2vPdkRxOWvlV7oPKPjfjo5ubGvkHe15PwHf/83morfDLhr+++fgv9/aMf
TJxwFpNSl25beOm8/bTqvpbVuf3YHZZ279xB3je9Y0Tfg9leDDt86WDdr9sQ
kB26umyQr43buSrp6rt1tuwfC0ub4gYQqXcK39M7Bd2Tmv7e9Pd4kX9vm+XD
D5UP/7Z8+Ppdm8bftUD+rt3m/2n6PxHG/9Oy+V2m78IRfpcVy38+Sf7zHPnP
PayPRbI+Fs362GXW01RPe4P1tF7W31R/jGL97Smul2m9kMr1snSur53h+iKI
62vD5dN+WD7tA/JpM5/Hp1xojx3jPlGes195zq22h/tKOcydymFut4Actw9t
BvcttG/Rwn1rY5a5fW7a54jmPrdgngs7y3OBizwXeq9xwp7gOdJ7jW7bIv9z
qPzPd+R/Jj5sFj6ssak8j8KBXuHARtvO82vEez7hvTYL5XnXewe/0UfhtzXs
DxjNfgL1ExSwn1gi+w/UfxDO/mMV7FeoYr/C2+xXlsj+Jt9+NTaxv9nT7Id2
k/0QaeyH8tVXaL2+tDz5kH/Ivmqvsq9aNvuqcjYahLvqLJh9GLHs2/Ye+7a1
sW+jnH1efnifvcg+Dx/ngv2Wc8EWcC4giXMEmiNI5hyxYs4daO4gmHPHYjmn
UM85hWmcU/J7F8nvXS+/d4fFcQ6qnhWYzTlo+zk37c+cm9jCuWmB8uWOky+3
QL5c1qHUojl/LYDzFxWc1/reKlvKea18hhrhtwabxPkuf7XHhAcskHgA84gf
rJf4wd4ifsDPiDdMeMM2EG8gUnqacAvWSU/jO7vjeER+0Qz5RUcSN0K4EQ8T
N97V04QzESI9bbj8kBPkh8yUH5K4vRT9xKt4nHh1CN9C+BZfEt9aIfEwhIfx
AfHwXT1N98jIlZ62Sf7AKfIH3pI/8CXicGwnDoePOBzhxO3oneFwu10kbkcS
cT6E8/EKcb69QV4gvHEFV8gLLJo8Ar8nj8CwIscj/k9PWyQ9TX1P9anEPvnr
WslflBt2CpHkLzhKvoNe8h3MId/BNvIj5YDlWRj5EbLJpyA+hTDyKcsk/4L4
FyLJv2wq+Rpuk6+hkHzNxpDfQfwOib9x/A7f/M875QC9U9Z8QbD8bFnys+WT
V6KVvBK7ySvxIXkoRpOHIp08FOPIW+Elb8UW8lb0kOfiefJcKyLPHeLFEC9G
Enmx+up1iEcjnDx6iHcjgbwbAUcc7x7i6VhLno448nSI12MxeT1+QF6PLfKV
TZGvrF++MukGuEXdAD3UDSCdAduoM8BPnQHSJRBDXQLrqUtAOob2527tzxtD
ugdiqHvYKuoeeFk60gTpSJ9LR5J+AuknSKd+YlHUW3AP9RZcLHN6CxZSn0E3
9RlUUJ8BqOegjnoOaqjnQPoPjlP/wUrqP0P4BzPkE9M7TYRRX8Jt6kt4kvoS
QqhHoZx6FB6lHoXR1K8QSf0Ku6hf4V/Uu3CUehfGUu9CJ/UxVFAfszTqY6im
noZi6ml2P/W0obqZ6maFulf9D5q5a/w=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
l/BY2VOxR7KxZ/jspcl5zOFF3Ff87RIcS3vCXYNjbC+4W3Au0Bt+Cu4LPweP
ga/U/kvPmr2S49MouEdy3BoN90yOVU/CFyXHuafhS5LzsDHwxcm51AT5s+R8
pVpwvlaD9SsHx+cD5bvkh5Lj6D7BMbR65pz8YPlfxRfFnJLPzzHKB5PvVXng
bMbKzFmPbHKIzbYjG5HlyLqC5T8/Dd6Hb+ED4PXaW/jz4Of6PbyFNXsn5wfK
xxbkvs+NxbqrkQ3INuTnzLnHZuUFmf21ckfljcrfFnJdLStyktyx4Ivg/fwB
/jJ4nxfDC4Pt4ht4brBPlz+fAz8Gf1p8r77zJ2QNa77DfT6R+7f/Kt+AfMT8
R9EthL8J9lvL9DwVR+F58IeKl/B8+OtgO10KfxVsv0uK3/VH5rxqQXC98jU8
T3sPfwnPDq7BF8Dzg2vir+AdyLfBuZDueYuecbFHvxf3qnP3Se48XDb8ce7c
XrY0N3euLnv7IHftIDuclbt2UBz/PHftKTt8P3c+rPP4Re5aVba3KHfN+xFc
Q/Ejc768muf2v9x15a6y3cx15S6y3cxnfz7/r5nZJ8zLXdfoXHyYu66RncxM
tiHZ/JzctYZi34rc/QflS9/nrt+VS/wAn6w4xWeWBdvtJvSdk/NOxcFvctfO
io/f5q7TlT98l7tOVxxcmbunsU33w2f/Vs6l5wnvkdtWtxb2r3i6Oncerpi4
Bm6ZObb+mruHoHj6S+7ewk6s8TlSJfderS/O1JZiL9dm7g+s4v/Hw0qQf8yd
76mH8FPu3Obk4Htpmrm+WwLXynyfNyX3FFTXLM3tA1Vr5Fy3yVwLpOhcqwbc
EB4AHwaPR9rJJhhP1FroD9Y5QE5DfyPf2yL3fNURMTofU72wOLcPV49lHdwg
c+9lbe7cVX2e33LnJy2Dn4HuR72jzcVv0fPpn9xXUu9oa+5cQr2O33PnEqpb
v8ztWzqyzpFwd7gsc+5IrqPUg1qfO39WjfN37pzzUNVV0X0G1U1/5s6fVWf9
kzsPV432b+58VTXRX/CZxZ5vLHzePXxve/TDMtdcZaPz+ZHRuaVqpYrMmcic
Mpl9p/Z6pWwY3UuF39D89cgBxdryf/Kln/DZkcz5An6e8eXctdW2wk503jcX
fmRNse76wketKfSrCh8j3quwLX1W/q1msF3Lxj4OzoPlD3/jXjbILxT2f1Vy
r0F17k7RObl6X3vAnTL3K8pE1x3qQe0WXROpd7F3dO2jerZCdA11SbBvuAo+
SHul+Jq5vt4neh/VZ/gqdyxT/b5fdG2lerYUXQscAO8fXV8cqNgdHX+rK75H
x99qyg2iY7TqoE2562vVR9ty9/RUl23P3dPT/HXJPSutvza5l6WzsCm556j1
f0vuX+n+NyT3rXQP65N7XBcG97Tk63oG989Ug/QO7gkpz788uM+n/P+K4L6m
aoeLg8+Zaoorg/uaN8B9g/ugite9gntOqmV6BPfJVI9cFNyH61PY+ebknldN
2XlyTtxSz7PkGHO4zlRyDXxbcA/sLj57Q7AP6A8PLvJt9b7uhnvC98NH87kd
yTn6XcG58H3orwnuO6oWuDa496a+8WXB/TbVPncG591D4SNZY1tyHn8E4x/J
dfgdwTn1EOZcH9w/uw3uE9zLVD01JLgmeAgeB98BT4IbyP+VnL82l+2VHJtP
gyuWHJtbwJVKjq/3B+f7j/DZ09FXLjnGP4L+WsZR6IcH57kj4dryJ8m5XS2d
j+R8emxwnv4Cc46VD0nOiR8OzpefRF8XXSi53jhDNl9y/jGVOQ8xvsWct4Lz
jvfhScH5+1T4VPmZknPxxvBeJefr9wXXKA8zZ2hwjTIcPkVns+S8/4Xg+mOK
YofOacl1QkOd5ZJrgOlFXjSTOVOC60/1QC4N7m3qzDbVuWb+A1xPDK5xVMs0
Qr9nyfVPE7hcyb3464L7naof+wf3OO8u4s7W5B7oCPS9GEdntsnTOJODMuei
7aN7MrKN5tE9f9lMi+he7lHwi8l2qXu4IroGlH22ivbP2q+20X0e1Zv3Red7
qiOGRudyypPfzt0v1TO5PLpO1Nk5K7pPq71uBz9a7G+H6NpTPcne0bm9epUX
R9dBx8FdomtY5dhdo2tS1Ufv5M5jFbMWJ8cw9Y52MHZEP55nch08Ga7D/19L
tkXZT+foZ6X+Z094gvwb8+/k/zPg+uinJ58H1U1DonNI9Vd7RdcjsoE+0eur
B9sjuh7U2bksuhZexJrPsMZ3meujQcqBMtdN90bnuuq33xldG+rdzR3R9aPO
2s3RdajOYL/oe2sGv51s6zqDt0TXmPJLemej+lTn4rboOlrn8dbo+vTm4N78
7XC/4J78wMxn4Zro+vfW4PcAd8LvBdvpXHhmYc/qLdwS3Ne/o9ijvOS+gM7L
tazzWnHWrouuzVU/vpW7j63e12u5e4nqfb2au9+ovtnU3D1J1ZiDo/N/1bMz
cvfb1XN7PXdPUr216bn76uqtTcvdG9f5uiG6D6BzdH10H0C17V3R77Zmcf/D
c++Fendv5O61Ktd9Nzn3VV18d/Rv13M6JdqHK87fHx3r1U/oHu1blONtTM7t
1CPckLunpDrjldy1ht5r1IqOC8rzK0X3uPSe7vjoc63elxrC6jHKZ9SO9ht6
T1cPuSdzv2p5sb5yzi3JuZTej5wcHUf07qZ+dIzQ/TeK3mu9u6kTvXfKo/R7
lC/pPU7TaB+udy4NouOU6vVPc9e8+i3qGa7I3F9TfqVcSO/Ijo22K9X93aJr
f93nstz1vvpIF0b7T/mc7ck+S32kltG+XX2hM6PjhfpI5yHjM79LOjXaJ6tf
dEZ0HFEeNDT5WarX1Cb6/YV6Ta2j31/onWDdaHuWb+4f7Z/1PvS46Hgtu74x
2lfLH/eN9sl6L9YkOi7o3Vbj6Fipftq50e9WFNvPLmxD7w1Pio65em6fFb9d
76eaISMy9w9mFs9T/aWrkVmZ6+WB0T09vRerGR2vdd7Ll2yv6mVdGh3j5NP0
UkA+Ts9h38JOZDPHFHutvFd7tqLwabuW7ON0D+8WNql+4T3R51o9sYt0JjP3
qTpF5wP6jecUe6pe3FXRsVX9q47R8VrvJQ+NzrVk/xtz27DWr1ayH/w/DHXe
Kg==
             "]], Polygon3DBox[CompressedData["
1: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
emGHlGiZ/br4YLywlrWmXbpOTWVsdrw7lw4t8Y70kPTaTiiZO86h/ev4RXpp
emp6VyeV1NPXN6nf5q3zfKdrk9vMccbLw30mdfS22r1/G62uhr+D9kaOKXiP
Eu0+oI22V8Or1fu20d5qdr2nWdrUunoqeol6iuY2PVG9xpn4O6aK56i3p8en
17heifc3qM34syb8iX0Hwyt18VwvbyB/+1bx9PTu9PAOgVco8cOsT60prC2s
vWdu421ag+tNztjmfD1KtVK/NrWLmslaZuo2tYg1jbXLtG20qTWMuckctRft
g6rERmPkHvAB8Md8977wIvAyVX6PHpP9saa60GfD32P8zdBEq6hZDuL8I6t4
gXqCeqsnlvw2/UTv1XtW617QRIuqefUS9BQOpn1UldhqjFVLHVCiradpowXV
2OYqc5a5sFeJP3NdE/9knjr+zTVNahlrGrWamk2tNbyk//VU7c81SuKhOcDc
vXtJ7HV+m4t2K6nV+rSpvazZjKcXNqmF1NRq27OaaH01btXlb8eSY8paTD3p
eJuze64LlYxXa0a1sprZWLdRSS40J+qFbdXlYnOytds0JdrfGsDYtHE3HvXA
9do3K9HianLn0oYl40cPR+998xKvTc9N73DtEi9eT14tt13J+FezqlW3KPHO
1dQj4e1LvEbHg97q0E4bqBHU5tOWeDF6MkPraFK9Pj0/x9ZaJd6gHqFjb51O
O6gh1PL9SrSUmkrvcOsSbWOf2pczdlpITWTtPEPJWFBfrNDpI+eHNYq1yfol
96Yns0ZXP6i11dyOtU1LtLm/Vy9yyxK9ooe0Yqen1CpqFufXrJ32UoM5HgaV
eEd6SGvWqRnURmoktc3UJVpfze/c2KRE+6kBrd2n77SSmslaf2BJrWPNY/ya
o6R2t4Z3/s5eUvtYAzkfZivxEvUU56sTI9/qYqax0jmh96UHtkwdj8xa+Qo+
P3uVmtna+PImtbM1sn7dlU1qTWtOa+3LmtTO1tzWsmc2qeWsafUi9STfgC8u
qX3PblLrWwNbO1/VpNa2hra2v7RJ7W6Nvyv8Skl++6eOV3BOE29Az0Cv4Nwm
tb+egV7AeU38dT2B7eBH1Rnwt3W8kJFNvAg9Eb10PfX34atKav+rjVtVPAC9
i0uaeA16GHr9asoP4KtLvHs9/HfhK0q8ez389+ArS7yO05p4F3oeeiOnNtFb
eiR6Bac00bJqWv3+k/n7tkpN+UOTGsTa4/MqXrMxzVimJtE/M6YZy/TX3ug0
i1rFGKc/oGc7uNPvehdnNOkPPYzvjGVNvNVPq3j1evbv0L7cccj5o8zr8Pt1
vGQ9Qr3BkSXesXWZ60V6yK59uAbyNscvK/FuTm/ilejh6Kfcyv6Pq9TU1vv6
F9YXS1bxsnq3Ge96WnpfU7WZz3pgjgXHxGx1npG5yJxke/xOO93SRFuoodQe
NzfRUmoQx/pt8MpVxrxa5NYmY19N0quJB6z3u0sVr/z+JvWanrm56CX46Co5
yfr56S5eueZirXxfk3ramtm+v7GJ1vMZGAvubBL7jAnW6vc2qT+s2a3l72mi
363pjU13NIkdxii1gprB3DtVN7dv4PiiVea42vKmJsfVmMaq25toC2OWtf/d
TeoB9ZG5/hn44Co5Xy37bJcf1LSuLTzQpC9cY9B77NUmPulBWns90sSPsAaz
tny4SS1mjam3qR7Yp4rHuYNaz2dQZ/1SP8vFFv0lPWK92UebeKF6tOfBc3Tf
v3zJs/EZ6aOaJ/VSxjSpr/RU1IrPdflSzah2earLZ2oYtfsLXbxVw1tLPN/l
S2sK66cnu3zkGqFrjw82qQddg/S3+Jv0htU41ldPdPlOPad/V7eZi85J793f
sHedPl4MvgI+qk4NZvx/q4m3o+djPnyly++ugVn/fNaklrRGtD78oknfWYPq
peup69X+Wyd/vc3xs6p4RnrrfzXx64x3+nl/NvHe9dD1+v6G56ji+ak33mji
HerRqRdeb+LV6eGZf99ropf1NNQj73b6yBrdfPlOp4/0tPyti3Xja90uv7/W
5Le7BqheebOJ/tKztJ78tEktbI2sHnm1y/euAepn3QUPq7Lmojf4TxOvUo9Q
71oPewg8QYlXpGekt/pBHT/0vyb95RqFeuXlLr+r59WqL3b5X82qVhkFb1hF
s1hr/9zEC7bm1g8c3cTrt16w1qi7+TZzyfrI7038UT1n/Ymvm6zluqarnv0c
vr2KZ6D3+W8Tr1MP1LWX3+Bpq6zB6L/+2uT3mF9dG3GNxOf5XR2/6CuOP1xl
zci1/H278XJaydxzDlrfH17iX3zZxC9xzUl/v/jMqqyp6A091MQvGd7F9zXa
rBW6xm29v3ybet53BHx3wXcYPH56ST2/Upv6W0/VenflNvWd71jorZnfHqny
joV+wApt/ALfSbD+XaVNveA7C9a3q7ap/3wnQn9ixTb1/uhOb6zWpp5/sMtX
q7fxB8Z0+X7tNn6Ga+hqAzVCvzoaw/y9Vhs/wjV46/c5+Du7yjsr5v912vgT
rvm7dny/dWuVtUr9jUXbeIt6guZH11jfquJleq6fua5Eo6ifZ2+jR/XM1duz
takXfQdGfTtxG+2qhh3V5eSx6+Rw13qm5G+jKms++rdNm7Uw18Bc+2rbrIW5
Bqa3p8en19i3RI+O3Wa+6Nmpt8dp493p2VlfjNvGu9PzU8+P16aWN5+qf4a2
8Xt8h8H6q0ebXG5OV79O0MbL1PNTn/Zso3/16NXPk7a5Hz0/vVA9UevTWTo9
PD5/q1TxRNW7k7WpB1yzsn6aoo12Nz+q/ydq433qiarHJ2zjNeqJqp8nb1Mv
uWag3lmzjZ/lOwquZbo+6txzDuoN6BFcXmfO6J3poZ1ZJwbqh8zXpj7S07a+
XaqN3+I7L3rNes6+y3NEiX+xdBv/xXeC9IvmblNPGS/1U+ZvU0/pIeuPLNzG
T9Lz069apo1f4ztH+lXztvEf9Nz12vXcHX97lvgxg9v4N3ri+j0LtfF39Lz1
W5aE76jyzo5+z1xt6kHfwdE/WgC+sorHrj80Z5t60ne29AOXa/P7fAdIv22J
Nn6QnqX+32Jt/DQ9df26IW38Id+R0o9asI0/pqeuf7d4G3/JNYD/A7IPwME=

             "]], Polygon3DBox[CompressedData["
1:eJwt13ncTnUWAPDH+zz2JVJMhJGlsZZsZQ2RrCFqbE32KWuWlC1ZspZQpKKZ
9qlU04KsZUkJTSRZZ0KJlqlQ9r7nc98/jt8533ue5b3Pvb9zle01pOPgrFQq
9anIKbpkUqmH0qnUTvlTDrwmZrMr2J/ElfJ67Gb5X+R3yh/NkUot0N+SVWZ3
scfYk6wFq8T+xuawhWym+nJ+mSgpr+tYD3kt+X3yl/Qt1TdHXYaXFmXkDR2b
bi2iLiyukNeOz7KWVf85Qt6IzbWWU18lysobs0pRy5vIh/mM+31GW1aV9WcL
2GLWk9Vmo9nL7A02Q12UXypKyOvE320tFeckvqO8Abtdfq18qPxZr305zimr
zuJEL2Yvss/lL/LT6hKiHFsU31m0dGw0u0901nMNG8KWqF/SN1VdkBcQxeTX
OfawNb86nygur8nayavJB8gXeu0Sr+3PbmAPsjfZ8vjt5c/zE+rLRCk2QF1P
30TH3mIrWD92PZvA3mDL2Fb5C/ykupgozRqpr9Z3h2PT2KPsDlaDDWP/YK/E
9RbXAKvOerK+bIv8Of6r+lJxJaurrqCvg2MT2XQ2TX0JLxTXpbyWY+/GuRAj
4zvpe148oi4Zv5koJa/vWB95Xfl4+VI973m/vqwOG8deZ++ynfH787PxPUQF
9oKeiuL2OOdsqtgR16y+M/KSory+7uqa+kbF78xeZ7nY5ewadifrx5aqq4h+
7An2uLheX3l2K3tQPU3ffvk5nstahzViH8e5ZD+rC8V1xCqrN4umjvVmA1kF
9cZ0cg/85H3LyyuKTeJGdpe+v+urpt4imrN+bAirrv5UtGD92VB2r/qYmBn7
A3uHDVN/J2awV9nbrKr6E3ET68sGs4nq42IRW8nWs67qQ+JeNo89nUo2o/gt
R2Ql5yTOzc/Z98fNbEB8Z5FXX302KSv5veN3j/t+QzrZB37MJHtAFfGxaBa/
v55BPqKo1zZ3fC57O/4OUUfP56I9G6oera+2+j+iHRsS9yWrpf5MtGWD2Sj2
qzy397vS2oZ1YifkeWKfsLZlt8W1of7Fa/+rziNyiwksV1yr+lqrW4kf5RlW
zNpC3c5rf5LnZMVjD2bt2ffydOyp1uasLevm/Q+L4Ww+e4Ztkp9kP6nLiIps
OzvFTkUtqrOa6u2ijWOD2Eh2nXqbaM0GshFsm/w39pv6anENq6HeKlo5dg8b
HnuO73aC/Rj7Q+wvIktdJK59fd3UvfStk//Kv1UXj+/I7lYfFQ/FvsBeY/XU
O0RHNpyNZXepj4gH2FPsOfaL/J2YE9Z6rBk7LX8vZoK1aZxntiP73Jdg9VkD
8XvsJzFPrE3Ut+jLq14R+xjryLqmkr1lXTqZiccyyT4Ts2h9OplXP2SSuRRz
4oN0sv8czyQz44x8WcwkazPv19r7NVfvFT3ZBPYwa6reLbqxsWwya6L+UnRl
Y9ik2CO8b2FRKSu5fuI6uknPHtGDjY/9Sl8H9UFxN5vJ5sV1mr2vdclK5k7M
n2Z6vhLd2Tj1FH0n5Xn1lY75EvOJFdezNp3M8aNxvaaT+b4mnczJbzPJrL9N
fC0GsUfinvbaVup9ohebxGaxTur/iYHx7BF7Imug/iLeg41k41kv9TdiDHs6
9nvWO64fMZY9E/sB+0H9VDqZTTGjXs1Knis+TCcz+/tM8ozRMe5JcQ+bpW9+
Kpn5q9PJc8Y3mWT+x5x9P53M3UOZZOaezt7H+2YlMyFmQ2u+X/Rmk9WzvV8e
9XJxLevA/ppKnmdWpZMZdiSTPNu0EQdEHzYl5lgqmXcr08lsP5xJZt8n8n9a
f9FTOOaPvlMsXzw7WduzLuyCvFD8xtYurCdbnUn2v3lsPfsw9rbYr9kctk69
Wd+o2DfZo2wt+4itimeK2GPUl4gC8X7sybgP1UVEQfZAzA6vne/YBraFjWRN
2SNsDdvExrKW7Am2iW1lY9jN7HG2MUfyjDow7is2Ne5jtpqNY7ewBewjto2t
kS+K60NdNOYjez+TzIrJWcleH3v+CD03sllslXqDvuGsCZvNVrON7J64VtiU
2BfYKrYvnhV4xlqBVWNfyf/FclivYpXZnpiJLMtajlVhG+VL2PfqjCjGPsje
J3/IngkxGzbre5b9P86xuELfBraYHY99VFzOPox7gH2nvhDXrVgf9wA7xlLi
svhcn/E7O5e9D8d+PFjdmE/Tv1y9Vt9u+Ss8ZS3LKkm/k78V+7b1OlaP7Y1n
AJa2lmdV2dfypSyvtTKryY7K32SFrTXYDeyQ/A2Wz1qF1WLHYxazotZasRez
Y/J/s0utNVn9eE70fS/EvciqxrmPma5uxB+OfVW9Rt/4mEVsIdvMtrP34jkj
7k11DpGLfcNyxDOltTFrwY7IU3GfWRux5sqD8vNem9talzVmh+UXWUFrw9hz
2aTsvbgy6xr3uUjH38Cqsu7q3vruz/47CmQlcyfmz3R1B/4826neq68+2yk6
sRFsHNslP8MuxuwVddh5VtBrK1g7sx7srLxAPPdZb2Pd2QH5Wa/Naa3NGrJz
8vzxjGXtxLrFc1329XI++xzHuf7C8dPsQjwviNqxx7Ks2OetN7E27KL8Ena1
9XZ2J5sR+yx7gX3B9sWzPLuVPcd2sD1sbfYz0kF1zviNxArHH4/ZIM8boW8l
W8AOxX4j8rNlbH7sn3HO415i77DHYraqzyc/a+pdNjfmD7uYPHKm3mZzYmay
s+q4Bab6p70XPOvYZ3x37CXyJ2KexWeKfGy2urO+lx3bzQ6yKawdW8K2sy/Z
rJhj7CX2JTsQ3yeueVaN9WB9Usn/w1uzp9mnOZL/k09mbdlito3tYjPjumAv
sl1sf1x/MUPYM2xr/GasIdsV35GNYhPYH5N22nY=
             "]]},
           Annotation[#, "Charting`Private`Tag$9519#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1111, 252, 488, 280, 1220, 503, 295, 1225, 518, 
         310, 1232, 533, 325, 1241, 548, 340, 1252, 563, 1159, 355, 578, 1173,
          370, 1267, 593, 385, 1271, 608, 400, 1277, 623, 415, 1285, 638, 430,
          1295, 653, 445, 1306, 668, 460}], 
        Line3DBox[{253, 475, 1112, 254, 489, 1123, 281, 504, 296, 1226, 519, 
         311, 1233, 534, 326, 1242, 549, 341, 1253, 564, 1160, 356, 579, 1174,
          371, 594, 1185, 386, 1272, 609, 401, 1278, 624, 416, 1286, 639, 431,
          1296, 654, 446, 1307, 669, 461}], 
        Line3DBox[{255, 476, 1113, 256, 490, 1124, 282, 505, 1134, 297, 520, 
         312, 1234, 535, 327, 1243, 550, 342, 1254, 565, 1161, 357, 580, 1175,
          372, 595, 1186, 387, 610, 1195, 402, 1279, 625, 417, 1287, 640, 432,
          1297, 655, 447, 1308, 670, 462}], 
        Line3DBox[{257, 477, 1114, 258, 491, 1125, 283, 506, 1135, 298, 521, 
         1143, 313, 536, 328, 1244, 551, 343, 1255, 566, 1162, 358, 581, 1176,
          373, 596, 1187, 388, 611, 1196, 403, 626, 1203, 418, 1288, 641, 433,
          1298, 656, 448, 1309, 671, 463}], 
        Line3DBox[{259, 478, 1115, 260, 492, 1126, 284, 507, 1136, 299, 522, 
         1144, 314, 537, 1150, 329, 552, 344, 1256, 567, 1163, 359, 582, 1177,
          374, 597, 1188, 389, 612, 1197, 404, 627, 1204, 419, 642, 1209, 434,
          657, 449, 1310, 672, 464}], 
        Line3DBox[{261, 479, 1116, 263, 493, 1127, 285, 508, 1137, 300, 523, 
         1145, 315, 538, 1151, 330, 553, 1155, 345, 568, 1164, 360, 583, 1178,
          375, 598, 1189, 390, 613, 1198, 405, 628, 1205, 420, 643, 1210, 435,
          658, 1213, 450, 673, 465}], 
        Line3DBox[{265, 481, 1117, 266, 1218, 495, 287, 1222, 510, 302, 1228, 
         525, 317, 1236, 540, 332, 1246, 555, 347, 1258, 570, 1165, 362, 585, 
         377, 1269, 600, 392, 1274, 615, 407, 1281, 630, 422, 1290, 645, 437, 
         1300, 660, 452, 1312, 675, 467}], 
        Line3DBox[{267, 482, 1118, 268, 496, 1128, 288, 1223, 511, 303, 1229, 
         526, 318, 1237, 541, 333, 1247, 556, 348, 1259, 571, 1166, 363, 586, 
         1179, 378, 601, 393, 1275, 616, 408, 1282, 631, 423, 1291, 646, 438, 
         1301, 661, 453, 1313, 676, 468}], 
        Line3DBox[{269, 483, 1119, 270, 497, 1129, 289, 512, 1138, 304, 1230, 
         527, 319, 1238, 542, 334, 1248, 557, 349, 1260, 572, 1167, 364, 587, 
         1180, 379, 602, 1190, 394, 617, 409, 1283, 632, 424, 1292, 647, 439, 
         1302, 662, 454, 1314, 677, 469}], 
        Line3DBox[{271, 484, 1120, 272, 498, 1130, 290, 513, 1139, 305, 528, 
         1146, 320, 1239, 543, 335, 1249, 558, 350, 1261, 573, 1168, 365, 588,
          1181, 380, 603, 1191, 395, 618, 1199, 410, 633, 425, 1293, 648, 440,
          1303, 663, 455, 1315, 678, 470}], 
        Line3DBox[{273, 485, 1121, 274, 499, 1131, 291, 514, 1140, 306, 529, 
         1147, 321, 544, 1152, 336, 1250, 559, 351, 1262, 574, 1169, 366, 589,
          1182, 381, 604, 1192, 396, 619, 1200, 411, 634, 1206, 426, 649, 441,
          1304, 664, 456, 1316, 679, 471}], 
        Line3DBox[{275, 486, 1122, 276, 500, 1132, 292, 515, 1141, 307, 530, 
         1148, 322, 545, 1153, 337, 560, 1156, 352, 1263, 575, 1170, 367, 590,
          1183, 382, 605, 1193, 397, 620, 1201, 412, 635, 1207, 427, 650, 
         1211, 442, 665, 457, 1317, 680, 472}], 
        Line3DBox[{277, 682, 1318, 683, 278, 501, 1133, 293, 516, 1142, 308, 
         531, 1149, 323, 546, 1154, 338, 561, 1157, 353, 576, 1171, 1172, 368,
          591, 1184, 383, 606, 1194, 398, 621, 1202, 413, 636, 1208, 428, 651,
          1212, 443, 666, 1214, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 684, 1305, 444, 652, 1294, 429, 637, 1284, 414, 
         622, 1276, 399, 607, 1270, 384, 592, 1266, 369, 577, 1264, 354, 1158,
          562, 1251, 339, 547, 1240, 324, 532, 1231, 309, 517, 1224, 294, 502,
          1219, 279, 487, 1216, 250, 473, 681, 688}], 
        Line3DBox[{466, 674, 1311, 451, 659, 1299, 436, 644, 1289, 421, 629, 
         1280, 406, 614, 1273, 391, 599, 1268, 376, 584, 1265, 361, 569, 1257,
          346, 554, 1245, 331, 539, 1235, 316, 524, 1227, 301, 509, 1221, 286,
          494, 1217, 264, 480, 1215, 262}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1004, 473, 689, 1111, 912, 691, 1112, 913, 692, 1113, 
         914, 693, 1114, 915, 694, 1115, 916, 695, 1116, 1010, 1215, 696, 
         1117, 917, 697, 1118, 918, 698, 1119, 919, 699, 1120, 920, 700, 1121,
          921, 701, 1122, 922, 702, 1318, 1005, 923, 1006}], 
        Line3DBox[{704, 1011, 1216, 703, 488, 705, 1123, 924, 706, 1124, 925, 
         707, 1125, 926, 708, 1126, 927, 709, 1127, 1012, 1217, 710, 1013, 
         1218, 711, 1128, 928, 712, 1129, 929, 713, 1130, 930, 714, 1131, 931,
          715, 1132, 932, 716, 1133, 933, 717}], 
        Line3DBox[{719, 1014, 1219, 718, 1015, 1220, 720, 504, 721, 1134, 934,
          722, 1135, 935, 723, 1136, 936, 724, 1137, 1016, 1221, 725, 1017, 
         1222, 726, 1018, 1223, 727, 1138, 937, 728, 1139, 938, 729, 1140, 
         939, 730, 1141, 940, 731, 1142, 941, 732}], 
        Line3DBox[{734, 1019, 1224, 733, 1020, 1225, 735, 1021, 1226, 736, 
         520, 737, 1143, 942, 738, 1144, 943, 739, 1145, 1022, 1227, 740, 
         1023, 1228, 741, 1024, 1229, 742, 1025, 1230, 743, 1146, 944, 744, 
         1147, 945, 745, 1148, 946, 746, 1149, 947, 747}], 
        Line3DBox[{749, 1026, 1231, 748, 1027, 1232, 750, 1028, 1233, 751, 
         1029, 1234, 752, 536, 753, 1150, 948, 754, 1151, 1030, 1235, 755, 
         1031, 1236, 756, 1032, 1237, 757, 1033, 1238, 758, 1034, 1239, 759, 
         1152, 949, 760, 1153, 950, 761, 1154, 951, 762}], 
        Line3DBox[{764, 1035, 1240, 763, 1036, 1241, 765, 1037, 1242, 766, 
         1038, 1243, 767, 1039, 1244, 768, 552, 769, 1155, 1040, 1245, 770, 
         1041, 1246, 771, 1042, 1247, 772, 1043, 1248, 773, 1044, 1249, 774, 
         1045, 1250, 775, 1156, 952, 776, 1157, 953, 777}], 
        Line3DBox[{781, 1158, 954, 779, 1159, 955, 783, 1160, 956, 785, 1161, 
         957, 787, 1162, 958, 789, 1163, 959, 791, 1164, 569, 793, 1165, 960, 
         795, 1166, 961, 797, 1167, 962, 799, 1168, 963, 801, 1169, 964, 803, 
         1170, 965, 805, 1172, 967, 807}], 
        Line3DBox[{806, 966, 1171, 804, 1263, 1057, 802, 1262, 1056, 800, 
         1261, 1055, 798, 1260, 1054, 796, 1259, 1053, 794, 1258, 1052, 792, 
         1257, 568, 790, 1256, 1051, 788, 1255, 1050, 786, 1254, 1049, 784, 
         1253, 1048, 782, 1252, 1047, 778, 1251, 1046, 780}], 
        Line3DBox[{809, 1058, 1264, 808, 1173, 968, 810, 1174, 969, 811, 1175,
          970, 812, 1176, 971, 813, 1177, 972, 814, 1178, 1059, 1265, 815, 
         585, 816, 1179, 973, 817, 1180, 974, 818, 1181, 975, 819, 1182, 976, 
         820, 1183, 977, 821, 1184, 978, 822}], 
        Line3DBox[{824, 1060, 1266, 823, 1061, 1267, 825, 1185, 979, 826, 
         1186, 980, 827, 1187, 981, 828, 1188, 982, 829, 1189, 1062, 1268, 
         830, 1063, 1269, 831, 601, 832, 1190, 983, 833, 1191, 984, 834, 1192,
          985, 835, 1193, 986, 836, 1194, 987, 837}], 
        Line3DBox[{839, 1064, 1270, 838, 1065, 1271, 840, 1066, 1272, 841, 
         1195, 988, 842, 1196, 989, 843, 1197, 990, 844, 1198, 1067, 1273, 
         845, 1068, 1274, 846, 1069, 1275, 847, 617, 848, 1199, 991, 849, 
         1200, 992, 850, 1201, 993, 851, 1202, 994, 852}], 
        Line3DBox[{854, 1070, 1276, 853, 1071, 1277, 855, 1072, 1278, 856, 
         1073, 1279, 857, 1203, 995, 858, 1204, 996, 859, 1205, 1074, 1280, 
         860, 1075, 1281, 861, 1076, 1282, 862, 1077, 1283, 863, 633, 864, 
         1206, 997, 865, 1207, 998, 866, 1208, 999, 867}], 
        Line3DBox[{869, 1078, 1284, 868, 1079, 1285, 870, 1080, 1286, 871, 
         1081, 1287, 872, 1082, 1288, 873, 1209, 1000, 874, 1210, 1083, 1289, 
         875, 1084, 1290, 876, 1085, 1291, 877, 1086, 1292, 878, 1087, 1293, 
         879, 649, 880, 1211, 1001, 881, 1212, 1002, 882}], 
        Line3DBox[{884, 1088, 1294, 883, 1089, 1295, 885, 1090, 1296, 886, 
         1091, 1297, 887, 1092, 1298, 888, 657, 889, 1213, 1093, 1299, 890, 
         1094, 1300, 891, 1095, 1301, 892, 1096, 1302, 893, 1097, 1303, 894, 
         1098, 1304, 895, 665, 896, 1214, 1003, 897}], 
        Line3DBox[{911, 1009, 685, 910, 1317, 1109, 909, 1316, 1108, 908, 
         1315, 1107, 907, 1314, 1106, 906, 1313, 1105, 905, 1312, 1104, 904, 
         1311, 673, 903, 1310, 1103, 902, 1309, 1102, 901, 1308, 1101, 900, 
         1307, 1100, 899, 1306, 1099, 898, 1110, 1305, 1007, 1008}]}}},
     VertexNormals->CompressedData["
1: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
Hg==
      "]], {}}, 
   {Thickness[Large], 
    {RGBColor[1, 0, 0], 
     Arrow3DBox[{{0, 0, 0}, {-0.3366570382341769, -0.5813824287353923, 
       0.7407135142314661}}]}, 
    {RGBColor[0, 0, 1], 
     Arrow3DBox[{{0, 0, 0}, {0.7054182012411808, 0.36534891756694843`, 
       0.6073757731341577}}]}, 
    {GrayLevel[0], 
     Arrow3DBox[{{0, 0, 0}, {-0.2483191260013271, 0.19404149137491533`, 
       1.1791445621274486`}}]}, 
    {RGBColor[0.5, 0, 0.5], 
     Arrow3DBox[{{0, 0, 0}, {0.147446960515013, -0.2672399057210705, 
       0.9969641943316634}, {-0.2483191260013271, 0.19404149137491533`, 
       1.1791445621274486`}}]}}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{363.3484008124253, 344.0756858092198},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 2}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.4767643162590413, 1.8996085127562359`, 2.759380960470316},
  ViewVertical->{-0.5323242803280651, 0.8341108271774427, 
   0.14453369350628953`}]], "Output",
 CellChangeTimes->{{3.9100781352514586`*^9, 3.9100781494479923`*^9}, 
   3.910083532226506*^9, {3.9100835658396664`*^9, 3.9100836234409313`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"24d71b04-d4fa-42d0-bfcf-0df08cf35af8"]
}, Open  ]],

Cell[TextData[{
 "Definition: The ",
 StyleBox["orthogonal complement ",
  FontVariations->{"Underline"->True}],
 "of a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"2e2f95ad-0a69-4df9-acec-a61a059bd16a"],
 " is the set of all such z\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["W", "\[Perpendicular]"], "=", 
    RowBox[{"{", 
     RowBox[{"z", ":", " "}]}]}], TraditionalForm]],ExpressionUUID->
  "ceeb9dc4-94ee-481a-8b75-067a7d9657dd"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", ".", "z"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "02f23de1-d261-4724-9ccf-46be663c1212"],
 " \[ForAll]",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "\[Element]", "W"}], TraditionalForm]],ExpressionUUID->
  "41410cca-b780-4699-8bb2-65409dd248b8"],
 "} "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
   3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
   3.909484424879016*^9}, {3.909484613582157*^9, 3.909484817332931*^9}, 
   3.909484862832632*^9, {3.909485061004411*^9, 3.909485221317504*^9}, {
   3.9094852545358663`*^9, 3.9094852691916547`*^9}, {3.9094853005816097`*^9, 
   3.909485321192317*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"32186ba5-8c0c-458e-8cbe-47743c309acd"],

Cell[TextData[{
 "This is a subspace.  We already know how to build it out of a basis for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "1e3692fd-b8c3-48f6-a97b-26b5565a3c7c"],
 ". "
}], "Text",
 CellChangeTimes->{{3.910078183346637*^9, 
  3.9100782308521614`*^9}},ExpressionUUID->"c96a25f3-fce2-4b8f-a057-\
0b9bedf82fb0"],

Cell[TextData[{
 "Reminder Definition: The ",
 StyleBox["row space ",
  FontVariations->{"Underline"->True}],
 "of a matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "39f81de8-09f5-43e7-a8eb-29ffaae20fe5"],
 " is the span of the rows of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "88fade73-6361-46b3-9734-974e0005ca30"],
 " and the ",
 StyleBox["column space ",
  FontVariations->{"Underline"->True}],
 "is the span of the columns. The ",
 StyleBox["null space",
  FontVariations->{"Underline"->True}],
 " of A is the set of all solutions of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "5958c67b-01d0-4338-8a4b-ac769d2573e7"],
 ".  Clearly\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"row", "(", "A", ")"}], "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"a48ed380-0a37-4e0e-8541-940a4326e67e"],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"col", "(", "A", ")"}], "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"e998dad7-a80e-4516-aeb8-f02986ebc1a0"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"nul", "(", "A", ")"}], "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"5ba09491-5cac-4701-8ee8-7c5d691a46a1"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"nul", "(", 
     RowBox[{"A", "\[Transpose]"}], ")"}], "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"4d5f23ad-bc9d-490f-b7c9-17c2780a6999"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
   3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
   3.909484424879016*^9}, {3.909484613582157*^9, 3.909484817332931*^9}, 
   3.909484862832632*^9, {3.909485061004411*^9, 3.909485221317504*^9}, {
   3.9094852545358663`*^9, 3.9094852691916547`*^9}, {3.9094853005816097`*^9, 
   3.909485321192317*^9}, {3.909485435092095*^9, 3.9094856946871805`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"7be1b68a-d397-4135-95e7-3391e6bf3802"],

Cell[TextData[{
 "Theorem 3: \n\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"row", "(", "A", ")"}], ")"}], "\[Perpendicular]"], "=", 
      RowBox[{
       RowBox[{"nul", "(", "A", ")"}], "  "}]},
     {
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"col", "(", "A", ")"}], ")"}], "\[Perpendicular]"], "=", 
      RowBox[{"nul", "(", 
       RowBox[{"A", "\[Transpose]"}], ")"}]}
    }], TraditionalForm]],ExpressionUUID->
  "2bcf1514-d155-435c-b812-7d1cc00199e0"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.909484897285681*^9, 3.909484976472904*^9}, {
  3.9094853655816107`*^9, 3.9094854205970325`*^9}, {3.9094857060822983`*^9, 
  3.909485764900403*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a2365b41-6515-44da-9688-fdb196e2b9d4"]
}, Closed]],

Cell[CellGroupData[{

Cell["6.2 Orthogonal Sets", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.909484073129572*^9, 
  3.909484084627141*^9}, {3.909485796050621*^9, 
  3.909485816190303*^9}},ExpressionUUID->"819ad1f2-e8c7-4416-af15-\
10850a0adf2e"],

Cell["The motto is orthogonal sets are very useful. ", "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909486072051037*^9, 
  3.9094860831173477`*^9}},ExpressionUUID->"19c54076-1ec5-4ca5-bcfb-\
b02a4fe71c11"],

Cell[TextData[{
 "Definition: A set of vectors For ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["u", "1"], ",", 
      SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["u", "p"]}], "}"}], "in", "  ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"79649700-679f-4e92-abef-8443726f5d2d"],
 " is ",
 StyleBox["orthogonal",
  FontVariations->{"Underline"->True}],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "i"], ".", 
     SubscriptBox["u", "j"]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "f0af9dd2-00d2-4609-8ef7-b0cb3eec5f63"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[NotEqual]", "j"}], TraditionalForm]],ExpressionUUID->
  "48f89d84-af62-4f47-94fa-caa009bfdd7c"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"3be46531-e24a-4579-9107-a4a1b58fd61d"],

Cell[TextData[{
 "Theorem 4: If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["u", "1"], ",", 
      SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["u", "p"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "830d6261-b212-4dd7-ba84-93d26f6a4c4d"],
 " is an orthogonal set of non-zero vectors the ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "778d5d1b-bced-4557-a998-54e21875240d"],
 " is Linearly Independent (LI). As a result ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "822866f7-f2f1-4100-a57b-083fc4242bcf"],
 " is a basis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"span", "(", "S", ")"}], TraditionalForm]],ExpressionUUID->
  "6fd4e676-3561-4aa1-8d7f-de0908ba6bc0"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a0633062-25f4-4c41-917b-8d31b245b303"],

Cell[TextData[{
 "Definition: An ",
 StyleBox["orthogonal basis",
  FontVariations->{"Underline"->True}],
 " for a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"e8df4c5b-a6cc-4d3e-81e2-eed8ba703683"],
 " is a basis for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "13a70d7d-5d1c-44fa-bec6-a22f7444d798"],
 " that is orthogonal. "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}, {
  3.9094860985045476`*^9, 3.9094861813843174`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"038ccd18-f471-458b-8663-893df8c1c40d"],

Cell[TextData[{
 "There is a simple recipe for the coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["u", "1"]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SubscriptBox["u", "2"]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      SubscriptBox["c", "p"], 
      SubscriptBox["u", "p"]}]}]}], TraditionalForm]],ExpressionUUID->
  "270c96c7-6866-4d63-ab95-637b25724fa3"],
 " if the us are orthogonal. "
}], "Text",
 CellChangeTimes->{{3.909486516645464*^9, 
  3.9094865539409485`*^9}},ExpressionUUID->"6de4e6b1-d77c-44cd-ad29-\
9f4ba79027ea"],

Cell[TextData[{
 "Theorem 5: If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["u", "1"], ",", 
      SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["u", "p"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "2ca009fe-c2be-4d67-8999-ae69018b86de"],
 " is an orthogonal basis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"d212f230-4e72-4c0c-a874-7db93306704f"],
 " then for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", "W"}], TraditionalForm]],ExpressionUUID->
  "7bcb1621-bf36-421e-a95b-7b220dad7ee1"],
 " is the linear combination\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], 
       SubscriptBox["u", "1"]}], "+", 
      RowBox[{
       SubscriptBox["c", "2"], 
       SubscriptBox["u", "2"]}], "+", "\[Ellipsis]", "+", 
      RowBox[{
       SubscriptBox["c", "p"], 
       SubscriptBox["u", "p"]}]}], "=", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["c", "i"], 
       SubscriptBox["u", "i"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "5f33df08-a6bf-45ca-a516-54d10f9ab819"],
 "\nwhere \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "i"], "=", 
    FractionBox[
     RowBox[{"y", ".", 
      SubscriptBox["u", "i"]}], 
     RowBox[{
      SubscriptBox["u", "i"], ".", 
      SubscriptBox["u", "i"]}]]}], TraditionalForm]],ExpressionUUID->
  "f8bc62c6-c35e-4143-96d7-74c1fc11b87d"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.909486194675988*^9, 3.9094863381607504`*^9}, {3.9094864142731376`*^9, 
  3.909486416832405*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"ca7c22ce-446e-48c0-9d83-26a5c2ada581"],

Cell[TextData[{
 "  It would be even simpler if we normalized the basis to have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "i"], ".", 
     SubscriptBox["u", "i"]}], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "416de37a-cd71-4035-9264-a6cba5d91e2b"],
 "."
}], "Text",
 CellChangeTimes->{{3.9094863423794575`*^9, 3.909486432671155*^9}, 
   3.9094865118328495`*^9, {3.909486557488951*^9, 
   3.909486561582845*^9}},ExpressionUUID->"4af33c8f-58a3-4163-b434-\
e7f0e93d91ad"],

Cell[TextData[{
 "Definition: An ",
 StyleBox["orthonormal basis",
  FontVariations->{"Underline"->True}],
 " for a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"c353968c-9664-496f-8727-32bd79f2f4b1"],
 " is an orthogonal basis that is normalized. "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}, {
  3.9094860985045476`*^9, 3.9094861813843174`*^9}, {3.909495088830662*^9, 
  3.909495127488954*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"41dc71d9-5d2d-41a7-aba8-a10cf1fe933c"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "1"], ",", 
     SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["u", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "6eb0aa06-b791-4a11-b3b2-b8c009fb5304"],
 " is an orthogonal basis for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "8339d872-f554-454e-9962-dd5508453a3c"],
 " then ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        SubscriptBox["u", "1"], 
        RowBox[{"||", 
         SubscriptBox["u", "1"], "||"}]], ",", 
       FractionBox[
        SubscriptBox["u", "2"], 
        RowBox[{"||", 
         SubscriptBox["u", "2"], "||"}]], ",", "\[Ellipsis]", ",", 
       FractionBox[
        SubscriptBox["u", "p"], 
        RowBox[{"||", 
         SubscriptBox["u", "p"], "||"}]]}], "}"}],
     TraditionalForm], " "}], TraditionalForm]],ExpressionUUID->
  "cf932e68-0cdc-4128-a061-d0e55dd250b3"],
 "is an orthogonal basis for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "d3b612e0-bddc-485c-b8c7-c34a44cdcee9"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909495146472763*^9, 
  3.9094952735670695`*^9}},ExpressionUUID->"aa929fdc-c765-45fc-8620-\
bb72f7837947"],

Cell[TextData[{
 "Theorem 6: An ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[Times]", "n"}], TraditionalForm]],ExpressionUUID->
  "91360f28-649f-4c7e-8f69-1fded8bc537c"],
 " matrix U has orthonormal columns iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"U", "\[Transpose]"}], " ", "U"}], "=", 
    SubscriptBox["I", "n"]}], TraditionalForm]],ExpressionUUID->
  "e5831177-7dfa-463e-ac64-38c74f70b6b5"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.909486194675988*^9, 3.9094863381607504`*^9}, {3.9094864142731376`*^9, 
  3.909486416832405*^9}, {3.9094952921751976`*^9, 3.909495376989011*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"01beeeae-3260-4a99-ac2e-c6a1e56b862a"],

Cell[TextData[{
 "Theorem 7: If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "0f8a23c6-298e-40f9-8478-913a49de3a4a"],
 " has orthonormal columns and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", ",", 
    RowBox[{"y", "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}]}], TraditionalForm]],
  ExpressionUUID->"f1f6de80-825d-4ae0-a442-ff10417f360e"],
 " then \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"||", 
      RowBox[{"U", " ", "x"}], "||"}], "=", 
     RowBox[{"||", "x", "||"}]}], ",", " ", Cell[
    "(U x).(U y) = x.y",ExpressionUUID->
     "57c9e109-d67b-404b-888b-860d5e1ca7e9"]}], TraditionalForm]],
  ExpressionUUID->"ad3f8e2e-0d87-4159-9821-d9bfc1d73d06"],
 ", and ",
 Cell[BoxData[
  FormBox[
  Cell["(U x).(U y) = 0",ExpressionUUID->
    "3690ae60-d935-4683-8a80-686c8216befb"], TraditionalForm]],ExpressionUUID->
  "d1e0619b-47ab-439f-ac57-04230f556e12"],
 " iff ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", ".", "y"}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "a26d3931-bf6e-46b5-9ab4-9777878d9216"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.909486194675988*^9, 3.9094863381607504`*^9}, {3.9094864142731376`*^9, 
  3.909486416832405*^9}, {3.9094952921751976`*^9, 3.909495558113826*^9}, {
  3.909495652972477*^9, 3.9094956531011424`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"c5ddd26f-5676-4846-a5af-831a819c3d3e"],

Cell[TextData[{
 "Definition: An ",
 StyleBox["orthogonal",
  FontVariations->{"Underline"->True}],
 " matrix is a square matrix with orthonormal columns.  "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}, {
  3.9094860985045476`*^9, 3.9094861813843174`*^9}, {3.909495088830662*^9, 
  3.909495127488954*^9}, {3.9094955956441975`*^9, 3.9094957196804843`*^9}, {
  3.910084347152441*^9, 3.910084355342283*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"e4fc250d-c8ff-407d-b51a-03c536e8c737"],

Cell[TextData[{
 "Theorem:  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "962d7101-8447-4fb6-90d5-73c1073f87e0"],
 " is orthogonal then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["U", 
     RowBox[{"-", "1"}]], "=", 
    RowBox[{"U", "\[Transpose]"}]}], TraditionalForm]],ExpressionUUID->
  "f7472cf1-81b7-49f6-a501-744b5bc8cce8"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}, {
  3.9094860985045476`*^9, 3.9094861813843174`*^9}, {3.909495088830662*^9, 
  3.909495127488954*^9}, {3.9094955956441975`*^9, 3.9094957457549033`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"e35dc525-cd04-448b-9dbd-9582dbf73a3f"],

Cell[TextData[{
 "If we think about it we already know how to build an orthogonal basis. Here \
is a computation for the column space of a Tall Skinny (TS) matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "97ac2d87-5364-4c7c-8bd4-2ba502e33a44"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", ">", "n"}], TraditionalForm]],ExpressionUUID->
  "c75b10e6-7685-427b-8145-e82b7f356892"],
 "."
}], "Text",
 CellChangeTimes->{{3.9100782875306473`*^9, 3.91007834694178*^9}, {
  3.91007856330328*^9, 
  3.910078571981792*^9}},ExpressionUUID->"912725f8-835e-4dea-9b62-\
f1844cc129f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fix", " ", "the", " ", "length", " ", "of", " ", "column", " ", "1"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u1", "=", 
    RowBox[{"Normalize", "[", 
     RowBox[{"A", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Work", " ", "on", " ", "column", " ", "2"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{"u2", " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u1", ".", "u2"}], ")"}], " ", "u1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u2", "=", 
    RowBox[{"Normalize", "[", "u2", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Work", " ", "on", " ", "column", " ", "3"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"A", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"u3", " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u1", ".", "u3"}], ")"}], " ", "u1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"u3", " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u2", ".", "u3"}], ")"}], " ", "u2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u3", "=", 
    RowBox[{"Normalize", "[", "u3", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Assemble", " ", "a", " ", "matrix", " ", "U", " ", "from", " ", "the", 
    " ", "columns"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u1", ",", "u2", ",", "u3"}], "}"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"U", "\[Transpose]"}], ".", "U"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9100772285808887`*^9, 3.9100774135480485`*^9}, {
  3.910077447688213*^9, 3.9100776241876974`*^9}, {3.910077658540254*^9, 
  3.9100779275171814`*^9}, {3.91007796112617*^9, 3.910078148857728*^9}, {
  3.9100783512274265`*^9, 3.910078542024225*^9}, {3.9100785967007513`*^9, 
  3.910078644275541*^9}, {3.910084651450095*^9, 3.9100847078698864`*^9}, {
  3.9100847726364794`*^9, 3.9100848063205233`*^9}, {3.910084837419859*^9, 
  3.910084840859917*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"8964870b-9087-4dc2-8004-82d5736c71e9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.0000000000000002`", "0", "0"},
     {"0", "0.9999999999999999`", "0"},
     {"0", "0", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9100785431812696`*^9, 3.910078644831288*^9, 3.910084710666068*^9, {
   3.910084779462699*^9, 3.9100848070022893`*^9}, 3.910084841320423*^9},
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"d7722ac7-4e0f-422c-9a04-\
f23751be1a6d"]
}, Open  ]],

Cell["\<\
This is called the Gram-Schmidt process and is a very common thing to do to a \
matrix because \[OpenCurlyDoubleQuote]Orthogonal basis are very useful!\
\[CloseCurlyDoubleQuote]  As we will see it is called the QR decomposition. \
\>", "Text",
 CellChangeTimes->{{3.910078664228098*^9, 
  3.910078751577707*^9}},ExpressionUUID->"3e8b4b10-9a3b-48f5-bed3-\
74a833a8b43e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"156", ",", "25"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "R"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";", " ", 
  RowBox[{"Q", "=", 
   RowBox[{"Q", "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{"Dimensions", ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "Q", ",", "R"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{"A", "-", 
   RowBox[{"Q", ".", "R"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", "\[Transpose]"}], ".", "Q"}], "-", 
   RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "R", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.910085004393657*^9, 3.910085206323016*^9}, {
  3.910085240928156*^9, 3.9100852614576797`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"980143bd-2031-4a66-9c0a-3f9857e17a46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"156", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "25"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.910085074296984*^9, 3.91008520671329*^9}, 
   3.9100852619865627`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"040968b3-3767-454a-93b7-887f04cd5bea"],

Cell[BoxData["4.09817048565013`*^-15"], "Output",
 CellChangeTimes->{{3.910085074296984*^9, 3.91008520671329*^9}, 
   3.9100852619915066`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"cbc340be-1d0a-4470-aada-993a388b1c87"],

Cell[BoxData["1.17091606378467`*^-15"], "Output",
 CellChangeTimes->{{3.910085074296984*^9, 3.91008520671329*^9}, 
   3.910085261995227*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"1aa62808-9306-47e1-a76d-9a8d81eaba07"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {25, 25}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{24.5, 
       FormBox["1", TraditionalForm]}, {20.5, 
       FormBox["5", TraditionalForm]}, {15.5, 
       FormBox["10", TraditionalForm]}, {10.5, 
       FormBox["15", TraditionalForm]}, {5.5, 
       FormBox["20", TraditionalForm]}, {0.5, 
       FormBox["25", TraditionalForm]}}, {{24.5, 
       FormBox["1", TraditionalForm]}, {20.5, 
       FormBox["5", TraditionalForm]}, {15.5, 
       FormBox["10", TraditionalForm]}, {10.5, 
       FormBox["15", TraditionalForm]}, {5.5, 
       FormBox["20", TraditionalForm]}, {0.5, 
       FormBox["25", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["25", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["25", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.910085074296984*^9, 3.91008520671329*^9}, 
   3.910085262055735*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"b4b72d6f-c40d-48a3-9b11-8a0f41d4828b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.3 Orthogonal Projections", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.909484073129572*^9, 
  3.909484084627141*^9}, {3.909485796050621*^9, 3.909485816190303*^9}, {
  3.9094958855202928`*^9, 
  3.9094958900663166`*^9}},ExpressionUUID->"40b7c53f-492a-4dcb-9938-\
1fc9aeeb8366"],

Cell[TextData[{
 "In calculus you learned how to split a vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", " "}], TraditionalForm]],ExpressionUUID->
  "fa0c48b5-a822-4eeb-9963-57b6e45b7873"],
 "into a piece parallel and perpendicular to another vector ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],ExpressionUUID->
  "8b525ec0-53a7-4cdd-b10f-f5cc0516b0bc"],
 ". \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "par"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{"y", ".", "u"}], ")"}], 
      RowBox[{"u", ".", "u"}]], " ", "u"}]}], TraditionalForm]],
  ExpressionUUID->"5af0f570-4002-4c0d-add7-bc4ae9890f93"],
 "\nand \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "perp"], "=", 
    RowBox[{"y", "-", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{"y", ".", "u"}], ")"}], 
       RowBox[{"u", ".", "u"}]], " ", "u"}]}]}], TraditionalForm]],
  ExpressionUUID->"b3460f45-e934-410b-931f-4347eb41dd4b"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909486072051037*^9, 3.9094860831173477`*^9}, {3.909495939082561*^9, 
  3.9094959907383933`*^9}, {3.9094960424265776`*^9, 3.909496080051502*^9}, {
  3.910252269441486*^9, 3.9102523293352785`*^9}, {3.910252436107935*^9, 
  3.9102524624300923`*^9}},ExpressionUUID->"e4efdc19-a79c-4e5a-a9a9-\
d678f674a749"],

Cell[TextData[{
 "Reminder: A set of vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["u", "1"], ",", 
      SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["u", "p"]}], "}"}], "in", "  ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"a3b43cb5-d729-4ef5-9ccf-2ed066441590"],
 " is ",
 StyleBox["orthogonal",
  FontVariations->{"Underline"->True}],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "i"], ".", 
     SubscriptBox["u", "j"]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "3e4c177d-579a-43eb-971e-683ffa27d283"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[NotEqual]", "j"}], TraditionalForm]],ExpressionUUID->
  "e6493ba4-0f6b-427c-bad6-cb330c6a1acc"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}, {
  3.910252339473253*^9, 3.9102523400433073`*^9}, {3.9102523827275953`*^9, 
  3.9102523840761285`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0ca92f41-2269-4797-bede-fbb1a78c7032"],

Cell[TextData[{
 "Reminder: An ",
 StyleBox["orthogonal basis",
  FontVariations->{"Underline"->True}],
 " for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "938f2c57-2427-4f1c-924c-c2656bd2352c"],
 " is an orthogonal set that spans ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "ddb3c5bb-6fac-4887-b798-3648f92f173d"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}, {
  3.910252339473253*^9, 3.9102523400433073`*^9}, {3.9102523827275953`*^9, 
  3.9102523840761285`*^9}, {3.910252675655238*^9, 3.9102527151556563`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"40b0d4bb-a35f-48f6-a1fe-b2452fd15434"],

Cell[TextData[{
 "Reminder: A set of vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["u", "1"], ",", 
      SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["u", "p"]}], "}"}], "in", "  ", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"baa02c20-4cd6-429d-8824-b865af53cde5"],
 " is ",
 StyleBox["orthonormal",
  FontVariations->{"Underline"->True}],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "i"], ".", 
     SubscriptBox["u", "j"]}], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "199c8293-9513-45a7-ae7f-6e455eb3a702"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "\[NotEqual]", "j"}], TraditionalForm]],ExpressionUUID->
  "2b538586-d2f6-41e0-a1db-39bb9abd4bd8"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["u", "i"], ".", 
     SubscriptBox["u", "i"]}], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "705afd7b-a0ea-4b07-96d1-e6c65e5ee618"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}, {
  3.910252339473253*^9, 3.9102523400433073`*^9}, {3.9102523827275953`*^9, 
  3.910252418427347*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"f7581b91-fe57-414b-8d6c-614172ece01c"],

Cell[TextData[{
 "Reminder: An ",
 StyleBox["orthonormal basis",
  FontVariations->{"Underline"->True}],
 " for ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "dae38daf-5a91-4402-8c17-5a64eca6ce4d"],
 " is an orthonormal set that spans ",
 Cell[BoxData[
  FormBox["W", TraditionalForm]],ExpressionUUID->
  "784244f7-b2bc-4bc6-87bd-b369eb0b21c0"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}, {
  3.910252339473253*^9, 3.9102523400433073`*^9}, {3.9102523827275953`*^9, 
  3.9102523840761285`*^9}, {3.910252675655238*^9, 3.9102527411486945`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"ad601675-99d1-4895-8df5-0a5fce714d06"],

Cell[TextData[{
 "Theorem 8: For an orthogonal basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "1"], ",", 
     SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["u", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "366ca0a4-5cca-47ca-8cab-2422329bbe8c"],
 " spanning ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"045a01ab-9726-4e6d-8562-051e2fbdbad6"],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"fec593a0-8dc6-4f44-9835-fe6ac5ad5cd9"],
 " the unique decomposition\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     OverscriptBox["y", "^"], "+", "z"}]}], TraditionalForm]],ExpressionUUID->
  "65e09141-0904-4046-8bec-53b55b2a9baf"],
 "\nwith ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "\[Element]", "W"}], TraditionalForm]],
  ExpressionUUID->"1f5cb381-03c1-48e4-a2fb-ef58778ad85d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    SuperscriptBox["W", "\[Perpendicular]"]}], TraditionalForm]],
  ExpressionUUID->"cff48455-94f8-4ba5-9b22-8fcc70ca32fa"],
 " is given by \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"y", ".", 
        SubscriptBox["u", "1"]}], 
       RowBox[{
        SubscriptBox["u", "1"], ".", 
        SubscriptBox["u", "1"]}]], 
      SubscriptBox["u", "1"]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"y", ".", 
        SubscriptBox["u", "2"]}], 
       RowBox[{
        SubscriptBox["u", "2"], ".", 
        SubscriptBox["u", "2"]}]], 
      SubscriptBox["u", "2"]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"y", ".", 
        SubscriptBox["u", "p"]}], 
       RowBox[{
        SubscriptBox["u", "p"], ".", 
        SubscriptBox["u", "p"]}]], 
      SubscriptBox["u", "p"]}]}]}], TraditionalForm]],ExpressionUUID->
  "d4dd61ac-8f8c-44d4-9ef3-1a6ae0dbe100"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"y", "-", 
     OverscriptBox["y", "^"]}]}], TraditionalForm]],ExpressionUUID->
  "80c0d43f-46b2-4ec4-a694-93e134cb1db5"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"c6e43f6b-ea74-406f-99d1-8a19c0bec272"],

Cell[TextData[{
 "Theorem 8b: For an ",
 StyleBox["orthonormal",
  FontColor->RGBColor[1, 0, 0]],
 " basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "1"], ",", 
     SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["u", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "aa51b85c-d67a-46d7-bf9e-9a2ed3b49c98"],
 " spanning ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"80487b0b-59b5-4fa8-8f1b-94691b504ca2"],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"5a15cb13-951d-4c80-9552-22087b6d312d"],
 " the unique decomposition\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     OverscriptBox["y", "^"], "+", "z"}]}], TraditionalForm]],ExpressionUUID->
  "108099f2-4caf-4b9f-ac48-4a3f128b1836"],
 "\nwith ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "\[Element]", "W"}], TraditionalForm]],
  ExpressionUUID->"7802c6f3-7224-4396-9a12-9df2e3202f6b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "\[Element]", 
    SuperscriptBox["W", "\[Perpendicular]"]}], TraditionalForm]],
  ExpressionUUID->"7ac70ed3-1e5a-4076-8a7c-18e421d6de3f"],
 " is given by \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", ".", 
        SubscriptBox["u", "1"]}], ")"}], 
      SubscriptBox["u", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", ".", 
        SubscriptBox["u", "2"]}], ")"}], 
      SubscriptBox["u", "2"]}], "+", "\[Ellipsis]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", ".", 
        SubscriptBox["u", "p"]}], ")"}], 
      SubscriptBox["u", "p"]}]}]}], TraditionalForm]],ExpressionUUID->
  "75f252d9-aef4-4ebe-bd85-800a8772d667"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"y", "-", 
     OverscriptBox["y", "^"]}]}], TraditionalForm]],ExpressionUUID->
  "ee5313d0-0052-4705-8c3e-08167225255f"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.9102524800871077`*^9, 
  3.9102525226598353`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a4d9cb4c-b6f1-4914-88d6-15e3e08e569d"],

Cell[TextData[{
 "Definition: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "p"], 
     RowBox[{
      FractionBox[
       RowBox[{"y", ".", 
        SubscriptBox["u", "i"]}], 
       RowBox[{
        SubscriptBox["u", "i"], ".", 
        SubscriptBox["u", "i"]}]], 
      SubscriptBox["u", "i"]}]}]}], TraditionalForm]],ExpressionUUID->
  "b8cbe211-9f85-4c92-a36e-e9b55fa0780b"],
 " is the ",
 StyleBox["orthogonal projection",
  FontVariations->{"Underline"->True}],
 " of ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "61a100a2-357f-430d-9518-94a6f3c43faa"],
 " onto the span of the orthogonal basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "1"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["u", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "09808a18-2c72-4e2d-b195-62f39b45c5af"],
 " "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.909484424879016*^9}, {3.909484613582157*^9, 3.9094846700817895`*^9}, {
  3.9094860985045476`*^9, 3.9094861813843174`*^9}, {3.9095815574698925`*^9, 
  3.909581701768809*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"aff205a3-9414-482c-a5f0-b0c698cd23d6"],

Cell[TextData[{
 "Theorem 9: Best Approximation\nFor any subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"6c4f7a0d-edf9-4b05-802f-8c16c4364161"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"2d3e70e4-dc97-4afa-8eb3-937e82814447"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{"y", "-", 
     OverscriptBox["y", "^"]}], "||", 
    RowBox[{"<", " ", 
     RowBox[{"||", 
      RowBox[{
       RowBox[{"y", "-", "v"}], "||"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"b17ec01f-c829-4cef-8415-163e8405d62b"],
 " \nfor all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"558d84f2-0aa8-4d13-8ae3-a67696be218b"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "\[NotEqual]", 
    OverscriptBox["y", "^"]}], TraditionalForm]],ExpressionUUID->
  "194d76b8-9365-496d-a920-da257ccf5fa7"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909581938638727*^9}, {3.9102567445753517`*^9, 3.910256779246942*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"8bc391f6-ca5e-4e3b-a4cd-1364ac11344c"],

Cell[TextData[{
 "Theorem 10: \nIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "1"], ",", 
     SubscriptBox["u", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["u", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "0f5ebba7-b1e6-470f-93b1-0039dea3247c"],
 " is an orthonormal basis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "\[Subset]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"519c115c-de9e-4682-bbc5-dc8d045c77fd"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["proj", "W"], "y"}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "p"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", ".", 
         SubscriptBox["u", "i"]}], ")"}], 
       SubscriptBox["u", "i"]}]}], "=", 
     RowBox[{"U", " ", 
      RowBox[{"U", "\[Transpose]"}], " ", "y"}]}]}], TraditionalForm]],
  ExpressionUUID->"4a88ec99-6b18-499e-a19d-5777c219cf83"],
 "\nfor all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"e9173143-df3a-4e4f-8ebe-991067c93e44"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"80c9e8dc-b79b-4638-8b58-e4984da0a677"],

Cell[TextData[{
 "Reminder: A matrix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "9035e014-a678-48c1-a010-7be5f13cecaf"],
 " with orthonormal columns satisfies ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"U", "\[Transpose]"}], "U"}], "=", 
    SubscriptBox["I", "n"]}], TraditionalForm]],ExpressionUUID->
  "2b6e8f45-e595-490e-9f56-9477578b31be"],
 "."
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094843056450357`*^9}, {3.9094858328641024`*^9, 3.90948590614466*^9}, {
  3.910252339473253*^9, 3.9102523400433073`*^9}, {3.9102523827275953`*^9, 
  3.9102523840761285`*^9}, {3.910252675655238*^9, 3.9102527411486945`*^9}, {
  3.9102528333756986`*^9, 3.910252927612199*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"c9d85f23-f864-41d4-8c59-f42ec931da8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["6.4 Gram-Schmidt Process", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.909484073129572*^9, 
  3.909484084627141*^9}, {3.909485796050621*^9, 3.909485816190303*^9}, {
  3.9094958855202928`*^9, 
  3.909495915426386*^9}},ExpressionUUID->"c3009e54-b1c9-47f6-898b-\
1e5633cb8845"],

Cell[TextData[{
 "The motto is orthonormal sets are very useful. The question is how to \
construct an orthonormal basis for a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"W", "=", 
    RowBox[{"span", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["a", "1"], ",", 
       SubscriptBox["a", "2"], ",", "\[Ellipsis]", ",", 
       SubscriptBox["a", "p"]}], "}"}]}]}], TraditionalForm]],ExpressionUUID->
  "de47618c-afb3-47bf-ac41-96b6741902ee"],
 ".  The answer is start at the beginning (a very good place to start!) and \
proceed by induction.   "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909486072051037*^9, 3.9094860831173477`*^9}, {3.9095821662371044`*^9, 
  3.9095822877158356`*^9}, {3.909582327180131*^9, 
  3.9095823573337307`*^9}},ExpressionUUID->"9874c4f1-91b7-494d-835f-\
00a69404e1ae"],

Cell[TextData[{
 "Theorem 11: Gram-Schmidt Process\nGiven a basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["x", "p"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "150a927f-8d2d-4c95-9b2d-3802649238c9"],
 " the algorithm below computes an orthonormal basis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"span", "(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["x", "p"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "68504e13-4a7c-40b5-b35a-12a53b2019c4"],
 ". "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
  3.909582475459145*^9, 3.90958248372447*^9}, {3.910252556243889*^9, 
  3.910252595488388*^9}, {3.910252979332271*^9, 3.9102529795721693`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"65317a0f-af28-4c2d-a069-d8d7439f6ab2"],

Cell["\<\
The motto is \[OpenCurlyDoubleQuote]start at the beginning, makes things \
orthogonal, and then normalize. \
\>", "Text",
 CellChangeTimes->{{3.910252945413162*^9, 
  3.9102529757069435`*^9}},ExpressionUUID->"fd860c56-7c43-486b-a8f8-\
1fa9769d2e10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Fix", " ", "the", " ", "length", " ", "of", " ", "the", " ", "first", " ",
     "vector"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u1", "=", 
    RowBox[{"x1", "/", 
     RowBox[{"Norm", "[", "x1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Make", " ", "the", " ", "second", " ", "vector", " ", "perpendicular", 
    " ", "to", " ", "u1", " ", "and", " ", "normalize"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u2", "=", "x2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u2", "=", 
   RowBox[{"u2", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u1", ".", "u2"}], ")"}], "u1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u2", "=", 
    RowBox[{"u2", "/", 
     RowBox[{"Norm", "[", "u2", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Make", " ", "the", " ", "third", " ", "vector", " ", "perpendicular", " ",
     "to", " ", "u1", " ", "and", " ", "u2", " ", "and", " ", "normalize"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", "x3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"u3", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u1", ".", "u3"}], ")"}], "u1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u3", "=", 
   RowBox[{"u3", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u2", ".", "u3"}], ")"}], "u2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u3", "=", 
    RowBox[{"u3", "/", 
     RowBox[{"Norm", "[", "u3", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Make", " ", "the", " ", "4", "th", " ", "vector", " ", "perpendicular", 
    " ", "to", " ", "u1", " ", "and", " ", "u2", " ", "and", " ", "u3", " ", 
    "and", " ", "normalize"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u4", "=", "x4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u4", "=", 
   RowBox[{"u4", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u1", ".", "u4"}], ")"}], "u1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u4", "=", 
   RowBox[{"u4", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u2", ".", "u4"}], ")"}], "u2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u4", "=", 
   RowBox[{"u4", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"u3", ".", "u4"}], ")"}], "u3"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u4", "=", 
    RowBox[{"u4", "/", 
     RowBox[{"Norm", "[", "u4", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Assembling", " ", "U"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u1", ",", "u2", ",", "u3", ",", "u4"}], "}"}], 
    "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Norm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"U", "\[Transpose]"}], ".", "U"}], "-", 
   RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "U", "]"}]}], "Input",
 CellChangeTimes->{{3.9102529973900447`*^9, 3.910253284191572*^9}, {
  3.9102572610081234`*^9, 3.9102572640285206`*^9}, {3.910257466613633*^9, 
  3.9102575393250275`*^9}, {3.9102575719892607`*^9, 3.9102576910483255`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"8911a1aa-7457-4f31-b8c9-58259e6d3419"],

Cell[BoxData["3.1315369533490803`*^-16"], "Output",
 CellChangeTimes->{{3.910257620609166*^9, 3.9102576914183145`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"7eb9cfa6-c956-454f-9e0a-55c427dfedd5"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {4, 22}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{21.5, 
       FormBox["1", TraditionalForm]}, {17.5, 
       FormBox["5", TraditionalForm]}, {12.5, 
       FormBox["10", TraditionalForm]}, {7.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["22", TraditionalForm]}}, {{21.5, 
       FormBox["1", TraditionalForm]}, {17.5, 
       FormBox["5", TraditionalForm]}, {12.5, 
       FormBox["10", TraditionalForm]}, {7.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["22", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.910257620609166*^9, 3.9102576914495935`*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"b92c2d39-f663-40bc-8508-97e0b4897e53"]
}, Open  ]],

Cell["I am writing the code slowly!", "Text",
 CellChangeTimes->{{3.910344052510309*^9, 
  3.9103440629833827`*^9}},ExpressionUUID->"6c00cb3d-9eba-4c55-b810-\
264bbb22d930"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Copy", " ", "X", " ", "in", " ", "to", " ", "U"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "=", "X"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "the", " ", "first", " ", "column"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
    RowBox[{
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "/", 
     "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "the", " ", "second", " ", "column"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
    RowBox[{
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "/", 
     "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "the", " ", "third", " ", "column"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
    RowBox[{
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "/", 
     "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Fix", " ", "the", " ", "4", "th", " ", "column"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], ".", 
       RowBox[{"U", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}]}], ")"}], 
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "=", 
    RowBox[{
     RowBox[{"U", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "i"}], "\[RightDoubleBracket]"}], "/", 
     "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "the", " ", "answwer"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"U", "\[Transpose]"}], ".", "U"}], "]"}]}], "Input",
 CellChangeTimes->{{3.910343862309291*^9, 3.9103440404569793`*^9}, {
  3.9103440855801706`*^9, 3.910344315040694*^9}, {3.9104296439751425`*^9, 
  3.9104296721998715`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2f6d212e-72f8-47cf-b57d-eff0d4e55eb2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9999999999999999`", 
      RowBox[{"-", "4.336808689942018`*^-17"}], 
      RowBox[{"-", "2.3852447794681098`*^-17"}], "3.8163916471489756`*^-17"},
     {
      RowBox[{"-", "4.336808689942018`*^-17"}], "1.`", 
      RowBox[{"-", "3.469446951953614`*^-17"}], "7.28583859910259`*^-17"},
     {
      RowBox[{"-", "2.3852447794681098`*^-17"}], 
      RowBox[{"-", "3.469446951953614`*^-17"}], "1.`", 
      RowBox[{"-", "6.938893903907228`*^-18"}]},
     {"3.8163916471489756`*^-17", "7.28583859910259`*^-17", 
      RowBox[{"-", "6.938893903907228`*^-18"}], "0.9999999999999999`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.910344224712545*^9, {3.9103442712692966`*^9, 3.910344315841075*^9}, 
   3.91042967615298*^9},
 CellLabel->
  "Out[61]//MatrixForm=",ExpressionUUID->"61cda4de-f140-4bcb-b3f8-\
0faadede2f3a"]
}, Open  ]],

Cell[TextData[{
 "Theorem 12: QR Factorization \nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "e7110937-de70-4109-9c2a-d5e0703c7c90"],
 " we can factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"Q", " ", "R"}]}], TraditionalForm]],ExpressionUUID->
  "3bc48132-cff4-462a-8de7-94dc41906817"],
 "  where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "5a5e0175-5c0f-4b25-b02f-cc7f0b25653f"],
 " is orthonormal and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "9d96f29a-2f76-4ace-b1af-8e82b9e92114"],
 " is upper triangular.   Normalizing the vectors as you go in the procedure \
below (from the book) gives you the QR decomposition. "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
  3.909582473551285*^9, 3.9095825999510155`*^9}, {3.910252600766368*^9, 
  3.9102526064512143`*^9}, {3.936691379655915*^9, 3.9366914787722616`*^9}, {
  3.9366915305490217`*^9, 3.9366915336923676`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"04e5c56a-c202-4dcd-addb-7125b8bb6b0a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdAFEm+/8WwpnVNmHNCjKiLWUFFEQyYM1myATCCAQEJgiBJcs45z5AZ
FCXsexff5dt7d/d/d3t3e7f5bndd0/ff3TPMTM8MMCiIyO977/NYp6dDVVfV
dH276ldzrJ0P2g0cMGDAxWHM/ztodXXrhQtW7ofGMP84cv6io/15Wxvj85ds
7W0vrLMexHy4g/mu7eABA5j/GwASiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiUQikUgkEolEIpFIpC7rJcMLub+d8bJ3LpNEIpFIJBKJ
RCKRSCQSqU+pM4/lOV6+fCYDT9vlBcdzgiAIgiAIgiAIoo/xkt6vk0i9oI79
GID1Yp7KwA/tIvZknvV6W0IQBEEQBEEQBEF0DfJkSKTekBqeDOTHx3Tgybx8
yvCM4TlBEARBEARBEATRh3j5kjwZEunNq/MYMS85z7T9OUtSuLE07Lia5wRB
EARBEARBEESfgjwZEunNizwZgiAIgiAIgiAIgjwZEunNSw1Phqufz9SE/e4L
giAIgiAIgiAIok9BngyJ9OalrifTGfy6TBAEQRAEQRAEQfQtSCTSm1ZbLN/n
eHVPRuLDvCAIgiAIgiAIgiD6JOTJkEhvWGydk62v1L4n08n4F64OQ4oaQ28I
giAIgiAIgiCItwmyZEikN6g2P4blmQTVY2VUejIvXuL58xd48YI8GYIgCIIg
CIIgiL7MS6Yr+OK5LKYMzWUikXpaYk9GPPdIcf2kZ1AVJ+bZs+cMYh/mOfPf
//7mWzz5/hnz3y85nv7A/GV48ZSpvwRBEARBEARBEMRbD9t/e/bkOb75+hs8
efID0997gadPn+KHH8T/Tf4MidQTavNknnXiybzk6iHrxzx58hTfffcDvv/+
Kb7+6j/43W//gF//6vf4za8/Zv5+jF/94nf4zS8/xm9/+Xv8jvkr5vcKf1V9
9vsufNaV477Jc3XluG/yXG9rftG5+ta5qHzTud7lc1H5pnO9y+ei8k3nepfP
ReW7u87121+K+3C//fXv8MXnX+D5c/Zd/DPOl2H7gvKQP0MidZckngznw/wg
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
ymUq6w7i7uMvRnNwdJAlvEBm7tfffsyBJEnNwesUZf+Nm5E14OBoe7hPWIHj
J67hzP59OHrhY4/9mJSSr4g+tQQBIfPxPpPrjxJ1rQVvF2vmhgmdsLPTuktE
5siIiUNmSf+O/yKigcNMhsUSr5jJEP2LquT3iPD0wbZzMQbzJJAYGrOj4W3h
gIPPiiH0mTHrPsUlOLBkCrym7EU+17og6lZtbiYibTTzb9t7j0Zi3nfR94mI
iMTFTIbFEq+YyRBpNFXUI+ltPD6xj4Wo0q/ugZWjP2LSm8y7j7xVfd6+fKno
5fysRMNPbXYm7ly8hSvnbupdfIDHT9OZRxMRDWPMZFgs8YqZDBENCvKfqM6r
xLaZo2DnEYKPCdW6dWmIiIiIqP8wk2GxxCtmMkQ0GAjrHCe/jceze6/w+N4b
vHmRgLKKP7OGPRERERF1jZkMiyVeMZMhIiIiIiIavpjJsFjiFTMZIiIiIiKi
4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIiouGLmQyLJV4xkyEiIiIi
Ihq+mMmwWOIVMxkiIiIiIqLhi5kMiyVeMZMhIiIiIiIavpjJsFjiFTMZIiIi
IiKi4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIiouGLmQyLJV4xkyEi
IiIiIhq+mMmwWOIVMxkiIiIiIqLhi5kMiyVeMZMhIiIiIiIavpjJsFjiFTMZ
IiIiIiKi4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIiouGLmQyLJV4x
kyEiIiIiIhq+mMmwWOIVMxkiIiIiIqLhi5kMiyVeMZMhIiIiIiIavpjJsFji
FTMZIiIiIiKi4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIiouGLmQyL
JV4xkyEiIiIiIhq+mMmwWOIVMxkiIiIiIqLhi5kMiyVeMZMhIiIiIiIavpjJ
sFjiFTMZIiIiIiKi4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIiouGL
mQyLJV4xkyEiIiIiIhq+mMmwWOIVMxkiIiIiIqLhi5kMiyVeMZMhIiIiIiIa
vpjJsFjiFTMZIiIiIiKi4YuZDIslXjGTISIiIiIiGr6YybBY4hUzGSIiIiIi
ouGLmQyLJV4xkyEiIiIiIhq+mMmwWOIVMxkarJSyVhRllCEnpaST8uKvnX+e
JkWDXPz97ouaEpnJ55mbVoUGaQtK00sNbi9FeXmL6PtMRERERH8HZjIslnjF
TIYGq6aKWmyaPw72lhawsNCytEXwqIk4cy8dTeVybFs8B76u9rC0tMGoWQdR
LBF/v/viy+0jCHSy1j9PFRsnL8xcsBNFJTU4/s9M+NkLt1vDO2gCTr2Tir7P
RERERPR3YCbDYolXzGRoMFNKm7Bnmrs+q7D2wr3kRoNt2nF582SMGHMGVdVt
ou9vn8nbUB1/E742+kzGNnARymTa41AtxwYvK0QuO42K8h+q190g2GciIiIi
+iswk2GxxCtmMjTYpdw9adB/xAphW2PQ2PFzWT3Wjw3GmfjmP/64spRPcLW3
Muq70muWtniW0GTmY7bh+ubZBve3xsSNzyCXtuHD2a2wD1mG1Lxvop8PIiIi
Ivq7MJNhscQrZjI02CnKijHZwVKfVViNwpfCVvXPZB/PIGDMGtSZuF9jlRJ5
0W+wde8VNPXhcRtKpbh75S6uXbzzGx6gsNj8uV+UJTmY7WGne66Wtk44c/oQ
gjzH43Pxzy7u146aYhmirx7FmQdpop8vIiIiIhpamMmwWOIVMxka/NpQeGsp
7Az6n+y9moGvsmacmBWOfw7EdrpPxsun2Lh8GZxtreA+dVufMhlxtCPv9TW4
2ukzKCtLO+y9V2Rye6W0GQ9OHceiyWNU21pi9ZmYQfAciIiIiGgoYSbDYolX
zGRoKFBKKjHJR99/JHDeEUjysjDSdzReZf3otL1C1gZFeTWm+LkOsUxGeK4K
nF0UaTQGavqm+1CY3L4dCnk7Kt7fZyZDRERERH3CTIbFEq+YydDQ0I4zy6Ya
zPUbjBNn1yNk9bMu8xZlpRQz/d37nsnI29EkbUWj5Deo7q/sw/rcyrJMjHM0
mJfG1h8PM793uX117GNmMkRERETUJ8xkWCzxipkMDRVVH67AyWitaE/c/ijp
cvvfzWTkGckYGx6GkOCRvyEC71OUvXpcRVU9DswZhfETpsPK4Pna+S5ARlGr
yfswkyEiIiKivmImw2KJV8xkaMiQNWDPWEddRuEWvBAlFV2vf/27mUxdXgE2
rViD5UtX9d2yDUjK6cVaSfIf+HB6I3xHrUNWSRNurwiHjUEus+zgG5PPhZkM
EREREfUVMxkWS7xiJkNDSdKdw7C11OQTs04VdDHHisZvj10SQc6DExjhFoQP
aZr1sxtLKzAx0Em/DpO1L64ndl73m5kMEREREfUVMxkWS7xiJkNDSV1eFkKc
7GDlPg3JZe3dbjuUMpmmKiW+3LuEMC9HeAUvRVZBs+q1pbq9sh7HZxvP9+sV
uRIZhcZzyzCTISIiIqK+YibDYolXzGRoSJF/x+PlEZi17VaP2w6lTObznWOI
GhWFyA5RG5Bf1YroXTP0txmYdTDR6DkxkyEiIiKivmImw2KJV8xkaKhpqqiH
pLzrNYg66DOZrYM+k/ldzGSIiIiIqK+YybBY4hUzGfpbKcqrMdnPFS4TNqJ+
EOxPfyp/f1+dySw5/l70fSEiIiKioYWZDIslXjGTob+RQvIDFckJ8He1gYX7
dKQVKdEg7XqNpqGrHfWVzYi5uF8914z/0vOQlH9TvSbF3i8iIiIiGiqYybBY
4hUzGfob1RbLkRqbjLfPYtViYwtQWfZD9P364+RtKMssRfzbOO1z/YyU5Ao0
yLqf/5iIiIiIqAMzGRZLvGImQ0RERERENHwxk2GxxCtmMkRERERERMMXMxkW
S7xiJkNERERERDR8MZNhscQrZjJERERERETDFzMZFku8YiZDREREREQ0fDGT
YbHEK2YyREREREREwxczGRZLvGImQ0RERERENHwxk2GxxCtmMkRERERERMMX
MxkWS7xiJkNERERERDR8MZNhscQrZjJERERERETDFzMZFku8YiZDREREREQ0
fDGTYbHEK2YyREREREREwxczGRZLvGImQ0RERERENHwxk2GxxCtmMkRERERE
RMMXMxkWS7xiJkNE/U0pbUFNRbMJ36CQ/4uGqm9Gt9dVtQ7QvrWjodLUfjWj
tuqniZ8L+9su+vEkIiIi+pOYybBY4hUzGSLqb2UvLiIoIBiBvwgeNQ+J5W24
sHGR0e3TV91DnXwA9k1aj6MzQjvtV2BACKZsT0ajrAmn50fpbg8dNQ3JOc2i
H08iIiKiP4mZDIslXjGTIaL+14bMZ9fgbm8NCwsLLQ/cT2nW/fzF0cWwcgjF
qdvJqJMN3L41llVjeZiHwX5ZYPXZbP02su94sSYMIwJn40vej0FwLImIiIj+
LGYyLJZ4xUyGiAaE6n3i9aYxsDLIPqauugGF6mf1+SmY6uaOI2/kIuxbOyqe
bIOdpX6/Jv9zRfXepv25rBmXpnlj+b5X4h9DIiIion7ATIbFEq+YyRDRQFFW
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
yg6Tl55GmUT8/e6Lkrh3mD7S3XhNaBt3zF68GWk5Crw+swvTQhzVt7sFjMG6
c+loGgT7raEfuyS03YV2qpDBCIQ8Rmi7CvlMfXWzrp+M2O1pMTw9uRtBzlZG
a357hE7A5kP31cfw+ZnDmBwRqL4GgiOX4EVmi+jnlZlMZ8L1K/SPqav6qr6e
hetdUJ3+BYvH+hm9hq0cPDB7/ip8TlOgOjUJy+fPhpudJeycArH2VOIgeg0T
EdFwx0yGxRKvmMnQoCb/hoOzPPXtWGsv3E9pMtimHVe3TMWI8ZchlQ7tOTUV
lWWY7mdrkMkE4WnuT+1xaMG71d5wjtqEwvLWQfb9un6OX2E+GaGd2pHBCHmM
0I9A+LdjXEfH2I/hwLg934r4K2tgo2uzW2HG8Y8wHLuU9fwKHKwj8LlgMIx7
MT+TGU7nVLiWBcJzFjLHjrFKQkbTWJaJCS76TMY2cD6kRu9nX7EswhFLrpRC
Ifr5JSIi0mMmw2KJV8xkaLBLf3DWqG9B8Pr3aOgYoySrw5qoEFxK/P7HH1eW
8gmu9ob9GvrA0hbPEprMfszE6wcM2uwWcI/cgMKyVmQ8vYQRDpF4k1Qn+vno
TNNPRpg/o2MOGaGdLuQyQg4jtFs72rOtiv9R95/paNf+zUxlF7W5aQh1tded
XxvfFcit1OZuqvfQJ7unY/y+BDSKfk4157U3/WTEPt4DpSOHEa7vjmu5Yw7r
b/VtuLxxpv71b+WCfdFK3TFtyn2L8NBFyK0a2vkxERH9fZjJsFjiFTMZGuwU
5aWY5WSQjViGIS5fM66j+u1xBI1bj3oT9xPmaCnMKEdRbh0aZL1/3MYyOR7f
eoI71x/32d0bz1Bc0osxKHIFzs0LgJVBprNi/xnMCvLH2dimLvrHtEFaIEVe
WgXKi8SYZ0aTyTRJNWvRCG3Wn8r/NepXIPSZEdqwbV//j9HYpr+ZyVymphmP
Vo4yGN9ihX0PKzTXeWk2ZvmGICan2eRxVkq/oTRHCsWAzZnUu0xG7OM9UIRc
UbiGayoUuj5CwnUv/Ey4vqs/3TMab2kXeQYS6b/qvm5v14/EvN2PTbzuf0KS
L0W+aK9hIiIa7pjJsFjiFTMZGvzaUfpwFewM+o/supSGr7KvODwtDCsOf+50
n9wXNxHu4w1nRye4uHoiYu5hlJT/HOD97ht5VgqC3OwNMigLLNj30XQ7TfYd
d3cuhY+HGxxHOMHd0w9bzn5Gk5nt9pyXV7Fzyx7s6IuthxGT04KOtrswx2+T
rEXdThXarEIO0zF+pzi7CqnxOchKKkRibAYSPqb/9bKTi0yMX1K14YviEOGg
v5ajFhxVn4u0C5sROn4bajqNwWuHLCUOSyeMhv+4xZBJetHHorIYx7f38fyq
HLyWD3MymYoCORJjhsd5TfuSi8ykAvWc3MI1LvQFE/JG4Vyr+4RJ6nF9rpvu
/FpaO+J1sgKNhbkY6eyAO58ajM6RkLVd3DgP3u6q17Cj5jW86tAr1MvYl4aI
iAYOMxkWS7xiJkNDgVIiwRQ/fU7hP/sgqnMyEOo7Fu9yjPuhNObFY9PavXj6
KhXJ0Qk4snKGur/Jxqupoj8Ps8hbkXhhndF37YETt0Leqa9PG9LuHMbWfTcR
+zELcc9fYO5IH1i7hCG+wLyxXJ+vrMXYqHF9NBV3k4XH0ay71Kb8v6q26Xdd
O1VoowrZjLAG092rT7By8QbMmb4EsyYtHBYO7DgOeVmTiQzjB44uGa0fv+Q+
HpmVrdg0dRS23CrvlL2Vp2Xi1pX7GOvvDKewOb3LZMpSMH/M+D6e3/GYuu0L
zMlk3j6Nxdypw+Pczp66CIvmrMDBnSeQm1pitBa20GdGuN6rPt+Eu61+vOWq
05+Q9vAUXKOOolJq+FpvQczhhZg8exMuXXqIqydPY3KwFyysnbD5Vh77yxAR
0YBhJsNiiVfMZGhoaMeFFdMN5voNxMFjqxG+/uUva5e0IePSCWSV6PvEKEoy
EKq6T+SeN716TKXsJ+SlCsh+ixKNffi+WyltwJrRjgZz09hi/uUi4/4vkhrc
OvYadQa3lT3eCwtLd9xKVQzouRH+/V7/H+0cMkI/mf+grvIrmqQ/1GM6SnKE
dYJzkaNqwyZ+zMSXD2l/PaFPkPD8dZmGgZx7x43GL0058QQjQ5ejsKt1w1Tt
/Q1TQnufyfz2eTUYu9SNioIaJESni37MB0J6Qj6yk4vV/WSE86uUt2qudZkw
5+9/1euPKatkmBHqrs/dQtZh9+xgHHhfa3SMmwrTMDFyM0oN1j2vTX4GLyvV
/YIOoqoPYy6JiIj6gpkMiyVeMZOhoUISewPOBuOXrB29cD9W1uP9mgpSEGjt
gJNPC3v1ePL0RIQHBcDXx6/vfAPxJlnZu+cq+45Hm2di7MRZCLE2XBvbC08/
dz/Hb9HdnRjhOxF5ZeKs26NQtU+FPjPf6v9Fo+SHet7f7/XC33mhL0E7Wpv+
Fx3zz/z11HlFR6ZhmG20QVFeiAWuBufW2g7Ljrztul+EOpMZOcCZzL8wzmWM
n4Phv8JzVcrbxD/mA0AYo/ej4X/U1/q3uv+obxOudeFfIZdUyITj0oqYfXMM
MlUruIXMQEmF8fhJRUU9svJ+6dMmb8DuINV9fHagXDpQ55mIiIY7ZjIslnjF
TIaGDFkjDkxy0a9JFLoMpRVt3d5HKVXizq6VGPPPVVRX964tW19Qgn1bdmHL
hh19t3Ev0n5tc3WrHZmPz8HDfxLepiqQeXs7nG0sdc85dN5RVHXRJm8oKsaK
iZOw/3auiOvstkHTjm83+O8/dVt//d6BfKwOP5F0doF+jS1LRzz7YjzPiPG1
L1Ym8+8wOjd/6rE0x01R+BljHPWv3ekbnpk3z1NVOZa6W2H0jk+/9AEkIiLq
P8xkWCzxipkMDSUpD07ATjvPytzzpd3Ot1D2+S3mjXRWb2s7IhjRqY2i739P
5Ekv4GPthsvREvX/K6XN2Dox1Gh97SVn8n7JXFoRfekQvLU/D56+H/IBb7dT
b9Xl5yDc1Vp9zqxGnoK0u3EqomYy1DdtuLAuSvu69cGDTPP6rlW+OQdrpxB8
yu5l/zoiIqLfwEyGxRKvmMnQUFKvaseGOdvD2nMW0iu6a5u2Q5JdgPg3n3Bu
+0pYq9pFjsGrkVs5ONuzSun/z959eDWxP1yjT6NXEbBg7713xXaUY8Xeez/W
Y++oiAWxgiJVpHdIp4ZgBX7P+7zP+9517/+zbyaUJEoJCEwge6/1WWoSyGRm
MmZ2Zr7zDZnRDzBr6AC4BYzAy49683fqwjVZXh1aatPJuPuPw+P3ZZY+yvT+
y/6QhteRz7Bx1kjTYxSYsO0dqnrtmsnUJbqvODJvNCQyXxx928H+NzuZPik7
6mrjmOTLztuM+9S2b9gxZwxWHDG9fzmWDBER9SJ2MgwjXtjJUJ+i/46o9ZOx
dPfdTvzMD7zYPQVyiRsufPgi/mtoReG7l1g4Zz7mzmq2CC8+f0fxy7NYMMv6
9iYr/oW6lbEmjMoShI1wh8R9KXLV4r8ual/p81MYOWMDyjp6LDuZPslYUoKV
QwbhwiM7xrLSfcP7c2FYvPmmnf0NERFR92EnwzDihZ0M9TU1mi+oUHduDFvd
51cY5OqKc+8ds5PpTtEnV0Dmthg57GQcn/4nykq/dvw4djJ9VAOqSmrsuvZa
2qN/MSL0JpTq9sfIIiIi6gnsZBhGvLCTIWegTnyIwOBl+FTS3/dnG/Bo/xwM
WfsMlfyuvf/QfcfGGcK1sBdAq+E+e//SgOznEdi7/zo01n2b/jvSEwocYPqI
iMgZsJNhGPHCTob6l3oUvo7C9VuxKC74Yh5zpapEj/NLhuPg3UwHmL5upK3B
y6uX8fRVHnQq4Rq7DdCkxWHB2NlILvgu/vRRtxHGFVo5KQiug2ehSFUn+vRQ
N9HXoSjuCWYs3IYHES/xpEnUvSc4unYGDl3JEH8aiYjIKbCTYRjxwk6G+hX9
dzzbOAEyiRx+QSMxe+5irFq7D4/fFKPKjvMH+hJjST6WD5JDIvfA0JFTsWj+
EmzZew2fMqrbvR4V9S2q5DQc2x4GX1cZJDJ3zAo7ihexJaJPF/257Kc3Eegh
sxnDu4XbTCQW8JgoIiLqHexkGEa8sJOh/qcBysxiJLzLQE5OTb/uJ4TrNeUm
ZiLxQx5USu6/EREREVHnsZNhGPHCToaIel4DanR1MLSiRv/7/TW63uuX2pyu
puOqjDa31/frju9PGE3zxv75WGf6f0P8dc/Y6rrXv46nIyIisgc7GYYRL+xk
iKinGfI/Yc30mZg+9RfTFuJ07BcYCzOxfo7l9sUrD0Ol6oV9Y101zq+e8/t0
TZ2FFYfTYNDX4Mq6RS23z5q7Gp+y7bhOkrPRf8Pj7StamY+mZRkegUr9d8Ts
WW11+2zcfV3WO+te1muETmtt3VuK+8nfUJP7AStnWW5ft++e+POTiIiol7GT
YRjxwk6GiHqDMvENBnsqrMbM8Ma194aW+w2laqwO9ETw9B0o6I0+pklVQQkW
D/O1Gcvj77PpLfcbdV/xcM1wuAbOwKv0b6LPR4el/47jKyfbzMdBf79Ghc7y
mPh/wiFzH4jLL1S9erxRZuRFuFtNl1QagLfplm6tKu8zZrrJMHLVFah4rXEi
InJC7GQYRrywkyGiXqH/hvuhQ6322aXYejmv5X5jqRKzfTxw7G5+L09bAwru
rIfcap99TthNS2dgmu4b84OxfPcj8eehg1O/vQmF1Xx0H7QFpRrL/W+PbsCQ
ibug1fZy76Ez4NREF8u6J5Xh1it9y/2G/GSM8ghCdGKV6POQiIhIDOxkGEa8
sJMhot5SnRlj2ve17LOPXLgfNU33Fbx+AA//RUgran0smZLEZNyPrerw+Irq
whLcv3AFFy4+QUHRT/umTaPDqtFeli4hZAFKm3qDiuxMjPIJxD2rY3psnq+0
HJFXnqBUzeMrhHPBzswbYDkeReGFR+/Lm+7/ifCZo7Hjgfa3ZViWp8Tze48R
cfcN0jON7S9j3XckR0bi3KlrePleZ/fxNkVvrsLfxap32/Wo5WcT/t2HgeO2
Q/XLMjSUVuHt4xjcvfkMHxM0TWMfERER9T/sZBhGvLCTIaLe04DjqydYjlfw
HIe4QqGDqcPdHTMw+3RmS0djpq9D6ac8XNyyDG6mx485UdDB/vpXbJwaYul8
Fh9FmZ370dEntlgdw+OJndGN1xRPuXcM/tPPQ6uzfXyNsgLxD25iapC76fFj
kNxGl+Rsit7dgb+LtGk+yrDkcIx5PhoynmLE6DAUaa2Xbz3SH13CaH83+Hh7
QyGTwsUrEMfuZaKq1eXWgISbh+Aia1xOcs8gRCVU2DVdNapKhI4LtCxj/yX4
VNJgXvd2LRyDDXdtuyJ18jssGh0AL28fuCnkkCg8sWJfFNTs3oiIqB9iJ8Mw
4oWdDBH1przIs1bdhwxjdqejqiAF04LHIznv1/FafqI0Q4OsqOPwsKOTqcl/
hWC55VgIiWwwHuXY15VUZrxHsNV5N4qQA1CqDTg8LRj/vNL8/lyl5SjMLMLe
yZ7sZKzni1KPRcMCWuajfOAKZCm/IXJFENYcfm47z/NzMHn0PNyNyUNRlgZJ
D69ihKvp5xTeuBNX3crv/4Ijk91szn8btz/OzmNl6pH6z2qrn5Uj7FIhDDkx
GDVyNQqtzrEyamuxdtpE7Lv6EfmZOmS/f4vlw4XnVWDnxU+iz2MiIqLuxk6G
YcQLOxki6k1GZQnWBsst++yeU3F9fxhGLziKSl3rP1Od9hAD7OhkjMo8TBxg
GTfEJWAOUkvtnDb9NzxYOwTSln12V1y9eAYhIfNRWNLWOVA/cGn5QHYyNurx
8XgoZC3zUYFNJyMx1G0AIj9an//VgJxH+3HnZanNbR+v7YarVIKtZxJa+d0/
cWPdOMsykrlh/Y1M+9e9onTM8Ze1rB9Dp27Avb/HYNnexzaPq8h6hxP/frA5
ZqvkwzMEuMswLey8A8xjIiKi7sVOhmHECzsZIuptn26EwUVqOdZBrvDE3sdt
XxvZ3k5GEH/1MAL9B8B/QBBOR2R1arp0qdEIcpW27LN7yRWYHv4KhjbPfxI6
mUB2Mr8qycB0b8t8dJW6w3XKFeja6NyslcRFw9dFgh3nUlq9vzw7E4uHD4a/
3wBMWHYSKlXn5vvtXXMtx8rIXaCQuuHOh9bHCrJZB/PzMWygG2atvyT+/CUi
Iupm7GQYRrywkyGi3laRk4VRAa6WffaR4Shq5xrEnelkBFXKWpSp7Bzf14pR
bcDqcYMs++wuo/Aks73fw06mdfW4vHm2Vffhj3NtjJH8q7RHZ+Au9cWjpNq2
H6f7AV1xbZfG3C1+HWFzvW73KeegsaMr0qbGI8hThr03ch1g/hIREXUvdjIM
I17YyRBRr9N9xZlF41rGlFl3Nq7dx3e2k+m6eiSeWdty3s2IlRdR3e7j2cm0
Jf/5jZbri/uNXg6Nxo75ozXgxMKhmLDpOSp66BpHRpUOmwYpmroiXxx/qbfj
5+rw+uRKBIzdhtxSjvFLRET9DzsZhhEv7GSISAzl78/BU7hestwNL1O/tPvY
3utkTJQ5mOnV2CX886Cgg8ezk2mTRocw/8b5uGDnO7uWW86dA/AdNg+FpXU9
Om3a55vhKpybNnwWSpUdP1fl55cY4jUUrz/Zd6wPERFRX8NOhmHECzsZIhKF
rhrbpvnBZ/b1DscZ6dVOxrQtu71jHiQes/G5sKP9dXYybWtA7t1NcHcdg2cZ
Pzp8vCE3EYvn/41XKYYeX8ZGbRlmD/XA7K0v2hkrqIm2AtuWLMW5qMKOH0tE
RNRHsZNhGPHCToaIxJLx5i2i0zveX7d0Mvm90Mn8B+rUdPz7SGlz3Z3WsZNp
T42qHPfvp8DQwePKc3OxYeo0RH1oe5zn7hYb8QTxOe2POVSjqsT1DfNw8vZn
0eclERFRT2InwzDihZ0METm6ypT78JNIMPJIjh09SW/6gfNLAyCRjEJiITuZ
LtHocWLzNnzK+2rTtxW+eoPorJ49h6l9P/Ho2C7cjdXZHB9Tlf0Zpx5qxZ9v
RERE3YidDMOIF3YyROTolE8PQyGM/7H4aY+N/dolukrsGO0CicQLT1O/ij89
fUxVYSHCZ4/C2JmrsfHvLU3CsW71X5i6eLdd10PqCUZtLS6GL8HQkXOwoWW6
tmDD2vWYOiUUsQXs34iIqH9hJ8Mw4oWdDBE5LP13fLh8DounTsGIYSPNNu+5
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
9yL8/b++/T/m1y4cHyP8u/lcJvPxMspfP19/x9aZgyBV+ODCi9IO5r3jdTLC
uTrN4/wK3UNzN1Nv/D+oq/kf8/6P2MumN9To6szHwvzny//b0sc0Hi/0H5tj
ZZRvzsBXLsGQ6eGo0nW8DNMjTmHUhDDktHu8IHU/y3EyzrIO93XC/zVC/yJs
i+tr/8fcg5crjS23C48RtsVlJTUt14wTGAoyMNVD+MwxAFfet36+sLWyuOPw
kvnixPPylnXlw5k5kEn8cD/1u3m9idizCWPHjLfb2r1vfrsWGDsZ6mnsZBhG
vLCTIcdXj4zTU+A1/UjHx3toyrEh0B3jN1jGvjSWFmCmQoKQ9RE9fj3prsp6
chOeri5QKJp54FbiV+RErIeHwvr2JoO2o1hj+fmqjA/wlsiw73pqy23697eg
kLhh94O8Hp7+zp27JHwOFr6fdBbCa24eR0bQ8OX/mOeB+ftZYd9d//ux7e/P
bIfPoOnILe7ouHfH6GSax5IRegbh2JDm40HKSxvPu2oeU0a4xsm3SvGXSW8Q
lqswP4ROSuiphHOXhPO6mm8T5ovwZ42qErNH+uLv8zkdz+eSfMyYtAKJRe2f
S0E9oXE797XiP06zDvcHQvfdfN5S4/vyh7mfEf7ePN5Xjf4nLOcu/ce8nBOO
ToL37LMo73C9+IHo5b5wn3gAuubb9LU4O8UF0mH7Wr4j6Q7sZKinsZNhGPHC
Tob6AqOqDJkZlR0+rjwtHn6uchy7bdm/+XTnFOSu3oh4J961LHva5/vnTJ/V
vPEy1TJ2zfUti+EdNBeZBfacD/EnOnecjNjjPvYW4TO/8Nm/+Xwt4Vh54U/h
duH4GeG7WuHvwj7er/PUUFKG1ESNHeMAOUYnI4yT0ty/CJqPB2nuZxrHmPlu
Pu/DecZHbWjpXoR5I8yDxutg/28zoaMxj7mj/Ym8pHyUKNvvWSqyM7Fqziq8
Sizv9uVH9mg8d4lj/PYdwjZW2AY3Hxdjfc6SsA0WHmPuaip/X96GUj2ysjo6
Ltf02aSkANPcpAg7/ablNk1cBHxdvHD0YX63XiuRnQz1NHYyDCNe2MlQf/Ip
4jxcpD54kd7YQ9SUKhE2bTjm736Finauu9q3NeDmzgVQBGxoOnamAWWprzFp
yFCceNr29SK68/k7O56M8Gd/J+wHCN/RWr/u5tcujHHQ/Pfasj855uEbtkzx
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
eWDfM2XTbXWIP/M3AobOQXJR916POSK88VrYcVmO1cl8PBMO9+BJyG4aE6pG
VYmwScGYvu6aXWM32e8rlozyxNCJG5vG+BX/tRM5OnYyDCNe2MkQUZ+jqcLm
UQMhcZ+AuCLH+rytfrrHfG3Y4eEJHY73Se3QfUfy/fMYN3MDLpy/hStN/j17
GVsXjcO5B4UiTVs9Sj++wfTx83Dk9M2W6bp87jqOhq9E+JFn4s87ckgFDw9D
5j0KCdmN10Iq/hCD8aMn4NLTkm5+rgacWz0LEkUQHqQYRH/d1tN1aNkUhEzZ
Yz52xaiuwdMTf2PcnP3IKuneTqpWX47ZQQoEjF4GlaqbfzdRP8VOhmHECzsZ
IupLytMSsTtsBTwVwrWUZQiYsAaXnhWIPl21uq+IOX0I4wd6m69BInfzx/od
V1GgEn+e9UWpN4/BXW65XrYNj8XIFOl8IV1CNALcFa1Pl8QTEYm1os87ckzX
1i+Ews0Hf+28iNM7N2D8zE1ISjd06/F0VXkFOLI9HIEecvMY2h7Dl+DU7Y+i
v/ZGBiwa6gqvkFk4c/4W/l44H2GHoqFRdec5S/9B5uun2DBnOORSCaQyD8xf
uxev4ysc4PUTOTZ2MgwjXtjJEBEREfWkn1gzeSAmhN5AcUYJMj/pUO1g4yP1
tOq0uxgo98fF+GpkJ+WjMJ/9JZEjYSfDMOKFnQwRERFRzzGWpmOMhwwb7mic
dJypOiTtHQVZ0GoUcMxdIofEToZhxAs7GSIiIqKeUo/sC/MhlwxGVE73nqfT
V9SUlGC+twLBK87C4ADTQ0S/YyfDMOKFnQwRERFRT2hARsxjbAz9CyuWrcXR
C0+RU/zDAaar9xiVWkScOYmVpnmwesNhPIhMRCWvhUTkcNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERE
RETkvNjJMIx4YSdDRERERETkvNjJMIx4YSdDRERERETkvNjJMIx4YSfTd9Vo
v0OdVw6Nsl70aSH7GXV1UOaWQ1v6XfRpISIiIiJiJ8Mw4sXZOxltZj4KCr+J
Ph2dpUx6h9CZ87H/zGNk5v8QfXrIfkbtNyRGPcbG0GXYevot9NqGLv0eQ7EO
z+68QHERu50/pq3Bp8Qi8aejj6gqUCIlvrQTP9MA3ed0ZGfWiDztP5D87BU+
pH81/d/Vk8/TAE1mIWIiniHi/jsUifR/TGl6IT6+TftNckKJ+f7C1LxW70+I
y0OFvun3mP5/z/qQbvuYdznQ6cRfD8VSU6pD6sfizv1McSnSP5fZ3GZQV+P5
/VfILuj8/+Ep0W/w7mNZD6/HRORM2MkwjHjpi52MUVON/aGLMWnilE5btPMR
CpITcOnwAcybMAJyuS9uvNWIvh3sjE+PLmOkfyAuPSvh57E+rDI3D+vH+mHu
putQqjvbyzTgn7BpkEgkGDD3AvT6npnGfk1bhSdXr2JT6EIMdFdgzMrj4k+T
o9LXIfv1/8/emf9D9f1x3L7vaxKlFBVJSbtKkoqKlCytIlooshRZkgjZQpJ9
X8YyzNhpx/even3v3DuNGcbWNnx6vx+P5w/GXc6995xzz/t13+d9ihFz8yYO
OW2FppoK3HwSl9hvBn3lpUxfG8b0tTZQVlbCrcQ2BV7HDGru+UCVaTPKqlYo
bfwzOslwazvCfT3heToI54+7s+dT0d2AyOcdf72/biosRojXPmiqKrF9hbKq
OvZ6huFpxntMMP+vyXuDqJDLMNNUZ/+vpKyGbXt9ERP/ZlZzEXxGcUoaTu/e
zG2jbgrPizHg8X+2XF+Rdjcc/j6n4bxd6v3suBfe567ienT5rB60ihhrbcSz
+w9w5pAb9DXU4OYdu+Q+wvoqJNyNhOdeJ6gz9843qlD2PnhvgDLz+wa3q+zz
WG5ZBG+uQU9FCeqGdqhs/qTwe0MQxH8D0mTIyBRna1KT6RXAfZ0RM35Ugc3e
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
ML/jdUICbl66CFMdDcn1aVk4IjAkGrGJteitqUfUZT/oanDtT9N0L6JjXqKl
6wvqMtJwbredZL9t+/zx/EWzXK3pB4PNjTi21Uyyj4q2OU4ExILXI8CBDeLY
WlVjBN4vYdvfZG8/7vkdha6KOKeQmjb0tHWx53QUYo6bQlXHDHsP++Heo1x0
iuceTnbzEOa5B9rifdQ1daCvawiPwGQEuhpATd8Khzwv4XFSCXrrq/HsYQwO
bRTnpFbRxYFzt/A0q1ly76qeRsFE3F+oquvB6fgttLULmX41BSGeO8XtQBkW
Tt5MP/8a/B8aINN+ap7HsO1Nz9gel0MeIuZuDC4cdcfeI/4oeDer4Yx08PHk
zk2mr1UX6/tbcf1uOqrav6G9sIhd7/HHWMh083Hm2VQu411IEMRahTQZMjLF
2X9Bk/nrfRYzXq56lYeEmBS8yK5dcXzDTyP8jDhnA7H/th9dcnP4zSkrM7Z8
EBaLnt6l/f3l5JMZae/Am/Q42Fm7o1+4+PknmfI+j45G8ouWZeVKKU1Nxt2Y
fAwv4zttW9Eb3LyewPjVS89dEq0r8yolF47WVoh7t7SONcsM+IWJyMzrWHrb
gTFctDPD5hMRkt8menhwYcbUNl5xC/p0HU+PcrqV0U609/6cPzTvens/snVS
lFO2qbQST+MyUFreu+J8NR2VH/AsLhOVDVI6Sv848pLT8SKPt6gP9Hv4jpr8
QiQ8fIqsV/UYXE6czSIMtvCQ+ugZCsv6f+P33u9oKipFUkwyMl58wMCC8yVn
0PEmHYfdL6KsqAoZT57i9tVruOR3Cac9T2G/626sNzFg9Z1+OXObRDpVXuoL
JDx+gdLK4Z9a13whJvsnUZn9Gs+SC9HVPVsH+xtakfjwOWobVzLnb6ln0I3c
lBeIf5yJotL5uX2kETLbZiWk4tUbaU1kCvW5uUh6WiZZ63qybwwDPVNsDvTW
imqkJ2TgTUkXRlYQ7zHWM45+0bMTfkdLeRVSHqUy5eue1bx+N0xZW0or8Oxx
Kp6nv0Vvz/c/cx4xw+8zkZXPX3ibnmZkZtT+0jk6ysqRnFK+ovv+VxF+xYfc
fCQm5oMn9d4QNjQzzyEd1c1y3nv8YeSlZCAh/hXqW0XfFWbQVVaJgUXmZw13
9OJlYiqSmfO08kTbTaO5vH7Z6+lJM9jahdTHaSit6F/xviJ6q+vwPO4pnj0r
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
Qk9r/c1WJlP+MEeT25vrH/or/o71uGbD5E+sx7gj99d5nttVfZda9Q53OJM5
tHhSkzKZ9PN7LX2XOgyaXae3Uz0Lf9KBqnnFFtuEKCnTxnmmo5lMYUWTekWU
F1Q4XiPF9NzlDo8Rr7TOuXLwvqV5TZy3UFCisIE1/YVGzNjd4P1KM7M1uKuv
pkQcs7xOVkK8ZoXN1/HEfJvzkIpTLqpXaxd5dh+ujJxGchsb7yf9TLy+2rFP
Me/stzrUWK+kt7dhfommDOihoMmbGv3MPbm0xZrJuHppR3yt7M9OJnNz2zzL
GJnA8IuW9fXo9hX19HZRK/deOplR+75VfZeamMn0b0om8/iZIgOsva7Xxt5v
dL86s2qC+o1YqAfZL3Rj97w6tZv6hqx4a46AVUczmZL8V03YXypV1oQ5FWVN
qCNt3m8dvu+jFyp18LlL025rXH9/LfgqWU+zszR7UKea3NOrozafrPuZzDix
z9ITKPZMoWV84rmty/XFom26m2yj949pG8VMsF4rnu4kfZcebGm879L5rUut
69i9h/Zfrz/eI2nfeusczYm7a/rzNmMmEzdvnPX1O81VZkO59nuyIDlbx/Z9
p5Q0x8a45FzYpXam39Y+IxdX71f343fJx9yzauii6v6FRabnPXf3Nxh7ZfpN
TrtyXd/sOKpH75CblNw5qG6mZe88MEr5tR//6KnWhPaWS6uO2n0826DPrHN6
Y1e4dVzgkO01/TBtbcOmZjIFRZrr52J5jR3H8n/z90cmA2AcZDLYUnx646D1
nLBdiE7fqN/XsfB2ggK9rPU4I3fVHWPyJpPx6ROs1DpjFip1+1vT8aqLuyZG
J1TPUVo78eOqY9wAnTS9Vknec2XdSdOaycOst3eZrpSHL5WbWm55TN6NRGsv
bO8gXcupu1zfzB1vfYz/1prjYRtej5luHfPfMUQ5dvrC5t84pq6eLpZz3uGb
Mmz3jXAgkzH3m1o0opfl+GDzd6l2lrVSP8Sulbe7q4LCtto9/nh47az823qp
k3+Y7tqp6VGc+VBTA7vIs31fxV6xXZuw3HQet3nacLVya6vpm2/aGEdV3yNR
M6rOF720+VRRw8t99Yyl/9CG73J099RRzY/4RjkOXNMsvBBtHYfj3U+XU1r4
3ArTOe76TwdY1sPEL6+qIK9uhmTucRM3w3pO2LbnOD3IrPX3WpnMzLUX65xH
m3uETR/aUz49P1VShjXvzL91Ud1bu1jG24xYZXqt3Bd6nPFEN4/F6qO2rpZl
WHIgRU9zyqtqtlZq+wzr/PlPIw7XWa6ilGT5dzCPY+mo2PsOZAYPUxXyZlmj
Tzb4mb65f7Ol99OhxDd9Sl4pIrRvrfEe3pq5N6PenDX7mcxr3Y1doc6erdRj
5AplNlKbpnrd5WRp1uAecvPorm/PNVR3uvb2e67dc0ZazrsXbr9iZz1U6lJM
lDxdXTR0+i67+21mYrx6entYetrdzrS9zCXZj7R4SFcNCttU/V2UeipOXq4u
Neuvw3hdT625pn9swxdyce+na0mFit+2XqtjH9ivp/WoUHO7WZ8veOYO4/ef
926Fbq7sZ60bMnh6rX7zVssy0zS5Z1tL/aNhn39dNysufKHoKUPk3vYjHbta
6zsuN12jqvaFqD3Jv2r5NoWNtG5bz2DdyWmpdZZf69ySPpblHB9eMyamJD1d
QZ28Tft8J315vlhleSXavmyJzqe19LGkr/XDymHWOWtrkmt++wtf6cSqqXL3
6qylsXaOCbDZLU2+rH7m+XCtP9NtB/aF4owsBXTxtBxzLU+0f5xQnn5VA0y/
M628hupGxm//GSWTATAOMhlsMWbfVaCb9RjSu11PzVgepwcpz1TysFRXDsVo
SA9f03FVa41fdVYFb83PfpPJtHJ1V2e/UYo7kari/OdK/DpavX29FTA9Vrm5
NecbSd9EVdf3bNO+m3r7+alTn1DFbN9SVb/FU9169lHQ7JMqKqzQ5Z3z5Gm+
lu7SXuvO1+rFXfBM04d1r8p3ApVw74Wd9/lSB6dar/969JpYp992Q5bnlWpy
QHe5dhiiJHs1/BzIZB6f31jdI8d3aJSdcT3PtW5wVR8qj/5KyLK9rOc3jKxa
px6adax+v/LaZl/cZ7meaX7udhMTbN63JPuhgjpU1RN17aqEB46Plym6dUqd
zOt6wEo9bOQ65dWv58jDbaAWz52qzp2DdCfdsXlIxXcPqIPlM+GrDRfqZ4gt
y9c6M2941WfbQ32GT9fBEymmc7tK5dy6q9Vhw+Xl5qq2fUJ06d5b4xdqZTIe
Pl00KfygUtKf69Hdu5r/cQ95dhyiQ5efVD+mLKdQE/tY5wq6uLZWd9N+1KOL
nyYsP675oQGW273a91Av/1BdMB1zlmbc19iu1nrMnUetrZUhVCr56Ea1dbXO
pxq+7q7d+slPr++rrquxeOvlOn8ry3+m01vC1dnHw7Rc/XTsirXPUlluiXbP
GVcrk2klV++u2neu7jVKu5nMo2J90atjVf2iNtp50vb168JTEVX1WFw0NKrh
OiHVZt9UgEdV3ZaAKDvb+plWBHlW7bcBSrSz355YM6JqvzUtR/jtRs/x8u7c
0vwRfnIzfeZD5x9QnuU7plJZl0+rW+2+eObcIGxT1ZykF1ozqrM8gjYpbIS/
hk7Y42CmWq61A6zP2Sl4UZN7oX1olmZla1Y36z7g3nGgLtyrP3+uKCVFE/p2
kauHj8ZEHFVeXoXK8soUt3SsfDsHKPZCQZ2sKzV+q9pUjf8aNm17o7Wk7Frw
RKM/8tWbWlObjz40fH01aF6uprR3sWS+m87V+v0pfKUrqz+t+t7xU1DfAVob
l2L88tozv0izepnHFXpqzr4cy35pHu94YNkY+XQapN3HMps0xg6by5eKDx8m
V9O+sO1ssZ37VujuwXVq62b9fu0156ye2LkOl3kgwvTcbhrxZZIhNYLIZACM
g0wGW4yPirRhymSdOJekk/viFD53nj77eLgG+gcoaNAnmjo9UnHx9xq8xlo9
dylwjBJi92jG+PEKHjFKkz9frD0HbtT/bSv4SRf27tC0sWMVEjJFS1fsVXKa
6bOc91QxC2fqs+BQzQ3freyHr3X58LeKXLqy2uXLorX3uwcqysjT7uj1df62
auVOXU2xca25sExr/a3XlHt8ttiBa1wV+mHbEk2ct9P+fAhHxsnk5mvr/Fma
EDpcPn0X1pmfVd9K3Ty8XcMDB2nKkli7fStyr1/UpBHDFDwuQvfsXD8qycpT
+OTRGvLxRB24ZrtObXnBC8WujtC4T4NN54OeOn7bXu5Ve508077ZwVp9uJEx
Qaa/bwtpK/cun2jt0gVyc/fR7pM5Dj13aU6aAtpaxzCNjXXsMcZZqYyDqzQn
4oBunbukXWvWafr4sRocEKgB/QcpOCRMkevidC+lgTkCtTKZBavjtWHBPI0K
/kyjRodpUcQu3bpXP397fPeW1s6brZBPQjRl2lJ9e/S+5fwh/exRTRk1WqPG
zlbs8VQVZ2Zr24p1dfahdRv3KznzhW6fPK5VtW6PXLpKO/ffsbnP5B6NrM5a
tx2pe+6YfytBK2s/37LdSjOd16Yd3lXn9d+4NuZane8NR8bJPDi8U2HjJyqg
vbeiv7c9Ds08pzLKtA8EDhmr7xPt9OotfK79UbMVMGCY1nxzw+62vrZ/i4YN
DNLU8AN299uca4maNX6Sgnp3U59pFxo5D6jQoW0b6m6nr9NVlv9YMcvrr7vI
pet17oHpuD7rtoZ6u8ovZJkWh36sNj2DlZ7tSOZZoaOL/S3b0qP3VDvfUx+y
FUo6cUpb1mx8a/1t0M6dx+vNEzLnnUe2bdGsSZMUOnqSPp86W8tWxuhGUq16
K6bjsR9iY7RyWd1tsm79Xp293vBYwcY+z1cP7tfGFavq/v5FfqmdOw4rK6tl
9cAqy8w0fYeb9+s9Sst96/cnv0gb50zR8OAp2nMk9YOoh/sk6aa6+3rIo+sI
rQtfqsULIjV3+lzNj9ijm/ccq6+D78fH9+4osIO3xi75rvH73LysmE3b39qv
V2nD+hgd/v5Ww2MFC15q9dhAte8zTqlNng/dPJLJABgHmQz+HrRd47cFWViq
1X2tmUzIzJhmfu7Xmh/cz6Eav+UZlxS26GvH6160AEtSbsuvyxSlvEM/3cYs
y7ilADd3jduVZDpHztI4Xxf1nhVXdV3edr0bc4+P0f6+lkwmdG9Lz2R+hXbq
ybQkHx6JqMpk3HXsVvPOJ8twuMbvT4r7PFCnr9m7htqyPLJyoRYcbd5lfnhk
qVw9++hs5h9UmPiVfFzaaPUpa/5Ubqf21I24cMt3unuvsN9xJoPYsPfid8nb
tZUGfL7J8GXBt61U8t4FavfROKW/U+3mhi26f0V927VWxH7jxqKRyQAYB5kM
/h78YDIZ0+9d4voQuZmWdXL4qeZ97sJXmjm8l7x6jlDmQxvXWB6V6avp43Ts
SlOumRptpS58tVk7zj5p1hwp47sNpnPGrjpyzbwuKnR9yxi5ew3Uqfsv9fjq
fp2xNX6h4JXChnZVK6+eir/jWE/qD9IPKJMpS7+mQd7W/jOXU5v3OmPqmVj5
urXSzNUXbN4vJ+F7hS06XK8mSEu2PCdDK8K36ZGdcfVN0nRc8HXYUPkOmGit
mVxQrKghbeQ9aKPyHr3UpZgtSs9sfMzMg5O75OPSSkGTN35Q2TE2YEGZju/6
Sts27mmy27fEKS3D+Hpdhbdvasc7LL/ZnTtPq7BJNX4rdHjJIEu+PHfDpffy
fvBXWvhC+yOnyX/CHuW/c6/zGkszMzXTv5NmRp9993mGzSCZDIBxkMng78Gs
wzMtmUyHFp/J/EFPku9pRHcfDQ3b3GznGkUZj3X5xAkNMNeS8+qmzXGXlZLc
0Pjm10qI2a49Z5o323i/VujGoVht2nWx2Zc5btFEtek+VMlV54ZP0+5rcKfW
6jVkqhYv2688G8daZbkFGuHnraBJX7b4z9yvMjdDoW2qMpk9LTuTMX9W4tdO
lauLpw5caq4xH5VK/eGuti/41JKl+n+6SJcvpjS4zUuSryt63bfKb85s4z1b
nJGn9UtW64f7jvW2cdSy3Kca499ZH0/ZVn3bzf3R8nJzU2jYIm3en25jHlqF
ErZMk3trP+0192tqAesJf4V5uZoT2Ft+PXo13Y+GKeFGieHvIfP7be+2/Cb7
9p+pzLymra9pXa3zYnefbem1ypxXy1z3uaGau/KwcuzV+7NhcVqGVk+fqKlR
J6rq3hv4nshkAAyDTAZ/D6bssdaXbeM/ul7935bok1snFdC+o1YcLWy2vgnm
eTbW+QAV1v83dl+H+0+3HB3vmf0u66zucxfcuqmEi3Z6TD8q094wP3UfGaWc
37A3rCFmJymoqvb2ws23jF8ee5rHgU3pbdo24cptpm1Tb99q9PNoY79rwb6v
ZX6zvqpvK3yl2/GndT+lfg3b2uYkHFBXr47aespOPyr8YHyz37yLRi+71Xdf
/qa+h6z4DXK1zMHspysG9N7BJmj6jkvcukjDJ2yw30+uAc01oiYN+Uzfnm8Z
2TOZDIBxkMngh2xZxn2tnjNT/XyrerG6+eiTsXMUtXKv0ptyXcoA85OS9dWa
1Vo8P0onbto+R8GW4mtd3btLi0zbbOvXiXroUL3SD9TCF7q4I1qTRgysrpvb
vnug5i5ao29O2+4pZLimZb98+KAiF0Yo4svLho4FR8d9mpKhqIXLFLlilxKv
FtBXBp3Ksux8bVy6RIP8usrb29tkO4WGLdaX2y/wHdairVRRdvm7PbawQoW5
Lec4gkwGwDjIZPCDtuCVnmT/qMf1fN5s408QndNKlTx81sC+9aOK8rl2i4iI
+HuSTAbAOMhkEBERERERnVcyGQDjIJNBRERERER0XslkAIyDTAYREREREdF5
JZMBMA4yGUREREREROeVTAbAOMhkEBERERERnVcyGQDjIJNBRERERER0Xslk
AIyDTAYREREREdF5JZMBMA4yGUREREREROeVTAbAOMhkEBERERERnVcyGQDj
IJNBRERERER0XslkAIyDTAYREREREdF5JZMBMA4yGUREREREROeVTAbAOMhk
EBERERERnVcyGQDjIJNBRERERER0XslkAIyDTAYREREREdF5JZMBMA4yGURE
REREROeVTAbAOMhkEBERERERnVcyGQDjIJNBRERERER0XslkAIyDTAYRERER
EdF5JZMBMA4yGUREREREROeVTAbAOMhkEBERERERnVcyGQDjIJNBRERERER0
XslkAIyDTAYREREREdF5JZMBMA4yGUREREREROeVTAbAOMhkEBERERERnVcy
GQDjIJNBRERERER0XslkAIyDTAYREREREdF5JZMBMA4yGUREREREROeVTAbA
OMhkEBERERERnVcyGQDjIJNBRERERER0XslkAIyDTAYREREREdF5JZMBMA4y
GUREREREROeVTAbAOJojkykjk0FERERERPwgJZMBMI6GM5m/qSaTMe93P+v/
/vazfqmVyfz3X/6qv3v19yp7/ExlhT9Z9uEfi16b/q1ARERERETED0bzedwL
lZc8J5MB+I1pOJN5k8v8zfL/X36x7oO//F9NJvM/f/1f/fuf/0P//Mc/6Z/+
+K+mf/+sP/3Dv5n+RURERERExA/HP5s0ndP947/oP//yX9WZjPnfn3/+uTqT
eXMbmQzAb8GbbOYtfkFERERERMTfpQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANAk/h+XUtAK
    "], {{0, 348.6}, {675., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120, 120}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{675., 348.6},
  PlotRange->{{0, 675.}, {0, 348.6}}]], "Input",ExpressionUUID->"5c03e8d9-\
6c62-44a6-a112-d0bb6089cc6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.5 Least Squares", "Subsection",
 CellChangeTimes->{{3.9022121076966515`*^9, 3.9022121582154217`*^9}, {
  3.902753149564061*^9, 3.902753160454166*^9}, {3.903257170993367*^9, 
  3.9032571816654167`*^9}, {3.9033481088363304`*^9, 3.9033481177150135`*^9}, {
  3.903769157829028*^9, 3.903769170909472*^9}, {3.909484073129572*^9, 
  3.909484084627141*^9}, {3.909485796050621*^9, 3.909485816190303*^9}, {
  3.9094958855202928`*^9, 3.909495915426386*^9}, {3.909582686864922*^9, 
  3.9095826991771603`*^9}},ExpressionUUID->"b95b7294-f927-4d54-a203-\
51ae9fd43f8b"],

Cell[TextData[{
 "Definition: For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "eb7b4413-9f2b-4510-853b-ac96290a624e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"71af8fe1-e3fd-455f-b3e0-031dadb7f687"],
 " a ",
 StyleBox["least squares solution",
  FontVariations->{"Underline"->True}],
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"737eda24-fccb-4858-b358-240f16456297"],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], "=", "b"}], TraditionalForm]],ExpressionUUID->
  "d9fda8ce-e3db-41e6-a56b-be032aa90218"],
 " satisfies\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{"b", "-", 
     RowBox[{"A", " ", 
      OverscriptBox["x", "^"]}]}], "||", 
    RowBox[{"\[LessEqual]", 
     RowBox[{"||", 
      RowBox[{"b", "-", 
       RowBox[{"A", " ", "x"}]}], "||"}]}]}], TraditionalForm]],
  ExpressionUUID->"6854bc3c-86dc-4538-acea-904e5ad2073e"],
 " \nfor all ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]],
  ExpressionUUID->"e1120abb-6b96-4f41-9eb8-3070b0dae79f"],
 ".  We write\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "=", 
    RowBox[{
     SubscriptBox["argmin", "x"], "||", 
     RowBox[{"b", "-", 
      RowBox[{"A", " ", "x"}]}], "||"}]}], TraditionalForm]],ExpressionUUID->
  "ced2d3c8-5acf-483c-8259-386167063226"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
  3.909582475459145*^9, 3.90958248372447*^9}, {3.9095828516219034`*^9, 
  3.9095830498950415`*^9}, {3.9096505551118574`*^9, 3.909650628718376*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"2e702749-2ecd-403a-a77f-95d35fae1efc"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "-", 
      RowBox[{"4", "x"}], "+", "3"}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], "2"], "-", "1"}]}]}], 
   TraditionalForm]],ExpressionUUID->"95fe4f16-97bf-45c9-9d53-a11a46d0e5fd"],
 " then \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["argmin", "x"], 
     RowBox[{"f", "(", "x", ")"}]}], "=", "2"}], TraditionalForm]],
  ExpressionUUID->"f4172f73-0ddd-4166-bdea-297775170250"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["min", "x"], 
     RowBox[{"f", "(", "x", ")"}]}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "d693c41c-b16d-4e6d-ad68-807f3794ccbb"],
 ". "
}], "Text",
 CellChangeTimes->{{3.9096507527775965`*^9, 
  3.90965091518334*^9}},ExpressionUUID->"6e09bff1-e7a1-4dae-84dc-\
4f11bc2a9b39"],

Cell[TextData[{
 "Theorem 13: Normal Equations \nLeast squares solutions of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "=", "b"}], TraditionalForm]],
  ExpressionUUID->"7966c6ec-4779-485e-acaf-17b9ea9ab8ec"],
 " solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"A", "\[Transpose]"}], "A", " ", "x"}], "=", 
    RowBox[{
     RowBox[{"A", "\[Transpose]"}], "b"}]}], TraditionalForm]],ExpressionUUID->
  "96e92271-c08c-4094-9159-c9e706b7bc55"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
   3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
   3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
   3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
   3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
   3.909582473551285*^9, 3.9095825999510155`*^9}, {3.909583078278164*^9, 
   3.9095831530152984`*^9}, 3.909583244184104*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"d9775fc3-373d-4cca-9e8e-105d40dd4cc8"],

Cell[TextData[{
 "Theorem 14: For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"m", "\[Times]", "n"}]], " "}], TraditionalForm]],ExpressionUUID->
  "608fc75f-9062-450b-b992-4b7f86c95c18"],
 "the following are equivalent\na. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "=", " ", "b"}], TraditionalForm]],
  ExpressionUUID->"0eeb15ae-ea22-4a92-866b-1372477ed297"],
 " has a unique least squares solution for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "m"]}], TraditionalForm]],
  ExpressionUUID->"c246e6d2-5f79-4f66-b7e4-9a0058a4a04b"],
 "\nb. The columns of ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "613c37d5-4388-4e32-bd27-ad2f4d1b77e9"],
 " are LI\nc. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"A", "\[Transpose]"}], "A"}], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", 
     RowBox[{"n", "\[Times]", "n"}]]}], TraditionalForm]],ExpressionUUID->
  "4f7947f4-37c6-464a-ace0-4c97f10a3f84"],
 " is invertible\nIf true, the least squares solution is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", "\[Transpose]"}], "A"}], ")"}], 
      RowBox[{"-", "1"}]], 
     RowBox[{"A", "\[Transpose]"}], "b"}]}], TraditionalForm]],ExpressionUUID->
  "717ee6b4-d52f-46cf-a926-e82092df8371"]
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
  3.909582473551285*^9, 3.9095825999510155`*^9}, {3.909583078278164*^9, 
  3.9095831530152984`*^9}, {3.90958318788759*^9, 3.9095832264473333`*^9}, {
  3.909649477558375*^9, 3.909649741262726*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"b4bf67ea-ec50-44a8-b138-c585ed83da35"],

Cell[TextData[{
 "Theorem 15: If the columns of A are LI and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"Q", " ", "R"}]}], TraditionalForm]],ExpressionUUID->
  "29340452-c561-4c94-ae73-0992cb591d1f"],
 " then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "^"], "=", 
    RowBox[{
     SuperscriptBox["R", 
      RowBox[{"-", "1"}]], 
     RowBox[{"Q", "\[Transpose]"}], "b"}]}], TraditionalForm]],ExpressionUUID->
  "cc2b23d7-63a4-47f5-a3fd-8fb135f961cd"],
 " "
}], "Text",
 CellChangeTimes->{{3.909484088566098*^9, 3.9094841034633856`*^9}, {
  3.909484155520605*^9, 3.9094842663629465`*^9}, {3.9094842984731083`*^9, 
  3.9094845791252003`*^9}, {3.9094859297388787`*^9, 3.909486062425968*^9}, {
  3.9095812521799555`*^9, 3.909581543016794*^9}, {3.909581743581817*^9, 
  3.909582091383527*^9}, {3.909582377967722*^9, 3.90958242109348*^9}, {
  3.909582473551285*^9, 3.9095825999510155`*^9}, {3.909583078278164*^9, 
  3.9095831530152984`*^9}, {3.90958318788759*^9, 3.9095832264473333`*^9}, {
  3.909583285120167*^9, 3.909583326480929*^9}, {3.909649766541545*^9, 
  3.9096497814619246`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"0ec52b89-5192-423b-aede-5a704c5592ea"],

Cell["Back to our example", "Text",
 CellChangeTimes->{{3.910344434475442*^9, 
  3.9103444386756463`*^9}},ExpressionUUID->"5d43a6ec-8a50-477a-96cc-\
01e8ab23edb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "+", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "+", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";", " ", 
  RowBox[{"SampleSize", "=", "123"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AASData", "=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "+", 
         RowBox[{"\[Epsilon]", " ", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}]}], "}"}]}], ",", 
     RowBox[{"{", "SampleSize", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "AASData", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9103432746396384`*^9, 3.910343475272153*^9}, {
  3.9103444487788515`*^9, 3.910344468537698*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7724f43b-3856-4fc2-add3-309522aa7a40"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$12048#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-0.0638431213855466, 1.1263512428029165`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9103444601785374`*^9, 3.9104307452322826`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"05105c6a-fc5b-4138-9078-d16acad74df7"]
}, Open  ]],

Cell[TextData[{
 "Lets do a cubic polynomial\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "[", "x", "]"}], "=", 
    RowBox[{
     SubscriptBox["a", "0"], "+", 
     RowBox[{
      SubscriptBox["a", "1"], "x"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["a", "2"], 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{
      SubscriptBox["a", "3"], 
      SuperscriptBox["x", "3"]}]}]}], TraditionalForm]],ExpressionUUID->
  "10756c66-36ed-4f69-8e9a-1a6a186f4bf8"],
 "\nwith four unknowns.  We would like to satisfy\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", "[", 
     SubscriptBox["x", "i"], "]"}], "=", 
    SubscriptBox["y", "i"]}], TraditionalForm]],ExpressionUUID->
  "7e1bfaf0-44a4-4635-87a2-02d69303e29d"],
 "\nfor each of the data points.  There are a lot more data points than \
unknowns! We can not hit all the data points! What we want is the best cubic \
polynomial. I want \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], "+", 
     RowBox[{
      SubscriptBox["a", "1"], 
      SubscriptBox["x", "i"]}], "+", 
     RowBox[{
      SubscriptBox["a", "2"], 
      SubsuperscriptBox["x", "i", "2"]}], "+", 
     RowBox[{
      SubscriptBox["a", "3"], 
      SubsuperscriptBox["x", "i", "3"]}], "-", 
     SubscriptBox["y", "i"]}], "\[TildeTilde]", "0"}], TraditionalForm]],
  ExpressionUUID->"3dab2d8f-1535-4c33-9f8d-bd474a0f0afa"],
 "\nfor all the data points.  As a matrix this is \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"V", "(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["a", "0"]},
        {
         SubscriptBox["a", "1"]},
        {
         SubscriptBox["a", "2"]},
        {
         SubscriptBox["a", "3"]}
       }], "\[NoBreak]", ")"}], "-", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["y", "0"]},
        {
         SubscriptBox["y", "1"]},
        {
         SubscriptBox["y", "2"]},
        {
         SubscriptBox["y", "3"]}
       }], "\[NoBreak]", ")"}]}], "\[TildeTilde]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "dbf0ae10-faa1-4839-a7b0-3d3e2cbbd005"],
 "\nwhere \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", 
         SubscriptBox["x", "1"], 
         SubsuperscriptBox["x", "1", "2"], 
         SubsuperscriptBox["x", "1", "3"]},
        {"1", 
         SubscriptBox["x", "2"], 
         SubsuperscriptBox["x", "2", "2"], 
         SubsuperscriptBox["x", "2", "3"]},
        {" ", "\[VerticalEllipsis]", " ", " "},
        {"1", 
         SubscriptBox["x", "s"], 
         SubsuperscriptBox["x", "s", "2"], 
         SubsuperscriptBox["x", "s", "3"]}
       }], "\[NoBreak]", ")"}], "\[Element]", 
     SuperscriptBox["\[DoubleStruckCapitalR]", 
      RowBox[{"s", "\[Times]", "4"}]]}]}], TraditionalForm]],ExpressionUUID->
  "154bad61-1e82-437a-ab31-502220108c2c"],
 ".  \nThe best cubic has coefficients minimizing\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{
     RowBox[{"V", "(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["a", "0"]},
        {
         SubscriptBox["a", "1"]},
        {
         SubscriptBox["a", "2"]},
        {
         SubscriptBox["a", "3"]}
       }], "\[NoBreak]", ")"}], "-", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["y", "0"]},
        {
         SubscriptBox["y", "1"]},
        {
         SubscriptBox["y", "2"]},
        {
         SubscriptBox["y", "3"]}
       }], "\[NoBreak]", ")"}]}], "||"}], TraditionalForm]],ExpressionUUID->
  "7e59da7c-3f8b-41b7-a85f-cb54e6bde53b"],
 "\nOur theorem tells us two recipes to minimize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{
     RowBox[{"A", " ", "x"}], "-", "b"}], "||"}], TraditionalForm]],
  ExpressionUUID->"8780c9b6-66bb-46df-b2cd-0f3a1fe8d5a5"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"Q", " ", "R"}]}], TraditionalForm]],ExpressionUUID->
  "5e591c99-afb2-4d11-86de-b2272e9c6e0e"],
 "\n\t1) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "\[Transpose]"}], "A"}], ")"}], 
     RowBox[{"-", "1"}]], 
    RowBox[{"A", "\[Transpose]"}], "b"}], TraditionalForm]],ExpressionUUID->
  "639f6851-a08e-4d76-bbc2-9df6b88c2792"],
 "\n\t2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["R", 
     RowBox[{"-", "1"}]], 
    RowBox[{"Q", "\[Transpose]"}], "b"}], TraditionalForm]],ExpressionUUID->
  "6836dfef-8861-412b-9943-1997c443c67e"],
 " \nThere are two natural implementations of each recipe. For a tiny problem \
they are all fast and give identical answers. "
}], "Text",
 CellChangeTimes->{{3.9103444789389267`*^9, 3.9103451614823527`*^9}, {
  3.910345196583855*^9, 3.9103453149656954`*^9}, {3.9103455058753157`*^9, 
  3.910345563772022*^9}},ExpressionUUID->"4d87058d-c2ab-4811-b25b-\
7bd4bdf8dbda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"AASData", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "x", ",", 
        SuperscriptBox["x", "2"], ",", 
        SuperscriptBox["x", "3"]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", "SampleSize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{"AASData", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", "y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", " ", "SampleSize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "R"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";", 
  RowBox[{"Q", "=", 
   RowBox[{"Q", "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], ".", "A"}], "]"}], ".", 
  RowBox[{"A", "\[Transpose]"}], ".", "b"}], "\[IndentingNewLine]", 
 RowBox[{"LinearSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], ".", "A"}], ",", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], ".", "b"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Inverse", "[", "R", "]"}], ".", 
  RowBox[{"Q", "\[Transpose]"}], ".", "b"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a0", ",", "a1", ",", "a2", ",", "a3"}], "}"}], "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"R", ",", 
    RowBox[{
     RowBox[{"Q", "\[Transpose]"}], ".", "b"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.910345320649971*^9, 3.9103454984575896`*^9}, {
  3.910345573555828*^9, 3.910345577879037*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"72989a56-983b-4f23-807a-52114b28d00b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.030859822214151`", ",", "0.5795663321960032`", ",", 
   RowBox[{"-", "1.464285354420923`"}], ",", "0.4606628556761407`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.910345425573643*^9, 3.9103454990324664`*^9}, 
   3.9103455365167637`*^9, 3.9103455784339733`*^9, 3.9104307569224596`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"99fa2556-298b-405b-9600-7a1808dd2069"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0308598222141474`", ",", "0.5795663321960178`", ",", 
   RowBox[{"-", "1.4642853544209342`"}], ",", "0.46066285567614584`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.910345425573643*^9, 3.9103454990324664`*^9}, 
   3.9103455365167637`*^9, 3.9103455784339733`*^9, 3.9104307569260674`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"679e5930-ef51-4f22-a656-770f0cd4f225"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0308598222141931`", ",", "0.5795663321959406`", ",", 
   RowBox[{"-", "1.4642853544209253`"}], ",", "0.4606628556761583`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.910345425573643*^9, 3.9103454990324664`*^9}, 
   3.9103455365167637`*^9, 3.9103455784339733`*^9, 3.9104307569333673`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"1a6fe9de-ec64-45a5-b7c9-2eebe9fff452"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0308598222141934`", ",", "0.57956633219594`", ",", 
   RowBox[{"-", "1.4642853544209251`"}], ",", "0.4606628556761582`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.910345425573643*^9, 3.9103454990324664`*^9}, 
   3.9103455365167637`*^9, 3.9103455784339733`*^9, 3.9104307569393773`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"2c6d9397-0c0e-455b-b577-569254d9df1d"]
}, Open  ]],

Cell["Lets see how well we did! ", "Text",
 CellChangeTimes->{{3.9103456632849464`*^9, 
  3.9103456681190844`*^9}},ExpressionUUID->"e4392409-d6f9-4fcd-a3f9-\
22cacfff0131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "[", "x_", "]"}], ":=", 
  RowBox[{"a0", "+", 
   RowBox[{"a1", " ", "x"}], " ", "+", " ", 
   RowBox[{"a2", " ", 
    RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
   RowBox[{"a3", " ", 
    RowBox[{"x", "^", "3"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"p", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "AASData", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.910345602758321*^9, 3.9103456239892917`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"a5ea1a77-063b-4147-865e-698587e181ca"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
19FJ6zolaWnwP8O30LQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$23592#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 1.0979994502984343`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9103456246766586`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"92204178-200c-4f57-bffd-6c7e53845289"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1141, 575},
WindowMargins->{{1574.5, Automatic}, {Automatic, -256.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.4,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5b767204-acce-4b88-8f1a-8074b50a5381"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 204, 4, 136, "Title",ExpressionUUID->"2411f8aa-dda1-4de9-9dc1-fddd9660e667"],
Cell[CellGroupData[{
Cell[809, 30, 317, 5, 93, "Section",ExpressionUUID->"c605c20a-b238-4a73-a480-b4d65497b721"],
Cell[1129, 37, 1898, 55, 141, "Text",ExpressionUUID->"dfb0c51f-3967-4d5b-8853-a8b8422fb9d6"],
Cell[3030, 94, 1017, 27, 172, "Text",ExpressionUUID->"2abe7bc2-dc64-436e-ad63-790066d625c6"],
Cell[4050, 123, 310, 6, 79, "Text",ExpressionUUID->"086a5a1b-d712-4673-b0f7-5845ae5c758f"],
Cell[CellGroupData[{
Cell[4385, 133, 1726, 47, 226, "Input",ExpressionUUID->"a6ccb9eb-9a08-4fa5-8d77-a95d3aea0036"],
Cell[6114, 182, 73393, 1223, 327, "Output",ExpressionUUID->"74ff1721-15ed-433d-9f1d-38e0fa120ab5"]
}, Open  ]],
Cell[79522, 1408, 398, 8, 48, "Text",ExpressionUUID->"d54c28ad-2bd8-4c3e-be2a-672d5a332de8"],
Cell[CellGroupData[{
Cell[79945, 1420, 454, 11, 39, "Input",ExpressionUUID->"bf9af711-1ec9-4080-bf33-edee503744ac"],
Cell[80402, 1433, 12156, 220, 327, "Output",ExpressionUUID->"bb8a8b00-61c9-425c-a744-88535e87c23d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92595, 1658, 1445, 40, 158, "Input",ExpressionUUID->"76daf3ea-0a5a-45c2-90fd-80b767ac2562"],
Cell[94043, 1700, 455, 8, 45, "Output",ExpressionUUID->"1cb2c31f-0500-419b-bf48-bce9cfd01237"],
Cell[94501, 1710, 532, 10, 45, "Output",ExpressionUUID->"a35ef4b3-86d3-43cb-97e9-eacc60c9adb8"],
Cell[95036, 1722, 605, 12, 45, "Output",ExpressionUUID->"7517b789-8192-465a-8813-f31469f7cda0"],
Cell[95644, 1736, 606, 12, 45, "Output",ExpressionUUID->"c6016498-f263-490c-a298-c96f14648e81"]
}, Open  ]],
Cell[96265, 1751, 371, 8, 79, "Text",ExpressionUUID->"ec01fa67-d252-4004-a2f7-25bd6d5fa165"],
Cell[96639, 1761, 565, 16, 101, "Text",ExpressionUUID->"572576a9-6c77-4ae5-92a8-ca3c46a80eb2"],
Cell[CellGroupData[{
Cell[97229, 1781, 1012, 31, 147, "Input",ExpressionUUID->"dbd4703f-7cc8-4416-8ce1-bc628c5e72e5"],
Cell[98244, 1814, 220, 3, 45, "Output",ExpressionUUID->"24dee2f9-e95c-4abf-a422-0a18f7aceb0f"],
Cell[98467, 1819, 222, 3, 45, "Output",ExpressionUUID->"94b2a32b-a8ff-4393-820f-7ef49c6095f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98726, 1827, 470, 7, 75, "Subsection",ExpressionUUID->"1787b355-af8d-4074-bad5-55f6aa7b743e"],
Cell[99199, 1836, 184, 3, 48, "Text",ExpressionUUID->"23f82b05-ad13-4359-90ee-d293eac5017a"],
Cell[99386, 1841, 1108, 34, 70, "Text",ExpressionUUID->"eb74f0e9-5507-4a99-affe-783e9ede3b2b"],
Cell[CellGroupData[{
Cell[100519, 1879, 422, 9, 67, "Input",ExpressionUUID->"e8d753bc-d05d-423f-a21c-ff38e1da2b6f"],
Cell[100944, 1890, 388, 10, 45, "Output",ExpressionUUID->"f93c9433-5826-410f-a4a7-96a4fb31fda7"]
}, Open  ]],
Cell[101347, 1903, 1140, 36, 78, "Text",ExpressionUUID->"7965ec10-1a9e-4eb3-9b48-5d7f023ae1d9"],
Cell[CellGroupData[{
Cell[102512, 1943, 357, 8, 67, "Input",ExpressionUUID->"06895035-73d6-45ab-9370-5fccf9688eb8"],
Cell[102872, 1953, 554, 16, 50, "Output",ExpressionUUID->"6ae9be72-a6b7-40c0-838e-a12219d15447"]
}, Open  ]],
Cell[103441, 1972, 1670, 56, 70, "Text",ExpressionUUID->"dd1d0410-e4a9-4bf0-bab2-5554fc02da32"],
Cell[105114, 2030, 1008, 28, 70, "Text",ExpressionUUID->"00c9ef9f-0f44-4021-a965-8a8b77437b2b"],
Cell[106125, 2060, 179, 3, 48, "Text",ExpressionUUID->"1f77d205-0d47-448f-98a6-691eb92bc00f"],
Cell[106307, 2065, 1193, 35, 70, "Text",ExpressionUUID->"382ea729-d71a-4a0d-b692-c3767e07f476"],
Cell[107503, 2102, 171, 3, 48, "Text",ExpressionUUID->"2a7fe0b6-7c69-4145-a1c5-f1450467d6bc"],
Cell[107677, 2107, 976, 27, 101, "Text",ExpressionUUID->"943cfe63-8292-42fc-a7f4-9b105359bb55"],
Cell[108656, 2136, 185, 3, 48, "Text",ExpressionUUID->"2376b502-8612-4adf-bbee-8b8692319787"],
Cell[CellGroupData[{
Cell[108866, 2143, 2421, 74, 333, "Input",ExpressionUUID->"577ed621-6cbc-4257-92c7-f1cecb13363d"],
Cell[111290, 2219, 1228, 26, 215, "Output",ExpressionUUID->"02984770-0b45-4b70-a43f-9471e96b0fd1"]
}, Open  ]],
Cell[112533, 2248, 179, 3, 48, "Text",ExpressionUUID->"63732a28-40b7-437b-9e81-d4f7593b720c"],
Cell[112715, 2253, 1238, 34, 70, "Text",ExpressionUUID->"a1fc2136-9b2e-46eb-895a-d93854c921b1"],
Cell[CellGroupData[{
Cell[113978, 2291, 3980, 123, 466, "Input",ExpressionUUID->"f4e11e64-0629-4cfd-891f-c8868648a833"],
Cell[117961, 2416, 76682, 1260, 505, "Output",ExpressionUUID->"24d71b04-d4fa-42d0-bfcf-0df08cf35af8"]
}, Open  ]],
Cell[194658, 3679, 1395, 37, 101, "Text",ExpressionUUID->"32186ba5-8c0c-458e-8cbe-47743c309acd"],
Cell[196056, 3718, 346, 9, 48, "Text",ExpressionUUID->"c96a25f3-fce2-4b8f-a057-0b9bedf82fb0"],
Cell[196405, 3729, 2378, 64, 132, "Text",ExpressionUUID->"7be1b68a-d397-4135-95e7-3391e6bf3802"],
Cell[198786, 3795, 971, 25, 129, "Text",ExpressionUUID->"a2365b41-6515-44da-9688-fdb196e2b9d4"]
}, Closed]],
Cell[CellGroupData[{
Cell[199794, 3825, 465, 7, 51, "Subsection",ExpressionUUID->"819ad1f2-e8c7-4416-af15-10850a0adf2e"],
Cell[200262, 3834, 241, 4, 48, "Text",ExpressionUUID->"19c54076-1ec5-4ca5-bcfb-b02a4fe71c11"],
Cell[200506, 3840, 1172, 34, 73, "Text",ExpressionUUID->"3be46531-e24a-4579-9107-a4a1b58fd61d"],
Cell[201681, 3876, 1137, 30, 103, "Text",ExpressionUUID->"a0633062-25f4-4c41-917b-8d31b245b303"],
Cell[202821, 3908, 847, 21, 70, "Text",ExpressionUUID->"038ccd18-f471-458b-8663-893df8c1c40d"],
Cell[203671, 3931, 643, 20, 49, "Text",ExpressionUUID->"6de4e6b1-d77c-44cd-ad29-9f4ba79027ea"],
Cell[204317, 3953, 2108, 64, 175, "Text",ExpressionUUID->"ca7c22ce-446e-48c0-9d83-26a5c2ada581"],
Cell[206428, 4019, 509, 14, 48, "Text",ExpressionUUID->"4af33c8f-58a3-4163-b434-e7f0e93d91ad"],
Cell[206940, 4035, 791, 18, 70, "Text",ExpressionUUID->"41dc71d9-5d2d-41a7-aba8-a10cf1fe933c"],
Cell[207734, 4055, 1316, 43, 64, "Text",ExpressionUUID->"aa929fdc-c765-45fc-8620-bb72f7837947"],
Cell[209053, 4100, 916, 22, 70, "Text",ExpressionUUID->"01beeeae-3260-4a99-ac2e-c6a1e56b862a"],
Cell[209972, 4124, 1757, 47, 103, "Text",ExpressionUUID->"c5ddd26f-5676-4846-a5af-831a819c3d3e"],
Cell[211732, 4173, 684, 13, 70, "Text",ExpressionUUID->"e4fc250d-c8ff-407d-b51a-03c536e8c737"],
Cell[212419, 4188, 977, 24, 70, "Text",ExpressionUUID->"e35dc525-cd04-448b-9dbd-9582dbf73a3f"],
Cell[213399, 4214, 722, 19, 79, "Text",ExpressionUUID->"912725f8-835e-4dea-9b62-f1844cc129f8"],
Cell[CellGroupData[{
Cell[214146, 4237, 3223, 95, 440, "Input",ExpressionUUID->"8964870b-9087-4dc2-8004-82d5736c71e9"],
Cell[217372, 4334, 813, 22, 108, "Output",ExpressionUUID->"d7722ac7-4e0f-422c-9a04-f23751be1a6d"]
}, Open  ]],
Cell[218200, 4359, 379, 7, 79, "Text",ExpressionUUID->"3e8b4b10-9a3b-48f5-bed3-74a833a8b43e"],
Cell[CellGroupData[{
Cell[218604, 4370, 1376, 39, 226, "Input",ExpressionUUID->"980143bd-2031-4a66-9c0a-3f9857e17a46"],
Cell[219983, 4411, 414, 12, 45, "Output",ExpressionUUID->"040968b3-3767-454a-93b7-887f04cd5bea"],
Cell[220400, 4425, 225, 4, 46, "Output",ExpressionUUID->"cbc340be-1d0a-4470-aada-993a388b1c87"],
Cell[220628, 4431, 223, 4, 46, "Output",ExpressionUUID->"1aa62808-9306-47e1-a76d-9a8d81eaba07"],
Cell[220854, 4437, 12226, 213, 527, "Output",ExpressionUUID->"b4b72d6f-c40d-48a3-9b11-8a0f41d4828b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[233129, 4656, 525, 8, 51, "Subsection",ExpressionUUID->"40b7c53f-492a-4dcb-9938-1fc9aeeb8366"],
Cell[233657, 4666, 1387, 39, 154, "Text",ExpressionUUID->"e4efdc19-a79c-4e5a-a9a9-d678f674a749"],
Cell[235047, 4707, 1270, 36, 73, "Text",ExpressionUUID->"0ca92f41-2269-4797-bede-fbb1a78c7032"],
Cell[236320, 4745, 851, 20, 70, "Text",ExpressionUUID->"40b0d4bb-a35f-48f6-a1fe-b2452fd15434"],
Cell[237174, 4767, 1480, 43, 73, "Text",ExpressionUUID->"f7581b91-fe57-414b-8d6c-614172ece01c"],
Cell[238657, 4812, 853, 20, 70, "Text",ExpressionUUID->"ad601675-99d1-4895-8df5-0a5fce714d06"],
Cell[239513, 4834, 2757, 86, 209, "Text",ExpressionUUID->"c6e43f6b-ea74-406f-99d1-8a19c0bec272"],
Cell[242273, 4922, 2618, 81, 198, "Text",ExpressionUUID->"a4d9cb4c-b6f1-4914-88d6-15e3e08e569d"],
Cell[244894, 5005, 1399, 41, 78, "Text",ExpressionUUID->"aff205a3-9414-482c-a5f0-b0c698cd23d6"],
Cell[246296, 5048, 1619, 44, 164, "Text",ExpressionUUID->"8bc391f6-ca5e-4e3b-a4cd-1364ac11344c"],
Cell[247918, 5094, 1668, 47, 165, "Text",ExpressionUUID->"80c9e8dc-b79b-4638-8b58-e4984da0a677"],
Cell[249589, 5143, 1045, 25, 70, "Text",ExpressionUUID->"c9d85f23-f864-41d4-8c59-f42ec931da8b"]
}, Closed]],
Cell[CellGroupData[{
Cell[250671, 5173, 521, 8, 51, "Subsection",ExpressionUUID->"c3009e54-b1c9-47f6-898b-1e5633cb8845"],
Cell[251195, 5183, 853, 20, 112, "Text",ExpressionUUID->"9874c4f1-91b7-494d-835f-00a69404e1ae"],
Cell[252051, 5205, 1287, 29, 103, "Text",ExpressionUUID->"65317a0f-af28-4c2d-a069-d8d7439f6ab2"],
Cell[253341, 5236, 259, 6, 48, "Text",ExpressionUUID->"fd860c56-7c43-486b-a8f8-1fa9769d2e10"],
Cell[CellGroupData[{
Cell[253625, 5246, 3944, 120, 626, "Input",ExpressionUUID->"8911a1aa-7457-4f31-b8c9-58259e6d3419"],
Cell[257572, 5368, 202, 3, 45, "Output",ExpressionUUID->"7eb9cfa6-c956-454f-9e0a-55c427dfedd5"],
Cell[257777, 5373, 4527, 85, 628, "Output",ExpressionUUID->"b92c2d39-f663-40bc-8508-97e0b4897e53"]
}, Open  ]],
Cell[262319, 5461, 173, 3, 48, "Text",ExpressionUUID->"6c00cb3d-9eba-4c55-b810-264bbb22d930"],
Cell[CellGroupData[{
Cell[262517, 5468, 7896, 211, 759, "Input",ExpressionUUID->"2f6d212e-72f8-47cf-b57d-eff0d4e55eb2"],
Cell[270416, 5681, 1252, 31, 143, "Output",ExpressionUUID->"61cda4de-f140-4bcb-b3f8-0faadede2f3a"]
}, Open  ]],
Cell[271683, 5715, 1750, 40, 132, "Text",ExpressionUUID->"04e5c56a-c202-4dcd-addb-7125b8bb6b0a"],
Cell[273436, 5757, 113628, 1867, 476, "Input",ExpressionUUID->"5c03e8d9-6c62-44a6-a112-d0bb6089cc6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387101, 7629, 562, 8, 75, "Subsection",ExpressionUUID->"b95b7294-f927-4d54-a203-51ae9fd43f8b"],
Cell[387666, 7639, 2396, 67, 164, "Text",ExpressionUUID->"2e702749-2ecd-403a-a77f-95d35fae1efc"],
Cell[390065, 7708, 1021, 36, 79, "Text",ExpressionUUID->"6e09bff1-e7a1-4dae-84dc-4f11bc2a9b39"],
Cell[391089, 7746, 1111, 26, 101, "Text",ExpressionUUID->"d9775fc3-373d-4cca-9e8e-105d40dd4cc8"],
Cell[392203, 7774, 2208, 56, 195, "Text",ExpressionUUID->"b4bf67ea-ec50-44a8-b138-c585ed83da35"],
Cell[394414, 7832, 1227, 29, 101, "Text",ExpressionUUID->"0ec52b89-5192-423b-aede-5a704c5592ea"],
Cell[395644, 7863, 163, 3, 48, "Text",ExpressionUUID->"5d43a6ec-8a50-477a-96cc-01e8ab23edb3"],
Cell[CellGroupData[{
Cell[395832, 7870, 1649, 45, 226, "Input",ExpressionUUID->"7724f43b-3856-4fc2-add3-309522aa7a40"],
Cell[397484, 7917, 9597, 176, 327, "Output",ExpressionUUID->"05105c6a-fc5b-4138-9078-d16acad74df7"]
}, Open  ]],
Cell[407096, 8096, 5072, 163, 823, "Text",ExpressionUUID->"4d87058d-c2ab-4811-b25b-7bd4bdf8dbda"],
Cell[CellGroupData[{
Cell[412193, 8263, 2178, 59, 371, "Input",ExpressionUUID->"72989a56-983b-4f23-807a-52114b28d00b"],
Cell[414374, 8324, 408, 7, 45, "Output",ExpressionUUID->"99fa2556-298b-405b-9600-7a1808dd2069"],
Cell[414785, 8333, 411, 7, 45, "Output",ExpressionUUID->"679e5930-ef51-4f22-a656-770f0cd4f225"],
Cell[415199, 8342, 410, 7, 45, "Output",ExpressionUUID->"1a6fe9de-ec64-45a5-b7c9-2eebe9fff452"],
Cell[415612, 8351, 408, 7, 45, "Output",ExpressionUUID->"2c6d9397-0c0e-455b-b577-569254d9df1d"]
}, Open  ]],
Cell[416035, 8361, 172, 3, 48, "Text",ExpressionUUID->"e4392409-d6f9-4fcd-a3f9-22cacfff0131"],
Cell[CellGroupData[{
Cell[416232, 8368, 797, 21, 120, "Input",ExpressionUUID->"a5ea1a77-063b-4147-865e-698587e181ca"],
Cell[417032, 8391, 12521, 226, 331, "Output",ExpressionUUID->"92204178-200c-4f57-bffd-6c7e53845289"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

